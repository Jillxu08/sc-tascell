pattern-matching:
* XC-cubeへの変換 (SXC-cube?)

sc-preprocessor, c2sc:
* c2sc 半自動変換器
   -> SCプリプロセッサの機能をC並にする必要がある。
      (仕様をどうする？)
* ライブラリとユーザープログラムを何らかの方法で区別
  (引数を増やす変換とかで困る)

rule:
* 動的負荷分散
* チェックポインティング（マイグレーション）
   継続をファイルに書き出す or 他の計算環境に転送
  --> 長坂
   * 浮動小数点数，動的オブジェクトに対応
   
* sc2scにruleへのパラメータを与えられるようにする


−−−−−−−−−↓(一応)解決−−−−−−−−−
* lisp拡張でパターンマッチ実装 
  - rule2lsp を実装
* パターンマッチを利用したsc2cの実装
  - type-qualifierの仕様を勘違いしてたのでそれも修正
* シンボルをマクロ展開できない？ そのときのマクロの定義構文は？
   ○ - (defconstant x ... )？  
      - (defmacro x ... ), と (defmacro (x) ... ) で区別？
* [ ... ] の中にラムダ式をかけるようにする (rule2lspのみ)
* トップレベル以外でのinclude
* { :attr attr-list[function-attribute] } とか
