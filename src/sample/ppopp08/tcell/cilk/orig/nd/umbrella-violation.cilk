/* An example program that contains a violation of the umbrella locking discipline
   but no data race. */

/* Copyright (c) 2002 Massachusetts Institute of Technology
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

static const char *ident __attribute__((__unused__))
     = "$HeadURL: https://bradley.csail.mit.edu/svn/repos/cilk/5.4.3/examples/nd/umbrella-violation.cilk $ $LastChangedBy: bradley $ $Rev: 73 $ $Date: 2002-12-25 19:09:12 -0500 (Wed, 25 Dec 2002) $";

#include <cilk.h>
#include <stdio.h>

int x;
Cilk_lockvar A;
Cilk_lockvar B;

cilk void TwoSerialWrites()
{
  Cilk_lock(A);
  x ++;
  Cilk_unlock(A);
  Cilk_lock(B);
  x ++;
  Cilk_unlock(B);
}

cilk void ParallelWrite()
{
  Cilk_lock(A);
  Cilk_lock(B);
  x ++;
  Cilk_unlock(B);
  Cilk_unlock(A);
}

cilk int main ()
{
  x = 0;
  spawn TwoSerialWrites();
  spawn ParallelWrite();
  sync;

  printf("x %d\n", x);
  return 0;
}
