#!/bin/sh

usage()
{
    echo "usage: $0 [[-n <n_autorun_workers>] -c <worker_command>] [-w <n_wait_node>] -i <initial_task> -s <server_hostname> [-h <hostname>] [-p <port_num>] [-g <start_host>] [-l <alisp or sbcl>] [-C]"
    echo "Defaults:"
    echo "  -n: 1 (if '-c' is given)"
    echo "  -c: Must be specified when '-n' is given"
    echo "  -w: 1 if '-c' is not given, ='-n' if '-c' is given"
    echo "  -i,-s: Either must be given by cmdline"
    echo "  -h: The result of hostname command"
    echo "  -p: 9865"
    echo "  -g: If specified, use 'gxpc e' to invoke workers"
    echo "      (cf. http://www.logos.ic.i.u-tokyo.ac.jp/gxp/index.php)"
    echo "      Add the directories of the worker command and tcpcon to PATH"
    echo "  -l: alisp"
    echo "  -C: Force compile lisp files when specified"
    echo "Example:"
    echo "  $0 -n 2 -c ./fib-lw -i \"1 44\" -h localhost -p 9865 -l sbcl -g node200)"
    exit 1;
}


# defaults
SERVER_CMDLINE="server-cmdline.lsp"
PORT_NUM=9865
LISP=alisp

# getopts
while getopts n:c:w:i:s:h:p:g:l:C opt
do
    case ${opt} in
        n)
            NNODE=${OPTARG};;
        c)
            WORKER_CMD=${OPTARG};;
        w)
            N_WAIT_NODE=${OPTARG};;
        i)
            INITIAL_TASK=${OPTARG};;
        s)
            SERVER=${OPTARG};;
        h) 
            HOSTNAME=${OPTARG};;
        p)
            PORT_NUM=${OPTARG};;
        g)
            GXP_START_HOST=${OPTARG};;
        l)
            LISP=${OPTARG};;
        C)
            FORCE_COMPILE='-C'
        *)
            echo "Unknown command line option: ${opt}"
            usage $@;;
    esac
done

# Check options and set defaults if necessary
if [ "x$NNODE" = 'x' ]; then
    NNODE=0
else
    if [ "x$WORKER_CMD" = 'x' ]; then
        echo "WORKER_CMD (-c) must be specified when -n is given"
        usage $@
    fi
fi
if [ "x$N_WAIT_NODE" = 'x' ]; then
    if [ $NNODE = 0 ]; then
        N_WAIT_NODE=1
    else
        N_WAIT_NODE=$NNODE
    fi
fi
if [ "x$INITIAL_TASK" = 'x' -a "x$SERVER" = 'x' ]; then
    echo "Neither INITIAL_TASK (-i) nor SERVER (-s) is specified"
    usage $@
fi
if [ "x$INITIAL_TASK" != 'x' ]; then
    PARENT_OPT='-i'
    PARENT_OPT_ARG=$INITIAL_TASK
fi
if [ "x$SERVER" != 'x' ]; then
    PARENT_OPT='-s'
    PARENT_OPT_ARG=$SERVER
fi
if [ "x$HOSTNAME" = 'x' ]; then
    HOSTNAME=`hostname`
    echo "-h is not given. Use $HOSTNAME"
fi

set -x

# run
if [ $LISP = 'alisp' ]; then
    "$LISP" -batch -L $SERVER_CMDLINE -- -h $HOSTNAME -p $PORT_NUM -w $N_WAIT_NODE $PARENT_OPT "$PARENT_OPT_ARG" $FORCE_COMPILE &
elif [ $LISP = 'sbcl' ]; then
    "$LISP" --script $SERVER_CMDLINE -h $HOSTNAME -p $PORT_NUM -w $N_WAIT_NODE $PARENT_OPT "$PARENT_OPT_ARG" $FORCE_COMPILE &
else
    echo "Unknown Lisp Implementation: $LISP"
    exit 1
fi

if [ $NNODE -gt 0 ]; then
    sleep 5
    if [ "x$GXP_START_HOST" = 'x' ]; then
        i=1
        set -x
        while [ $i -lt $NNODE ]; do
            ./tcpcon $HOSTNAME $PORT_NUM $WORKER_CMD &
            sleep 1
            i=`expr $i + 1`
        done
        # ./tcpcon $HOSTNAME $PORT_NUM $WORKER_CMD
        $WORKER_CMD -s $HOSTNAME -p $PORT_NUM
    else
        HOSTS=`mk-hostnames.pl $GXP_START_HOST $NNODE`
        gxpc e -h $HOSTS tcpcon $HOSTNAME $PORT_NUM $WORKER_CMD
    fi
fi
