「#define の定義内容も展開してから c2sc に適用する．」
の実装方針．

     (1)
*.h ------> *.se1 (マクロ以外)
      |
      ----> *.se2 (#define の羅列だけ)
      | 
      ----> *.se3 "#pragma c2sc_macroname f(x,y)"
                  "<repl-list>                  "

     'cat *.se2 *.se3'          (2)
*.se2 ----------------> *.se4 ---------> *.se5 (#pragma と 展開済み repl-list)
           |
*.se3 ------

        (3)                              (4)
*.se5 -------> *.se6 (展開済み #define) -----> *.se7 (%defmacro/constant-cexp)
 
     'cat *.se1 *.se7'
*.se1 ----------------> *.se
           |
*.se7 ------



(1) cpp_std -e1 -D'time_t=double' -D'pid_t=long' -D'__complex__=' -D'__extension__(x)=x' -D'__attribute__(x)=' -D'__inline=' -D'__asm(x)=' $*
(2) cpp_std -e2   (ふつー のプリプロセス − predefined-macro)
(3) awk とか perl とかで簡単に書けそう
(4) cpp_std -e3   (predefinedは除くこと)
