CL-USER> (c2sc "posix-out/ALL.se")
Trying c2sc
#define time_t double
==> sc::double
Trying c2sc
#define pid_t long
==> sc::long
Trying c2sc
#define __complex__ 
==> <gave up...>
Trying c2sc
#define __extension__(x) x
==> csym::x
Trying c2sc
#define __attribute__(x) 
==> <gave up...>
Trying c2sc
#define __inline 
==> <gave up...>
Trying c2sc
#define __asm(x) 
==> <gave up...>
Trying c2sc
#define i386 1
==> 1
Trying c2sc
#define unix 1
==> 1
Trying c2sc
#define __i386 1
==> 1
Trying c2sc
#define __i386__ 1
==> 1
Trying c2sc
#define __unix 1
==> 1
Trying c2sc
#define __unix__ 1
==> 1
Trying c2sc
#define __fREEbsd__ 1
==> 1
Trying c2sc
#define __GNUC__ 3
==> 3
Trying c2sc
#define __GNUC_MINOR__ 4
==> 4
Trying c2sc
#define __SIZE_TYPE__ unsigned int
==> sc::unsigned-int
Trying c2sc
#define __PTRDIFF_TYPE__ int
==> sc::int
Trying c2sc
#define __WCHAR_TYPE__ int
==> sc::int
Trying c2sc
#define __GNUG__ 3
==> 3
Trying c2sc
#define __LINE__ -1234567890
==> (sc::- 1234567890)
Trying c2sc
#define __FILE__ 
==> <gave up...>
Trying c2sc
#define __DATE__ "Apr  4 2005"
==> "Apr  4 2005"
Trying c2sc
#define __TIME__ "17:10:49"
==> "17:10:49"
Trying c2sc
#define __STDC__ 1
==> 1
Trying c2sc
#define __STDC_HOSTED__ 1
==> 1
Trying c2sc
#define __MCPP 2
==> 2
Trying c2sc
#define _SYS_AIO_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_TIME_H_ 
==> <gave up...>
Trying c2sc
#define _SYS__TIMEVAL_H_ 
==> <gave up...>
Trying c2sc
#define _SYS__TYPES_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_CDEFS_H_ 
==> <gave up...>
Trying c2sc
#define __BEGIN_DECLS 
==> <gave up...>
Trying c2sc
#define __END_DECLS 
==> <gave up...>
Trying c2sc
#define __GNUC_PREREQ__(ma,mi) ( 3 > ( ma ) || 3 == ( ma ) && 4 >= ( mi ) )
==> (sc::or (sc::> 3 csym::ma)
     (sc::and (sc::== 3 csym::ma) (sc::>= 4 csym::mi)))
Trying c2sc
#define __P(protos) protos
==> csym::protos
Trying c2sc
#define __CONCAT1(x,y) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define __CONCAT(x,y) xy
==> csym::xy
Trying c2sc
#define __STRING(x) _C2SC_STRINGIFY ( x )
==> (csym::|_@c2sc_stringify| csym::x)
Trying c2sc
#define __XSTRING(x) "x"
==> "x"
Trying c2sc
#define __const const
==> (sc::const sc::int)
Trying c2sc
#define __signed signed
==> sc::signed-int
Trying c2sc
#define __volatile volatile
==> (sc::volatile sc::int)
Trying c2sc
#define __dead2 
==> <gave up...>
Trying c2sc
#define __pure2 
==> <gave up...>
Trying c2sc
#define __unused 
==> <gave up...>
Trying c2sc
#define __used 
==> <gave up...>
Trying c2sc
#define __packed 
==> <gave up...>
Trying c2sc
#define __aligned(x) 
==> <gave up...>
Trying c2sc
#define __section(x) 
==> <gave up...>
Trying c2sc
#define __pure 
==> <gave up...>
Trying c2sc
#define __always_inline 
==> <gave up...>
Trying c2sc
#define __nonnull(x) 
==> <gave up...>
Trying c2sc
#define __LONG_LONG_SUPPORTED 
==> <gave up...>
Trying c2sc
#define __restrict 
==> <gave up...>
Trying c2sc
#define __predict_true(exp) __builtin_expect ( ( exp ) , 1 )
==> (csym::__builtin_expect csym::exp 1)
Trying c2sc
#define __predict_false(exp) __builtin_expect ( ( exp ) , 0 )
==> (csym::__builtin_expect csym::exp 0)
Trying c2sc
#define __offsetof(type,field) ( ( size_t ) ( & ( ( type * ) 0 ) -> field ) )
 1:(csym::size_t (ptr (fref (mref (cast (ptr csym::type) 0)) csym::field)))
[typename --- ]
[not typename --- size_t]
 2:(cast csym::size_t (ptr (fref (mref (cast (ptr csym::type) 0)) csym::field)))
[typename --- size_t]
[not typename --- ]
Select number? 2
==> (sc::cast csym::size_t
                    (sc::ptr
                     (sc::fref (sc::mref (sc::cast (sc::ptr csym::type) 0))
                      csym::field)))
Trying c2sc
#define __rangeof(type,start,end) ( ( ( size_t ) ( & ( ( type * ) 0 ) -> end ) ) - ( ( size_t ) ( & ( ( type * ) 0 ) -> start ) ) )
 1:(- (csym::size_t (ptr (fref (mref (cast (ptr csym::type) 0)) csym::end)))
 (csym::size_t (ptr (fref (mref (cast (ptr csym::type) 0)) csym::start))))
[typename --- ]
[not typename --- size_t]
 2:(- (cast csym::size_t (ptr (fref (mref (cast (ptr csym::type) 0)) csym::end)))
 (cast csym::size_t (ptr (fref (mref (cast (ptr csym::type) 0)) csym::start))))
[typename --- size_t]
[not typename --- ]
Select number? 2
==> (sc::-
                    (sc::cast csym::size_t
                     (sc::ptr
                      (sc::fref (sc::mref (sc::cast (sc::ptr csym::type) 0))
                       csym::end)))
                    (sc::cast csym::size_t
                     (sc::ptr
                      (sc::fref (sc::mref (sc::cast (sc::ptr csym::type) 0))
                       csym::start))))
Trying c2sc
#define __printflike(fmtarg,firstvararg) 
==> <gave up...>
Trying c2sc
#define __scanflike(fmtarg,firstvararg) 
==> <gave up...>
Trying c2sc
#define __printf0like(fmtarg,firstvararg) 
==> <gave up...>
Trying c2sc
#define __strong_reference(sym,aliassym) extern __typeof ( sym ) aliassym ;
==> <gave up...>
Trying c2sc
#define __weak_reference(sym,alias) __asm__ ( ".weak " _C2SC_STRINGIFY ( alias ) ) ; __asm__ ( ".equ " _C2SC_STRINGIFY ( alias ) ", " _C2SC_STRINGIFY ( sym ) )
==> <gave up...>
Trying c2sc
#define __warn_references(sym,msg) __asm__ ( ".section .gnu.warning." _C2SC_STRINGIFY ( sym ) ) ; __asm__ ( ".asciz \"" msg "\"" ) ; __asm__ ( ".previous" )
==> <gave up...>
Trying c2sc
#define __IDSTRING(name,string) __asm__ ( ".ident\t\"" string "\"" )
==> <gave up...>
Trying c2sc
#define __FBSDID(s) __asm__ ( ".ident\t\"" s "\"" )
==> <gave up...>
Trying c2sc
#define __RCSID(s) __asm__ ( ".ident\t\"" s "\"" )
==> <gave up...>
Trying c2sc
#define __RCSID_SOURCE(s) __asm__ ( ".ident\t\"" s "\"" )
==> <gave up...>
Trying c2sc
#define __SCCSID(s) __asm__ ( ".ident\t\"" s "\"" )
==> <gave up...>
Trying c2sc
#define __COPYRIGHT(s) __asm__ ( ".ident\t\"" s "\"" )
==> <gave up...>
Trying c2sc
#define __DECONST(type,var) ( ( type ) ( uintptr_t ) ( const void * ) ( var ) )
==> (sc::cast csym::type
     (sc::cast csym::uintptr_t
      (sc::cast (sc::ptr (sc::const sc::void)) csym::var)))
Trying c2sc
#define __DEVOLATILE(type,var) ( ( type ) ( uintptr_t ) ( volatile void * ) ( var ) )
==> (sc::cast csym::type
     (sc::cast csym::uintptr_t
      (sc::cast (sc::ptr (sc::volatile sc::void)) csym::var)))
Trying c2sc
#define __DEQUALIFY(type,var) ( ( type ) ( uintptr_t ) ( const volatile void * ) ( var ) )
==> (sc::cast csym::type
     (sc::cast csym::uintptr_t
      (sc::cast (sc::ptr (sc::const sc::volatile sc::void)) csym::var)))
Trying c2sc
#define __POSIX_VISIBLE 200112
==> 200112
Trying c2sc
#define __XSI_VISIBLE 600
==> 600
Trying c2sc
#define __BSD_VISIBLE 1
==> 1
Trying c2sc
#define __ISO_C_VISIBLE 1999
==> 1999
Trying c2sc
#define _MACHINE__TYPES_H_ 
==> <gave up...>
Trying c2sc
#define __GNUC_VA_LIST 
==> <gave up...>
Trying c2sc
#define _SUSECONDS_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _TIME_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _SYS_TYPES_H_ 
==> <gave up...>
Trying c2sc
#define _MACHINE_ENDIAN_H_ 
==> <gave up...>
Trying c2sc
#define _QUAD_HIGHWORD 1
==> 1
Trying c2sc
#define _QUAD_LOWWORD 0
==> 0
Trying c2sc
#define _LITTLE_ENDIAN 1234
==> 1234
Trying c2sc
#define _BIG_ENDIAN 4321
==> 4321
Trying c2sc
#define _PDP_ENDIAN 3412
==> 3412
Trying c2sc
#define _BYTE_ORDER 1234
==> 1234
Trying c2sc
#define LITTLE_ENDIAN 1234
==> 1234
Trying c2sc
#define BIG_ENDIAN 4321
==> 4321
Trying c2sc
#define PDP_ENDIAN 3412
==> 3412
Trying c2sc
#define BYTE_ORDER 1234
==> 1234
Trying c2sc
#define __word_swap_int_var(x) { register __uint32_t __X = ( x ) ; ; __X ; }
==> ((sc::begin (sc::register-def csym::|__@x| csym::__uint32_t csym::x) list
      nil csym::|__@x|))
Trying c2sc
#define __word_swap_int(x) { register __uint32_t __X = ( x ) ; ; __X ; }
==> ((sc::begin (sc::register-def csym::|__@x| csym::__uint32_t csym::x) list
      nil csym::|__@x|))
Trying c2sc
#define __byte_swap_int_var(x) { register __uint32_t __X = ( x ) ; ; __X ; }
==> ((sc::begin (sc::register-def csym::|__@x| csym::__uint32_t csym::x) list
      nil csym::|__@x|))
Trying c2sc
#define __byte_swap_int(x) { register __uint32_t __X = ( x ) ; ; __X ; }
==> ((sc::begin (sc::register-def csym::|__@x| csym::__uint32_t csym::x) list
      nil csym::|__@x|))
Trying c2sc
#define __byte_swap_word_var(x) { register __uint16_t __X = ( x ) ; ; __X ; }
==> ((sc::begin (sc::register-def csym::|__@x| csym::__uint16_t csym::x) list
      nil csym::|__@x|))
Trying c2sc
#define __byte_swap_word(x) { register __uint16_t __X = ( x ) ; ; __X ; }
==> ((sc::begin (sc::register-def csym::|__@x| csym::__uint16_t csym::x) list
      nil csym::|__@x|))
Trying c2sc
#define __htonl(x) __bswap32 ( x )
==> (csym::__bswap32 csym::x)
Trying c2sc
#define __htons(x) __bswap16 ( x )
==> (csym::__bswap16 csym::x)
Trying c2sc
#define __ntohl(x) __bswap32 ( x )
==> (csym::__bswap32 csym::x)
Trying c2sc
#define __ntohs(x) __bswap16 ( x )
==> (csym::__bswap16 csym::x)
Trying c2sc
#define _INT8_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _INT16_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _INT32_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _INT64_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _UINT8_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _UINT16_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _UINT32_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _UINT64_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _INTPTR_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _CLOCK_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _CLOCKID_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _DEV_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _FFLAGS_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _FSBLKCNT_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _GID_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _IN_ADDR_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _IN_PORT_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _ID_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _INO_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _KEY_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _LWPID_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _MODE_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _NLINK_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _OFF_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _PID_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _RLIM_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _SIZE_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _SSIZE_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _TIMER_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _UID_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _USECONDS_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _SYS_SELECT_H_ 
==> <gave up...>
Trying c2sc
#define _SYS__SIGSET_H_ 
==> <gave up...>
Trying c2sc
#define _SIG_WORDS 4
==> 4
Trying c2sc
#define _SIG_MAXSIG 128
==> 128
Trying c2sc
#define _SIG_IDX(sig) ( ( sig ) - 1 )
 1:(- csym::sig 1)
[typename --- ]
[not typename --- sig]
 2:(cast csym::sig (- 1))
[typename --- sig]
[not typename --- ]
Select number? 1
==> (sc::- csym::sig 1)
Trying c2sc
#define _SIG_WORD(sig) ( ( ( sig ) - 1 ) >> 5 )
 1:(>> (- csym::sig 1) 5)
[typename --- ]
[not typename --- sig]
 2:(>> (cast csym::sig (- 1)) 5)
[typename --- sig]
[not typename --- ]
Select number? 1
==> (sc::>> (sc::- csym::sig 1) 5)
Trying c2sc
#define _SIG_BIT(sig) ( 1 << ( ( ( sig ) - 1 ) & 31 ) )
 1:(<< 1 (bit-and (- csym::sig 1) 31))
[typename --- ]
[not typename --- sig]
 2:(<< 1 (bit-and (cast csym::sig (- 1)) 31))
[typename --- sig]
[not typename --- ]
Select number? 1
==> (sc::<< 1 (sc::bit-and (sc::- csym::sig 1) 31))
Trying c2sc
#define _SIG_VALID(sig) ( ( sig ) <= 128 && ( sig ) > 0 )
==> (sc::and (sc::<= csym::sig 128) (sc::> csym::sig 0))
Trying c2sc
#define _SYS_TIMESPEC_H_ 
==> <gave up...>
Trying c2sc
#define TIMEVAL_TO_TIMESPEC(tv,ts) do { ( ts ) -> tv_sec = ( tv ) -> tv_sec ; ( ts ) -> tv_nsec = ( tv ) -> tv_usec * 1000 ; } while ( 0 )
==> ((sc::do-while 0
      (sc::= (sc::fref (sc::mref csym::ts) csym::tv_sec)
       (sc::fref (sc::mref csym::tv) csym::tv_sec))
      (sc::= (sc::fref (sc::mref csym::ts) csym::tv_nsec)
       (sc::* (sc::fref (sc::mref csym::tv) csym::tv_usec) 1000))))
Trying c2sc
#define TIMESPEC_TO_TIMEVAL(tv,ts) do { ( tv ) -> tv_sec = ( ts ) -> tv_sec ; ( tv ) -> tv_usec = ( ts ) -> tv_nsec / 1000 ; } while ( 0 )
==> ((sc::do-while 0
      (sc::= (sc::fref (sc::mref csym::tv) csym::tv_sec)
       (sc::fref (sc::mref csym::ts) csym::tv_sec))
      (sc::= (sc::fref (sc::mref csym::tv) csym::tv_usec)
       (sc::/ (sc::fref (sc::mref csym::ts) csym::tv_nsec) 1000))))
Trying c2sc
#define _SIGSET_T_DECLARED 
==> <gave up...>
Trying c2sc
#define FD_SETSIZE 1024U
==> (sc::cast sc::unsigned-int 1024)
Trying c2sc
#define _NFDBITS (sizeof(__fd_mask) * 8)
==> (sc::* (sc::sizeof csym::__fd_mask) 8)
Trying c2sc
#define NFDBITS (sizeof(__fd_mask) * 8)
==> (sc::* (sc::sizeof csym::__fd_mask) 8)
Trying c2sc
#define _howmany(x,y) ( ( ( x ) + ( ( y ) - 1 ) ) / ( y ) )
 1:(/ (+ csym::x (- csym::y 1)) csym::y)
[typename --- ]
[not typename --- x]
 2:(/ (cast csym::x (+ (- csym::y 1))) csym::y)
[typename --- x]
[not typename --- ]
Select number? 1
==> (sc::/ (sc::+ csym::x (sc::- csym::y 1)) csym::y)
Trying c2sc
#define fds_bits __fds_bits
==> csym::__fds_bits
Trying c2sc
#define __fdset_mask(n) ( ( __fd_mask ) 1 << ( ( n ) % ( sizeof ( __fd_mask ) * 8 ) ) )
==> (sc::<< (sc::cast csym::__fd_mask 1)
     (sc::% csym::n (sc::* (sc::sizeof csym::__fd_mask) 8)))
Trying c2sc
#define FD_CLR(n,p) ( ( p ) -> __fds_bits [ ( n ) / ( sizeof ( __fd_mask ) * 8 ) ] &= ~ ( ( __fd_mask ) 1 << ( ( n ) % ( sizeof ( __fd_mask ) * 8 ) ) ) )
==> (sc::bit-and=
     (sc::aref (sc::fref (sc::mref csym::p) csym::__fds_bits)
      (sc::/ csym::n (sc::* (sc::sizeof csym::__fd_mask) 8)))
     (sc::bit-not
      (sc::<< (sc::cast csym::__fd_mask 1)
       (sc::% csym::n (sc::* (sc::sizeof csym::__fd_mask) 8)))))
Trying c2sc
#define FD_COPY(f,t) ( void ) ( * ( t ) = * ( f ) )
==> (sc::cast sc::void (sc::= (sc::mref csym::t) (sc::mref csym::f)))
Trying c2sc
#define FD_ISSET(n,p) ( ( p ) -> __fds_bits [ ( n ) / ( sizeof ( __fd_mask ) * 8 ) ] & ( ( __fd_mask ) 1 << ( ( n ) % ( sizeof ( __fd_mask ) * 8 ) ) ) )
==> (sc::bit-and
     (sc::aref (sc::fref (sc::mref csym::p) csym::__fds_bits)
      (sc::/ csym::n (sc::* (sc::sizeof csym::__fd_mask) 8)))
     (sc::<< (sc::cast csym::__fd_mask 1)
      (sc::% csym::n (sc::* (sc::sizeof csym::__fd_mask) 8))))
Trying c2sc
#define FD_SET(n,p) ( ( p ) -> __fds_bits [ ( n ) / ( sizeof ( __fd_mask ) * 8 ) ] |= ( ( __fd_mask ) 1 << ( ( n ) % ( sizeof ( __fd_mask ) * 8 ) ) ) )
==> (sc::bit-or=
     (sc::aref (sc::fref (sc::mref csym::p) csym::__fds_bits)
      (sc::/ csym::n (sc::* (sc::sizeof csym::__fd_mask) 8)))
     (sc::<< (sc::cast csym::__fd_mask 1)
      (sc::% csym::n (sc::* (sc::sizeof csym::__fd_mask) 8))))
Trying c2sc
#define FD_ZERO(p) do { fd_set * _p ; __size_t _n ; _p = ( p ) ; _n = ( ( ( 1024U ) + ( ( ( sizeof ( __fd_mask ) * 8 ) ) - 1 ) ) / ( ( sizeof ( __fd_mask ) * 8 ) ) ) ; while ( _n > 0 ) _p -> __fds_bits [ -- _n ] = 0 ; } while ( 0 )
 1:((do-while 0 (* csym::fd_set csym::_p) (decl csym::_n csym::__size_t)
  (= csym::_p csym::p)
  (= csym::_n
   (/ (+ (cast unsigned-int 1024) (- (* (sizeof csym::__fd_mask) 8) 1))
    (* (sizeof csym::__fd_mask) 8)))
  (while (> csym::_n 0)
   (= (aref (fref (mref csym::_p) csym::__fds_bits) (-- csym::_n)) 0))))
[typename --- ]
[not typename --- fd_set, _p]
 2:((do-while 0 (* csym::fd_set csym::_p) (decl csym::_n csym::__size_t)
  (def c2sc::$abstract csym::_p csym::p)
  (= csym::_n
   (/ (+ (cast unsigned-int 1024) (- (* (sizeof csym::__fd_mask) 8) 1))
    (* (sizeof csym::__fd_mask) 8)))
  (while (> csym::_n 0)
   (= (aref (fref (mref csym::_p) csym::__fds_bits) (-- csym::_n)) 0))))
[typename --- _p]
[not typename --- fd_set]
 3:((do-while 0 (decl csym::_p (ptr csym::fd_set)) (decl csym::_n csym::__size_t)
  (= csym::_p csym::p)
  (= csym::_n
   (/ (+ (cast unsigned-int 1024) (- (* (sizeof csym::__fd_mask) 8) 1))
    (* (sizeof csym::__fd_mask) 8)))
  (while (> csym::_n 0)
   (= (aref (fref (mref csym::_p) csym::__fds_bits) (-- csym::_n)) 0))))
[typename --- fd_set]
[not typename --- ]
Select number? 3
==> ((sc::do-while 0 (sc::decl csym::_p (sc::ptr csym::fd_set))
                     (sc::decl csym::_n csym::__size_t)
                     (sc::= csym::_p csym::p)
                     (sc::= csym::_n
                      (sc::/
                       (sc::+ (sc::cast sc::unsigned-int 1024)
                        (sc::- (sc::* (sc::sizeof csym::__fd_mask) 8) 1))
                       (sc::* (sc::sizeof csym::__fd_mask) 8)))
                     (sc::while (sc::> csym::_n 0)
                      (sc::=
                       (sc::aref
                        (sc::fref (sc::mref csym::_p) csym::__fds_bits)
                        (sc::-- csym::_n))
                       0))))
Trying c2sc
#define _SELECT_DECLARED 
==> <gave up...>
Trying c2sc
#define major(x) ( ( int ) ( ( ( u_int ) ( x ) >> 8 ) & 0xff ) )
 1:(cast int (bit-and (>> (csym::u_int csym::x) 8) 255))
[typename --- ]
[not typename --- u_int]
 2:(cast int (bit-and (>> (cast csym::u_int csym::x) 8) 255))
[typename --- u_int]
[not typename --- x]
Select number? 2
==> (sc::cast sc::int
                    (sc::bit-and (sc::>> (sc::cast csym::u_int csym::x) 8) 255))
Trying c2sc
#define minor(x) ( ( int ) ( ( x ) & 0xffff00ff ) )
 1:(cast int (bit-and csym::x 4294902015))
[typename --- ]
[not typename --- x]
 2:(cast int (cast csym::x (ptr 4294902015)))
[typename --- x]
[not typename --- ]
Select number? 1
==> (sc::cast sc::int (sc::bit-and csym::x 4294902015))
Trying c2sc
#define makedev(x,y) ( ( dev_t ) ( ( ( x ) << 8 ) | ( y ) ) )
 1:(csym::dev_t (bit-or (<< csym::x 8) csym::y))
[typename --- ]
[not typename --- dev_t]
 2:(cast csym::dev_t (bit-or (<< csym::x 8) csym::y))
[typename --- dev_t]
[not typename --- ]
Select number? 2
==> (sc::cast csym::dev_t
                    (sc::bit-or (sc::<< csym::x 8) csym::y))
Trying c2sc
#define _FTRUNCATE_DECLARED 
==> <gave up...>
Trying c2sc
#define _LSEEK_DECLARED 
==> <gave up...>
Trying c2sc
#define _MMAP_DECLARED 
==> <gave up...>
Trying c2sc
#define _TRUNCATE_DECLARED 
==> <gave up...>
Trying c2sc
#define DST_NONE 0
==> 0
Trying c2sc
#define DST_USA 1
==> 1
Trying c2sc
#define DST_AUST 2
==> 2
Trying c2sc
#define DST_WET 3
==> 3
Trying c2sc
#define DST_MET 4
==> 4
Trying c2sc
#define DST_EET 5
==> 5
Trying c2sc
#define DST_CAN 6
==> 6
Trying c2sc
#define timerclear(tvp) ( ( tvp ) -> tv_sec = ( tvp ) -> tv_usec = 0 )
==> (sc::= (sc::fref (sc::mref csym::tvp) csym::tv_sec)
     (sc::= (sc::fref (sc::mref csym::tvp) csym::tv_usec) 0))
Trying c2sc
#define timerisset(tvp) ( ( tvp ) -> tv_sec || ( tvp ) -> tv_usec )
==> (sc::or (sc::fref (sc::mref csym::tvp) csym::tv_sec)
     (sc::fref (sc::mref csym::tvp) csym::tv_usec))
Trying c2sc
#define timercmp(tvp,uvp,cmp) ( ( ( tvp ) -> tv_sec == ( uvp ) -> tv_sec ) ? ( ( tvp ) -> tv_usec cmp ( uvp ) -> tv_usec ) : ( ( tvp ) -> tv_sec cmp ( uvp ) -> tv_sec ) )
==> <gave up...>
Trying c2sc
#define timeradd(tvp,uvp,vvp) do { ( vvp ) -> tv_sec = ( tvp ) -> tv_sec + ( uvp ) -> tv_sec ; ( vvp ) -> tv_usec = ( tvp ) -> tv_usec + ( uvp ) -> tv_usec ; if ( ( vvp ) -> tv_usec >= 1000000 ) { ( vvp ) -> tv_sec ++ ; ( vvp ) -> tv_usec -= 1000000 ; } } while ( 0 )
==> ((sc::do-while 0
      (sc::= (sc::fref (sc::mref csym::vvp) csym::tv_sec)
       (sc::+ (sc::fref (sc::mref csym::tvp) csym::tv_sec)
        (sc::fref (sc::mref csym::uvp) csym::tv_sec)))
      (sc::= (sc::fref (sc::mref csym::vvp) csym::tv_usec)
       (sc::+ (sc::fref (sc::mref csym::tvp) csym::tv_usec)
        (sc::fref (sc::mref csym::uvp) csym::tv_usec)))
      (sc::if (sc::>= (sc::fref (sc::mref csym::vvp) csym::tv_usec) 1000000)
       (sc::begin (sc::inc (sc::fref (sc::mref csym::vvp) csym::tv_sec))
        (sc::-= (sc::fref (sc::mref csym::vvp) csym::tv_usec) 1000000)))))
Trying c2sc
#define timersub(tvp,uvp,vvp) do { ( vvp ) -> tv_sec = ( tvp ) -> tv_sec - ( uvp ) -> tv_sec ; ( vvp ) -> tv_usec = ( tvp ) -> tv_usec - ( uvp ) -> tv_usec ; if ( ( vvp ) -> tv_usec < 0 ) { ( vvp ) -> tv_sec -- ; ( vvp ) -> tv_usec += 1000000 ; } } while ( 0 )
==> ((sc::do-while 0
      (sc::= (sc::fref (sc::mref csym::vvp) csym::tv_sec)
       (sc::- (sc::fref (sc::mref csym::tvp) csym::tv_sec)
        (sc::fref (sc::mref csym::uvp) csym::tv_sec)))
      (sc::= (sc::fref (sc::mref csym::vvp) csym::tv_usec)
       (sc::- (sc::fref (sc::mref csym::tvp) csym::tv_usec)
        (sc::fref (sc::mref csym::uvp) csym::tv_usec)))
      (sc::if (sc::< (sc::fref (sc::mref csym::vvp) csym::tv_usec) 0)
       (sc::begin (sc::dec (sc::fref (sc::mref csym::vvp) csym::tv_sec))
        (sc::+= (sc::fref (sc::mref csym::vvp) csym::tv_usec) 1000000)))))
Trying c2sc
#define ITIMER_REAL 0
==> 0
Trying c2sc
#define ITIMER_VIRTUAL 1
==> 1
Trying c2sc
#define ITIMER_PROF 2
==> 2
Trying c2sc
#define CLOCK_REALTIME 0
==> 0
Trying c2sc
#define CLOCK_VIRTUAL 1
==> 1
Trying c2sc
#define CLOCK_PROF 2
==> 2
Trying c2sc
#define CLOCK_MONOTONIC 4
==> 4
Trying c2sc
#define TIMER_RELTIME 0x0
==> 0
Trying c2sc
#define TIMER_ABSTIME 0x1
==> 1
Trying c2sc
#define _TIME_H_ 
==> <gave up...>
Trying c2sc
#define NULL ((void *)0)
==> (sc::cast (sc::ptr sc::void) 0)
Trying c2sc
#define CLK_TCK 128
==> 128
Trying c2sc
#define CLOCKS_PER_SEC 128
==> 128
Trying c2sc
#define _SYS_SIGNAL_H_ 
==> <gave up...>
Trying c2sc
#define _MACHINE_SIGNAL_H_ 
==> <gave up...>
Trying c2sc
#define MINSIGSTKSZ (512 * 4)
==> (sc::* 512 4)
Trying c2sc
#define _MACHINE_TRAP_H_ 
==> <gave up...>
Trying c2sc
#define T_PRIVINFLT 1
==> 1
Trying c2sc
#define T_BPTFLT 3
==> 3
Trying c2sc
#define T_ARITHTRAP 6
==> 6
Trying c2sc
#define T_PROTFLT 9
==> 9
Trying c2sc
#define T_TRCTRAP 10
==> 10
Trying c2sc
#define T_PAGEFLT 12
==> 12
Trying c2sc
#define T_ALIGNFLT 14
==> 14
Trying c2sc
#define T_DIVIDE 18
==> 18
Trying c2sc
#define T_NMI 19
==> 19
Trying c2sc
#define T_OFLOW 20
==> 20
Trying c2sc
#define T_BOUND 21
==> 21
Trying c2sc
#define T_DNA 22
==> 22
Trying c2sc
#define T_DOUBLEFLT 23
==> 23
Trying c2sc
#define T_FPOPFLT 24
==> 24
Trying c2sc
#define T_TSSFLT 25
==> 25
Trying c2sc
#define T_SEGNPFLT 26
==> 26
Trying c2sc
#define T_STKFLT 27
==> 27
Trying c2sc
#define T_MCHK 28
==> 28
Trying c2sc
#define T_XMMFLT 29
==> 29
Trying c2sc
#define T_RESERVED 30
==> 30
Trying c2sc
#define ILL_RESAD_FAULT T_RESADFLT
==> csym::|@t_resadflt|
Trying c2sc
#define ILL_PRIVIN_FAULT 1
==> 1
Trying c2sc
#define ILL_RESOP_FAULT T_RESOPFLT
==> csym::|@t_resopflt|
Trying c2sc
#define ILL_ALIGN_FAULT 14
==> 14
Trying c2sc
#define ILL_FPOP_FAULT 24
==> 24
Trying c2sc
#define FPE_INTOVF 1
==> 1
Trying c2sc
#define FPE_INTDIV 2
==> 2
Trying c2sc
#define FPE_FLTDIV 3
==> 3
Trying c2sc
#define FPE_FLTOVF 4
==> 4
Trying c2sc
#define FPE_FLTUND 5
==> 5
Trying c2sc
#define FPE_FLTRES 6
==> 6
Trying c2sc
#define FPE_FLTINV 7
==> 7
Trying c2sc
#define FPE_FLTSUB 8
==> 8
Trying c2sc
#define FPE_INTOVF_TRAP 0x1
==> 1
Trying c2sc
#define FPE_INTDIV_TRAP 0x2
==> 2
Trying c2sc
#define FPE_FLTDIV_TRAP 0x3
==> 3
Trying c2sc
#define FPE_FLTOVF_TRAP 0x4
==> 4
Trying c2sc
#define FPE_FLTUND_TRAP 0x5
==> 5
Trying c2sc
#define FPE_FPU_NP_TRAP 0x6
==> 6
Trying c2sc
#define FPE_SUBRNG_TRAP 0x7
==> 7
Trying c2sc
#define BUS_PAGE_FAULT 12
==> 12
Trying c2sc
#define BUS_SEGNP_FAULT 26
==> 26
Trying c2sc
#define BUS_STK_FAULT 27
==> 27
Trying c2sc
#define BUS_SEGM_FAULT 30
==> 30
Trying c2sc
#define T_USER 0x100
==> 256
Trying c2sc
#define sc_sp sc_esp
==> csym::sc_esp
Trying c2sc
#define sc_fp sc_ebp
==> csym::sc_ebp
Trying c2sc
#define sc_pc sc_eip
==> csym::sc_eip
Trying c2sc
#define sc_ps sc_efl
==> csym::sc_efl
Trying c2sc
#define sc_eflags sc_efl
==> csym::sc_efl
Trying c2sc
#define SIGHUP 1
==> 1
Trying c2sc
#define SIGINT 2
==> 2
Trying c2sc
#define SIGQUIT 3
==> 3
Trying c2sc
#define SIGILL 4
==> 4
Trying c2sc
#define SIGTRAP 5
==> 5
Trying c2sc
#define SIGABRT 6
==> 6
Trying c2sc
#define SIGIOT 6
==> 6
Trying c2sc
#define SIGEMT 7
==> 7
Trying c2sc
#define SIGFPE 8
==> 8
Trying c2sc
#define SIGKILL 9
==> 9
Trying c2sc
#define SIGBUS 10
==> 10
Trying c2sc
#define SIGSEGV 11
==> 11
Trying c2sc
#define SIGSYS 12
==> 12
Trying c2sc
#define SIGPIPE 13
==> 13
Trying c2sc
#define SIGALRM 14
==> 14
Trying c2sc
#define SIGTERM 15
==> 15
Trying c2sc
#define SIGURG 16
==> 16
Trying c2sc
#define SIGSTOP 17
==> 17
Trying c2sc
#define SIGTSTP 18
==> 18
Trying c2sc
#define SIGCONT 19
==> 19
Trying c2sc
#define SIGCHLD 20
==> 20
Trying c2sc
#define SIGTTIN 21
==> 21
Trying c2sc
#define SIGTTOU 22
==> 22
Trying c2sc
#define SIGIO 23
==> 23
Trying c2sc
#define SIGXCPU 24
==> 24
Trying c2sc
#define SIGXFSZ 25
==> 25
Trying c2sc
#define SIGVTALRM 26
==> 26
Trying c2sc
#define SIGPROF 27
==> 27
Trying c2sc
#define SIGWINCH 28
==> 28
Trying c2sc
#define SIGINFO 29
==> 29
Trying c2sc
#define SIGUSR1 30
==> 30
Trying c2sc
#define SIGUSR2 31
==> 31
Trying c2sc
#define SIGTHR 32
==> 32
Trying c2sc
#define SIG_DFL ((__sighandler_t *)0)
==> (sc::cast (sc::ptr csym::__sighandler_t) 0)
Trying c2sc
#define SIG_IGN ((__sighandler_t *)1)
==> (sc::cast (sc::ptr csym::__sighandler_t) 1)
Trying c2sc
#define SIG_ERR ((__sighandler_t *)-1)
==> (sc::cast (sc::ptr csym::__sighandler_t) (sc::- 1))
Trying c2sc
#define sigev_signo __sigev_u.__sigev_signo
==> (sc::fref csym::__sigev_u csym::__sigev_signo)
Trying c2sc
#define sigev_notify_kqueue __sigev_u.__sigev_notify_kqueue
==> (sc::fref csym::__sigev_u csym::__sigev_notify_kqueue)
Trying c2sc
#define SIGEV_NONE 0
==> 0
Trying c2sc
#define SIGEV_SIGNAL 1
==> 1
Trying c2sc
#define SIGEV_KEVENT 3
==> 3
Trying c2sc
#define sa_handler __sigaction_u.__sa_handler
==> (sc::fref csym::__sigaction_u csym::__sa_handler)
Trying c2sc
#define sa_sigaction __sigaction_u.__sa_sigaction
==> (sc::fref csym::__sigaction_u csym::__sa_sigaction)
Trying c2sc
#define SA_NOCLDSTOP 0x0008
==> 8
Trying c2sc
#define SA_ONSTACK 0x0001
==> 1
Trying c2sc
#define SA_RESTART 0x0002
==> 2
Trying c2sc
#define SA_RESETHAND 0x0004
==> 4
Trying c2sc
#define SA_NODEFER 0x0010
==> 16
Trying c2sc
#define SA_NOCLDWAIT 0x0020
==> 32
Trying c2sc
#define SA_SIGINFO 0x0040
==> 64
Trying c2sc
#define NSIG 32
==> 32
Trying c2sc
#define SI_USER 0x10001
==> 65537
Trying c2sc
#define SI_QUEUE 0x10002
==> 65538
Trying c2sc
#define SI_TIMER 0x10003
==> 65539
Trying c2sc
#define SI_ASYNCIO 0x10004
==> 65540
Trying c2sc
#define SI_MESGQ 0x10005
==> 65541
Trying c2sc
#define SI_UNDEFINED 0
==> 0
Trying c2sc
#define SS_ONSTACK 0x0001
==> 1
Trying c2sc
#define SS_DISABLE 0x0004
==> 4
Trying c2sc
#define SIGSTKSZ ((512 * 4) + 32768)
==> (sc::+ (sc::* 512 4) 32768)
Trying c2sc
#define SV_ONSTACK 0x0001
==> 1
Trying c2sc
#define SV_INTERRUPT 0x0002
==> 2
Trying c2sc
#define SV_RESETHAND 0x0004
==> 4
Trying c2sc
#define SV_NODEFER 0x0010
==> 16
Trying c2sc
#define SV_NOCLDSTOP 0x0008
==> 8
Trying c2sc
#define SV_SIGINFO 0x0040
==> 64
Trying c2sc
#define sv_onstack sv_flags
==> csym::sv_flags
Trying c2sc
#define sigmask(m) ( 1 << ( ( m ) - 1 ) )
 1:(<< 1 (- csym::m 1))
[typename --- ]
[not typename --- m]
 2:(<< 1 (cast csym::m (- 1)))
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::<< 1 (sc::- csym::m 1))
Trying c2sc
#define BADSIG ((__sighandler_t *)-1)
==> (sc::cast (sc::ptr csym::__sighandler_t) (sc::- 1))
Trying c2sc
#define SIG_BLOCK 1
==> 1
Trying c2sc
#define SIG_UNBLOCK 2
==> 2
Trying c2sc
#define SIG_SETMASK 3
==> 3
Trying c2sc
#define AIO_CANCELED 0x1
==> 1
Trying c2sc
#define AIO_NOTCANCELED 0x2
==> 2
Trying c2sc
#define AIO_ALLDONE 0x3
==> 3
Trying c2sc
#define LIO_NOP 0x0
==> 0
Trying c2sc
#define LIO_WRITE 0x1
==> 1
Trying c2sc
#define LIO_READ 0x2
==> 2
Trying c2sc
#define LIO_NOWAIT 0x0
==> 0
Trying c2sc
#define LIO_WAIT 0x1
==> 1
Trying c2sc
#define AIO_LISTIO_MAX 16
==> 16
Trying c2sc
#define _assert(e) ( ( e ) ? ( void ) 0 : __assert ( __func__ , , - 1234567890 , "e" ) )
==> <gave up...>
Trying c2sc
#define assert(e) ( ( e ) ? ( void ) 0 : __assert ( __func__ , , - 1234567890 , _C2SC_STRINGIFY ( e ) ) )
==> <gave up...>
Trying c2sc
#define _COMPLEX_H 
==> <gave up...>
Trying c2sc
#define _cOMPLEX 
==> <gave up...>
Trying c2sc
#define _cOMPLEX_i 1.0fi
==> <gave up...>
Trying c2sc
#define complex 
==> <gave up...>
Trying c2sc
#define I 1.0fi
==> <gave up...>
Trying c2sc
#define _CPIO_H_ 
==> <gave up...>
Trying c2sc
#define C_ISSOCK 0140000
==> 49152
Trying c2sc
#define C_ISLNK 0120000
==> 40960
Trying c2sc
#define C_ISCTG 0110000
==> 36864
Trying c2sc
#define C_ISREG 0100000
==> 32768
Trying c2sc
#define C_ISBLK 0060000
==> 24576
Trying c2sc
#define C_ISDIR 0040000
==> 16384
Trying c2sc
#define C_ISCHR 0020000
==> 8192
Trying c2sc
#define C_ISFIFO 0010000
==> 4096
Trying c2sc
#define C_ISUID 0004000
==> 2048
Trying c2sc
#define C_ISGID 0002000
==> 1024
Trying c2sc
#define C_ISVTX 0001000
==> 512
Trying c2sc
#define C_IRUSR 0000400
==> 256
Trying c2sc
#define C_IWUSR 0000200
==> 128
Trying c2sc
#define C_IXUSR 0000100
==> 64
Trying c2sc
#define C_IRGRP 0000040
==> 32
Trying c2sc
#define C_IWGRP 0000020
==> 16
Trying c2sc
#define C_IXGRP 0000010
==> 8
Trying c2sc
#define C_IROTH 0000004
==> 4
Trying c2sc
#define C_IWOTH 0000002
==> 2
Trying c2sc
#define C_IXOTH 0000001
==> 1
Trying c2sc
#define MAGIC "070707"
==> "070707"
Trying c2sc
#define _CTYPE_H_ 
==> <gave up...>
Trying c2sc
#define __CTYPE_H_ 
==> <gave up...>
Trying c2sc
#define _CTYPE_A 0x00000100L
==> (sc::cast sc::long 256)
Trying c2sc
#define _CTYPE_C 0x00000200L
==> (sc::cast sc::long 512)
Trying c2sc
#define _CTYPE_D 0x00000400L
==> (sc::cast sc::long 1024)
Trying c2sc
#define _CTYPE_G 0x00000800L
==> (sc::cast sc::long 2048)
Trying c2sc
#define _CTYPE_L 0x00001000L
==> (sc::cast sc::long 4096)
Trying c2sc
#define _CTYPE_P 0x00002000L
==> (sc::cast sc::long 8192)
Trying c2sc
#define _CTYPE_S 0x00004000L
==> (sc::cast sc::long 16384)
Trying c2sc
#define _CTYPE_U 0x00008000L
==> (sc::cast sc::long 32768)
Trying c2sc
#define _CTYPE_X 0x00010000L
==> (sc::cast sc::long 65536)
Trying c2sc
#define _CTYPE_B 0x00020000L
==> (sc::cast sc::long 131072)
Trying c2sc
#define _CTYPE_R 0x00040000L
==> (sc::cast sc::long 262144)
Trying c2sc
#define _CTYPE_I 0x00080000L
==> (sc::cast sc::long 524288)
Trying c2sc
#define _CTYPE_T 0x00100000L
==> (sc::cast sc::long 1048576)
Trying c2sc
#define _CTYPE_Q 0x00200000L
==> (sc::cast sc::long 2097152)
Trying c2sc
#define _CTYPE_SW0 0x20000000L
==> (sc::cast sc::long 536870912)
Trying c2sc
#define _CTYPE_SW1 0x40000000L
==> (sc::cast sc::long 1073741824)
Trying c2sc
#define _CTYPE_SW2 0x80000000L
==> (sc::cast sc::long 2147483648)
Trying c2sc
#define _CTYPE_SW3 0xc0000000L
==> (sc::cast sc::long 3221225472)
Trying c2sc
#define _CTYPE_SWM 0xe0000000L
==> (sc::cast sc::long 3758096384)
Trying c2sc
#define _CTYPE_SWS 30
==> 30
Trying c2sc
#define _RUNETYPE_H_ 
==> <gave up...>
Trying c2sc
#define _CACHED_RUNES (1 <<8 )
==> (sc::<< 1 8)
Trying c2sc
#define _CRMASK (~((1 <<8 ) - 1))
==> (sc::bit-not (sc::- (sc::<< 1 8) 1))
Trying c2sc
#define _RUNE_MAGIC_1 "RuneMagi"
==> "RuneMagi"
Trying c2sc
#define isalnum(c) __istype ( ( c ) , 0x00000100L | 0x00000400L )
==> (csym::__istype csym::c
     (sc::bit-or (sc::cast sc::long 256) (sc::cast sc::long 1024)))
Trying c2sc
#define isalpha(c) __istype ( ( c ) , 0x00000100L )
==> (csym::__istype csym::c (sc::cast sc::long 256))
Trying c2sc
#define iscntrl(c) __istype ( ( c ) , 0x00000200L )
==> (csym::__istype csym::c (sc::cast sc::long 512))
Trying c2sc
#define isdigit(c) __isctype ( ( c ) , 0x00000400L )
==> (csym::__isctype csym::c (sc::cast sc::long 1024))
Trying c2sc
#define isgraph(c) __istype ( ( c ) , 0x00000800L )
==> (csym::__istype csym::c (sc::cast sc::long 2048))
Trying c2sc
#define islower(c) __istype ( ( c ) , 0x00001000L )
==> (csym::__istype csym::c (sc::cast sc::long 4096))
Trying c2sc
#define isprint(c) __istype ( ( c ) , 0x00040000L )
==> (csym::__istype csym::c (sc::cast sc::long 262144))
Trying c2sc
#define ispunct(c) __istype ( ( c ) , 0x00002000L )
==> (csym::__istype csym::c (sc::cast sc::long 8192))
Trying c2sc
#define isspace(c) __istype ( ( c ) , 0x00004000L )
==> (csym::__istype csym::c (sc::cast sc::long 16384))
Trying c2sc
#define isupper(c) __istype ( ( c ) , 0x00008000L )
==> (csym::__istype csym::c (sc::cast sc::long 32768))
Trying c2sc
#define isxdigit(c) __isctype ( ( c ) , 0x00010000L )
==> (csym::__isctype csym::c (sc::cast sc::long 65536))
Trying c2sc
#define tolower(c) __tolower ( c )
==> (csym::__tolower csym::c)
Trying c2sc
#define toupper(c) __toupper ( c )
==> (csym::__toupper csym::c)
Trying c2sc
#define _tolower(c) __tolower ( c )
==> (csym::__tolower csym::c)
Trying c2sc
#define _toupper(c) __toupper ( c )
==> (csym::__toupper csym::c)
Trying c2sc
#define isascii(c) ( ( ( c ) & ~ 0x7F ) == 0 )
 1:(== (bit-and csym::c (bit-not 127)) 0)
[typename --- ]
[not typename --- c]
 2:(== (cast csym::c (ptr (bit-not 127))) 0)
[typename --- c]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::c (sc::bit-not 127)) 0)
Trying c2sc
#define toascii(c) ( ( c ) & 0x7F )
 1:(bit-and csym::c 127)
[typename --- ]
[not typename --- c]
 2:(cast csym::c (ptr 127))
[typename --- c]
[not typename --- ]
Select number? 1
==> (sc::bit-and csym::c 127)
Trying c2sc
#define isblank(c) __istype ( ( c ) , 0x00020000L )
==> (csym::__istype csym::c (sc::cast sc::long 131072))
Trying c2sc
#define digittoint(c) __maskrune ( ( c ) , 0xFF )
==> (csym::__maskrune csym::c 255)
Trying c2sc
#define ishexnumber(c) __istype ( ( c ) , 0x00010000L )
==> (csym::__istype csym::c (sc::cast sc::long 65536))
Trying c2sc
#define isideogram(c) __istype ( ( c ) , 0x00080000L )
==> (csym::__istype csym::c (sc::cast sc::long 524288))
Trying c2sc
#define isnumber(c) __istype ( ( c ) , 0x00000400L )
==> (csym::__istype csym::c (sc::cast sc::long 1024))
Trying c2sc
#define isphonogram(c) __istype ( ( c ) , 0x00200000L )
==> (csym::__istype csym::c (sc::cast sc::long 2097152))
Trying c2sc
#define isrune(c) __istype ( ( c ) , 0xFFFFFF00L )
==> (csym::__istype csym::c (sc::cast sc::long 4294967040))
Trying c2sc
#define isspecial(c) __istype ( ( c ) , 0x00100000L )
==> (csym::__istype csym::c (sc::cast sc::long 1048576))
Trying c2sc
#define _DIRENT_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_DIRENT_H_ 
==> <gave up...>
Trying c2sc
#define MAXNAMLEN 255
==> 255
Trying c2sc
#define DT_UNKNOWN 0
==> 0
Trying c2sc
#define DT_FIFO 1
==> 1
Trying c2sc
#define DT_CHR 2
==> 2
Trying c2sc
#define DT_DIR 4
==> 4
Trying c2sc
#define DT_BLK 6
==> 6
Trying c2sc
#define DT_REG 8
==> 8
Trying c2sc
#define DT_LNK 10
==> 10
Trying c2sc
#define DT_SOCK 12
==> 12
Trying c2sc
#define DT_WHT 14
==> 14
Trying c2sc
#define IFTODT(mode) ( ( ( mode ) & 0170000 ) >> 12 )
 1:(>> (bit-and csym::mode 61440) 12)
[typename --- ]
[not typename --- mode]
 2:(>> (cast csym::mode (ptr 61440)) 12)
[typename --- mode]
[not typename --- ]
Select number? 1
==> (sc::>> (sc::bit-and csym::mode 61440) 12)
Trying c2sc
#define DTTOIF(dirtype) ( ( dirtype ) << 12 )
==> (sc::<< csym::dirtype 12)
Trying c2sc
#define _GENERIC_DIRSIZ(dp) ( ( sizeof ( struct dirent ) - ( 255 + 1 ) ) + ( ( ( dp ) -> d_namlen + 1 + 3 ) & ~ 3 ) )
==> (sc::+ (sc::- (sc::sizeof (sc::struct csym::dirent)) (sc::+ 255 1))
     (sc::bit-and
      (sc::+ (sc::+ (sc::fref (sc::mref csym::dp) csym::d_namlen) 1) 3)
      (sc::bit-not 3)))
Trying c2sc
#define d_ino d_fileno
==> csym::d_fileno
Trying c2sc
#define DIRBLKSIZ 1024
==> 1024
Trying c2sc
#define dirfd(dirp) ( ( dirp ) -> dd_fd )
==> (sc::fref (sc::mref csym::dirp) csym::dd_fd)
Trying c2sc
#define DTF_HIDEW 0x0001
==> 1
Trying c2sc
#define DTF_NODUP 0x0002
==> 2
Trying c2sc
#define DTF_REWIND 0x0004
==> 4
Trying c2sc
#define __DTF_READALL 0x0008
==> 8
Trying c2sc
#define _DLFCN_H_ 
==> <gave up...>
Trying c2sc
#define RTLD_LAZY 1
==> 1
Trying c2sc
#define RTLD_NOW 2
==> 2
Trying c2sc
#define RTLD_MODEMASK 0x3
==> 3
Trying c2sc
#define RTLD_GLOBAL 0x100
==> 256
Trying c2sc
#define RTLD_LOCAL 0
==> 0
Trying c2sc
#define RTLD_TRACE 0x200
==> 512
Trying c2sc
#define RTLD_DI_LINKMAP 2
==> 2
Trying c2sc
#define RTLD_DI_SERINFO 4
==> 4
Trying c2sc
#define RTLD_DI_SERINFOSIZE 5
==> 5
Trying c2sc
#define RTLD_DI_ORIGIN 6
==> 6
Trying c2sc
#define RTLD_DI_MAX 6
==> 6
Trying c2sc
#define RTLD_NEXT ((void *) -1)
==> (sc::cast (sc::ptr sc::void) (sc::- 1))
Trying c2sc
#define RTLD_DEFAULT ((void *) -2)
==> (sc::cast (sc::ptr sc::void) (sc::- 2))
Trying c2sc
#define RTLD_SELF ((void *) -3)
==> (sc::cast (sc::ptr sc::void) (sc::- 3))
Trying c2sc
#define _SYS_ERRNO_H_ 
==> <gave up...>
Trying c2sc
#define errno (* __error())
==> (sc::mref (csym::__error))
Trying c2sc
#define EPERM 1
==> 1
Trying c2sc
#define ENOENT 2
==> 2
Trying c2sc
#define ESRCH 3
==> 3
Trying c2sc
#define EINTR 4
==> 4
Trying c2sc
#define EIO 5
==> 5
Trying c2sc
#define ENXIO 6
==> 6
Trying c2sc
#define E2BIG 7
==> 7
Trying c2sc
#define ENOEXEC 8
==> 8
Trying c2sc
#define EBADF 9
==> 9
Trying c2sc
#define ECHILD 10
==> 10
Trying c2sc
#define EDEADLK 11
==> 11
Trying c2sc
#define ENOMEM 12
==> 12
Trying c2sc
#define EACCES 13
==> 13
Trying c2sc
#define EFAULT 14
==> 14
Trying c2sc
#define ENOTBLK 15
==> 15
Trying c2sc
#define EBUSY 16
==> 16
Trying c2sc
#define EEXIST 17
==> 17
Trying c2sc
#define EXDEV 18
==> 18
Trying c2sc
#define ENODEV 19
==> 19
Trying c2sc
#define ENOTDIR 20
==> 20
Trying c2sc
#define EISDIR 21
==> 21
Trying c2sc
#define EINVAL 22
==> 22
Trying c2sc
#define ENFILE 23
==> 23
Trying c2sc
#define EMFILE 24
==> 24
Trying c2sc
#define ENOTTY 25
==> 25
Trying c2sc
#define ETXTBSY 26
==> 26
Trying c2sc
#define EFBIG 27
==> 27
Trying c2sc
#define ENOSPC 28
==> 28
Trying c2sc
#define ESPIPE 29
==> 29
Trying c2sc
#define EROFS 30
==> 30
Trying c2sc
#define EMLINK 31
==> 31
Trying c2sc
#define EPIPE 32
==> 32
Trying c2sc
#define EDOM 33
==> 33
Trying c2sc
#define ERANGE 34
==> 34
Trying c2sc
#define EAGAIN 35
==> 35
Trying c2sc
#define EWOULDBLOCK 35
==> 35
Trying c2sc
#define EINPROGRESS 36
==> 36
Trying c2sc
#define EALREADY 37
==> 37
Trying c2sc
#define ENOTSOCK 38
==> 38
Trying c2sc
#define EDESTADDRREQ 39
==> 39
Trying c2sc
#define EMSGSIZE 40
==> 40
Trying c2sc
#define EPROTOTYPE 41
==> 41
Trying c2sc
#define ENOPROTOOPT 42
==> 42
Trying c2sc
#define EPROTONOSUPPORT 43
==> 43
Trying c2sc
#define ESOCKTNOSUPPORT 44
==> 44
Trying c2sc
#define EOPNOTSUPP 45
==> 45
Trying c2sc
#define ENOTSUP 45
==> 45
Trying c2sc
#define EPFNOSUPPORT 46
==> 46
Trying c2sc
#define EAFNOSUPPORT 47
==> 47
Trying c2sc
#define EADDRINUSE 48
==> 48
Trying c2sc
#define EADDRNOTAVAIL 49
==> 49
Trying c2sc
#define ENETDOWN 50
==> 50
Trying c2sc
#define ENETUNREACH 51
==> 51
Trying c2sc
#define ENETRESET 52
==> 52
Trying c2sc
#define ECONNABORTED 53
==> 53
Trying c2sc
#define ECONNRESET 54
==> 54
Trying c2sc
#define ENOBUFS 55
==> 55
Trying c2sc
#define EISCONN 56
==> 56
Trying c2sc
#define ENOTCONN 57
==> 57
Trying c2sc
#define ESHUTDOWN 58
==> 58
Trying c2sc
#define ETOOMANYREFS 59
==> 59
Trying c2sc
#define ETIMEDOUT 60
==> 60
Trying c2sc
#define ECONNREFUSED 61
==> 61
Trying c2sc
#define ELOOP 62
==> 62
Trying c2sc
#define ENAMETOOLONG 63
==> 63
Trying c2sc
#define EHOSTDOWN 64
==> 64
Trying c2sc
#define EHOSTUNREACH 65
==> 65
Trying c2sc
#define ENOTEMPTY 66
==> 66
Trying c2sc
#define EPROCLIM 67
==> 67
Trying c2sc
#define EUSERS 68
==> 68
Trying c2sc
#define EDQUOT 69
==> 69
Trying c2sc
#define ESTALE 70
==> 70
Trying c2sc
#define EREMOTE 71
==> 71
Trying c2sc
#define EBADRPC 72
==> 72
Trying c2sc
#define ERPCMISMATCH 73
==> 73
Trying c2sc
#define EPROGUNAVAIL 74
==> 74
Trying c2sc
#define EPROGMISMATCH 75
==> 75
Trying c2sc
#define EPROCUNAVAIL 76
==> 76
Trying c2sc
#define ENOLCK 77
==> 77
Trying c2sc
#define ENOSYS 78
==> 78
Trying c2sc
#define EFTYPE 79
==> 79
Trying c2sc
#define EAUTH 80
==> 80
Trying c2sc
#define ENEEDAUTH 81
==> 81
Trying c2sc
#define EIDRM 82
==> 82
Trying c2sc
#define ENOMSG 83
==> 83
Trying c2sc
#define EOVERFLOW 84
==> 84
Trying c2sc
#define ECANCELED 85
==> 85
Trying c2sc
#define EILSEQ 86
==> 86
Trying c2sc
#define ENOATTR 87
==> 87
Trying c2sc
#define EDOOFUS 88
==> 88
Trying c2sc
#define ELAST 88
==> 88
Trying c2sc
#define _SYS_FCNTL_H_ 
==> <gave up...>
Trying c2sc
#define O_RDONLY 0x0000
==> 0
Trying c2sc
#define O_WRONLY 0x0001
==> 1
Trying c2sc
#define O_RDWR 0x0002
==> 2
Trying c2sc
#define O_ACCMODE 0x0003
==> 3
Trying c2sc
#define FREAD 0x0001
==> 1
Trying c2sc
#define FWRITE 0x0002
==> 2
Trying c2sc
#define O_NONBLOCK 0x0004
==> 4
Trying c2sc
#define O_APPEND 0x0008
==> 8
Trying c2sc
#define O_SHLOCK 0x0010
==> 16
Trying c2sc
#define O_EXLOCK 0x0020
==> 32
Trying c2sc
#define O_ASYNC 0x0040
==> 64
Trying c2sc
#define O_FSYNC 0x0080
==> 128
Trying c2sc
#define O_SYNC 0x0080
==> 128
Trying c2sc
#define O_NOFOLLOW 0x0100
==> 256
Trying c2sc
#define O_CREAT 0x0200
==> 512
Trying c2sc
#define O_TRUNC 0x0400
==> 1024
Trying c2sc
#define O_EXCL 0x0800
==> 2048
Trying c2sc
#define O_NOCTTY 0x8000
==> 32768
Trying c2sc
#define O_DIRECT 0x00010000
==> 65536
Trying c2sc
#define FAPPEND 0x0008
==> 8
Trying c2sc
#define FASYNC 0x0040
==> 64
Trying c2sc
#define FFSYNC 0x0080
==> 128
Trying c2sc
#define FNONBLOCK 0x0004
==> 4
Trying c2sc
#define FNDELAY 0x0004
==> 4
Trying c2sc
#define O_NDELAY 0x0004
==> 4
Trying c2sc
#define FPOSIXSHM 0x0100
==> 256
Trying c2sc
#define F_DUPFD 0
==> 0
Trying c2sc
#define F_GETFD 1
==> 1
Trying c2sc
#define F_SETFD 2
==> 2
Trying c2sc
#define F_GETFL 3
==> 3
Trying c2sc
#define F_SETFL 4
==> 4
Trying c2sc
#define F_GETOWN 5
==> 5
Trying c2sc
#define F_SETOWN 6
==> 6
Trying c2sc
#define F_GETLK 7
==> 7
Trying c2sc
#define F_SETLK 8
==> 8
Trying c2sc
#define F_SETLKW 9
==> 9
Trying c2sc
#define FD_CLOEXEC 1
==> 1
Trying c2sc
#define F_RDLCK 1
==> 1
Trying c2sc
#define F_UNLCK 2
==> 2
Trying c2sc
#define F_WRLCK 3
==> 3
Trying c2sc
#define LOCK_SH 0x01
==> 1
Trying c2sc
#define LOCK_EX 0x02
==> 2
Trying c2sc
#define LOCK_NB 0x04
==> 4
Trying c2sc
#define LOCK_UN 0x08
==> 8
Trying c2sc
#define _FENV_H_ 
==> <gave up...>
Trying c2sc
#define FE_INVALID 0x01
==> 1
Trying c2sc
#define FE_DENORMAL 0x02
==> 2
Trying c2sc
#define FE_DIVBYZERO 0x04
==> 4
Trying c2sc
#define FE_OVERFLOW 0x08
==> 8
Trying c2sc
#define FE_UNDERFLOW 0x10
==> 16
Trying c2sc
#define FE_INEXACT 0x20
==> 32
Trying c2sc
#define FE_ALL_EXCEPT (0x04 | 0x02 | 0x20 | 0x01 | 0x08 | 0x10 )
==> (sc::bit-or 4 2 32 1 8 16)
Trying c2sc
#define FE_TONEAREST 0x0000
==> 0
Trying c2sc
#define FE_DOWNWARD 0x0400
==> 1024
Trying c2sc
#define FE_UPWARD 0x0800
==> 2048
Trying c2sc
#define FE_TOWARDZERO 0x0c00
==> 3072
Trying c2sc
#define _ROUND_MASK (0x0000 | 0x0400 | 0x0800 | 0x0c00 )
==> (sc::bit-or 0 1024 2048 3072)
Trying c2sc
#define FE_DFL_ENV (&__fe_dfl_env)
==> (sc::ptr csym::__fe_dfl_env)
Trying c2sc
#define __fldcw(__cw) __asm volatile ( "fldcw %0" : : "m" ( __cw ) )
==> <gave up...>
Trying c2sc
#define __fldenv(__env) __asm volatile ( "fldenv %0" : : "m" ( __env ) )
==> <gave up...>
Trying c2sc
#define __fnclex() __asm volatile ( "fnclex" )
==> <gave up...>
Trying c2sc
#define __fnstenv(__env) 
==> <gave up...>
Trying c2sc
#define __fnstcw(__cw) 
==> <gave up...>
Trying c2sc
#define __fnstsw(__sw) 
==> <gave up...>
Trying c2sc
#define __fwait() __asm volatile ( "fwait" )
==> <gave up...>
Trying c2sc
#define _MACHINE_FLOAT_H_ 1
==> 1
Trying c2sc
#define FLT_RADIX 2
==> 2
Trying c2sc
#define FLT_ROUNDS __flt_rounds()
==> (csym::__flt_rounds)
Trying c2sc
#define FLT_EVAL_METHOD (-1)
==> (sc::- 1)
Trying c2sc
#define DECIMAL_DIG 21
==> 21
Trying c2sc
#define FLT_MANT_DIG 24
==> 24
Trying c2sc
#define FLT_EPSILON 1.19209290E-07F
==> (sc::cast sc::float 1.1920929d-7)
Trying c2sc
#define FLT_DIG 6
==> 6
Trying c2sc
#define FLT_MIN_EXP (-125)
==> (sc::- 125)
Trying c2sc
#define FLT_MIN 1.17549435E-38F
==> (sc::cast sc::float 1.17549435d-38)
Trying c2sc
#define FLT_MIN_10_EXP (-37)
==> (sc::- 37)
Trying c2sc
#define FLT_MAX_EXP 128
==> 128
Trying c2sc
#define FLT_MAX 3.40282347E+38F
==> (sc::cast sc::float 3.40282347d+38)
Trying c2sc
#define FLT_MAX_10_EXP 38
==> 38
Trying c2sc
#define DBL_MANT_DIG 53
==> 53
Trying c2sc
#define DBL_EPSILON 2.2204460492503131E-16
==> 2.220446049250313d-16
Trying c2sc
#define DBL_DIG 15
==> 15
Trying c2sc
#define DBL_MIN_EXP (-1021)
==> (sc::- 1021)
Trying c2sc
#define DBL_MIN 2.2250738585072014E-308
==> 2.2250738585072014d-308
Trying c2sc
#define DBL_MIN_10_EXP (-307)
==> (sc::- 307)
Trying c2sc
#define DBL_MAX_EXP 1024
==> 1024
Trying c2sc
#define DBL_MAX 1.7976931348623157E+308
==> 1.7976931348623157d+308
Trying c2sc
#define DBL_MAX_10_EXP 308
==> 308
Trying c2sc
#define LDBL_MANT_DIG 64
==> 64
Trying c2sc
#define LDBL_EPSILON 1.0842021724855044340E-19L
==> (sc::cast sc::long-double 1.8420217248550443d-19)
Trying c2sc
#define LDBL_DIG 18
==> 18
Trying c2sc
#define LDBL_MIN_EXP (-16381)
==> (sc::- 16381)
Trying c2sc
#define LDBL_MIN 3.3621031431120935063E-4932L
==> (sc::cast sc::long-double
     (sc::/ 2.9643938750474793d-323

Trying c2sc
#define LDBL_MIN_10_EXP (-4931)
==> (sc::- 4931)
Trying c2sc
#define LDBL_MAX_EXP 16384
==> 16384
Trying c2sc
#define LDBL_MAX 1.1897314953572317650E+4932L
==> (sc::cast sc::long-double
     (sc::* 1.1897314953572318d+308

Trying c2sc
#define LDBL_MAX_10_EXP 4932
==> 4932
Trying c2sc
#define _FMTMSG_H_ 
==> <gave up...>
Trying c2sc
#define MM_HARD 0x0001
==> 1
Trying c2sc
#define MM_SOFT 0x0002
==> 2
Trying c2sc
#define MM_FIRM 0x0004
==> 4
Trying c2sc
#define MM_APPL 0x0010
==> 16
Trying c2sc
#define MM_UTIL 0x0020
==> 32
Trying c2sc
#define MM_OPSYS 0x0040
==> 64
Trying c2sc
#define MM_PRINT 0x0100
==> 256
Trying c2sc
#define MM_CONSOLE 0x0200
==> 512
Trying c2sc
#define MM_RECOVER 0x1000
==> 4096
Trying c2sc
#define MM_NRECOV 0x2000
==> 8192
Trying c2sc
#define MM_NOSEV 0
==> 0
Trying c2sc
#define MM_HALT 1
==> 1
Trying c2sc
#define MM_ERROR 2
==> 2
Trying c2sc
#define MM_WARNING 3
==> 3
Trying c2sc
#define MM_INFO 4
==> 4
Trying c2sc
#define MM_NULLLBL (char *)0
==> (sc::cast (sc::ptr sc::char) 0)
Trying c2sc
#define MM_NULLSEV 0
==> 0
Trying c2sc
#define MM_NULLMC 0L
==> (sc::cast sc::long 0)
Trying c2sc
#define MM_NULLTXT (char *)0
==> (sc::cast (sc::ptr sc::char) 0)
Trying c2sc
#define MM_NULLACT (char *)0
==> (sc::cast (sc::ptr sc::char) 0)
Trying c2sc
#define MM_NULLTAG (char *)0
==> (sc::cast (sc::ptr sc::char) 0)
Trying c2sc
#define MM_OK 0
==> 0
Trying c2sc
#define MM_NOMSG 1
==> 1
Trying c2sc
#define MM_NOCON 2
==> 2
Trying c2sc
#define MM_NOTOK 3
==> 3
Trying c2sc
#define _FNMATCH_H_ 
==> <gave up...>
Trying c2sc
#define FNM_NOMATCH 1
==> 1
Trying c2sc
#define FNM_NOESCAPE 0x01
==> 1
Trying c2sc
#define FNM_PATHNAME 0x02
==> 2
Trying c2sc
#define FNM_PERIOD 0x04
==> 4
Trying c2sc
#define FNM_NOSYS (-1)
==> (sc::- 1)
Trying c2sc
#define FNM_LEADING_DIR 0x08
==> 8
Trying c2sc
#define FNM_CASEFOLD 0x10
==> 16
Trying c2sc
#define FNM_IGNORECASE 0x10
==> 16
Trying c2sc
#define FNM_FILE_NAME 0x02
==> 2
Trying c2sc
#define _FTW_H 
==> <gave up...>
Trying c2sc
#define _SYS_STAT_H_ 
==> <gave up...>
Trying c2sc
#define st_atime st_atimespec.tv_sec
==> (sc::fref csym::st_atimespec csym::tv_sec)
Trying c2sc
#define st_mtime st_mtimespec.tv_sec
==> (sc::fref csym::st_mtimespec csym::tv_sec)
Trying c2sc
#define st_ctime st_ctimespec.tv_sec
==> (sc::fref csym::st_ctimespec csym::tv_sec)
Trying c2sc
#define st_birthtime st_birthtimespec.tv_sec
==> (sc::fref csym::st_birthtimespec csym::tv_sec)
Trying c2sc
#define S_ISUID 0004000
==> 2048
Trying c2sc
#define S_ISGID 0002000
==> 1024
Trying c2sc
#define S_ISTXT 0001000
==> 512
Trying c2sc
#define S_IRWXU 0000700
==> 448
Trying c2sc
#define S_IRUSR 0000400
==> 256
Trying c2sc
#define S_IWUSR 0000200
==> 128
Trying c2sc
#define S_IXUSR 0000100
==> 64
Trying c2sc
#define S_IREAD 0000400
==> 256
Trying c2sc
#define S_IWRITE 0000200
==> 128
Trying c2sc
#define S_IEXEC 0000100
==> 64
Trying c2sc
#define S_IRWXG 0000070
==> 56
Trying c2sc
#define S_IRGRP 0000040
==> 32
Trying c2sc
#define S_IWGRP 0000020
==> 16
Trying c2sc
#define S_IXGRP 0000010
==> 8
Trying c2sc
#define S_IRWXO 0000007
==> 7
Trying c2sc
#define S_IROTH 0000004
==> 4
Trying c2sc
#define S_IWOTH 0000002
==> 2
Trying c2sc
#define S_IXOTH 0000001
==> 1
Trying c2sc
#define S_IFMT 0170000
==> 61440
Trying c2sc
#define S_IFIFO 0010000
==> 4096
Trying c2sc
#define S_IFCHR 0020000
==> 8192
Trying c2sc
#define S_IFDIR 0040000
==> 16384
Trying c2sc
#define S_IFBLK 0060000
==> 24576
Trying c2sc
#define S_IFREG 0100000
==> 32768
Trying c2sc
#define S_IFLNK 0120000
==> 40960
Trying c2sc
#define S_IFSOCK 0140000
==> 49152
Trying c2sc
#define S_ISVTX 0001000
==> 512
Trying c2sc
#define S_IFWHT 0160000
==> 57344
Trying c2sc
#define S_ISDIR(m) ( ( ( m ) & 0170000 ) == 0040000 )
 1:(== (bit-and csym::m 61440) 16384)
[typename --- ]
[not typename --- m]
 2:(== (cast csym::m (ptr 61440)) 16384)
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::m 61440) 16384)
Trying c2sc
#define S_ISCHR(m) ( ( ( m ) & 0170000 ) == 0020000 )
 1:(== (bit-and csym::m 61440) 8192)
[typename --- ]
[not typename --- m]
 2:(== (cast csym::m (ptr 61440)) 8192)
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::m 61440) 8192)
Trying c2sc
#define S_ISBLK(m) ( ( ( m ) & 0170000 ) == 0060000 )
 1:(== (bit-and csym::m 61440) 24576)
[typename --- ]
[not typename --- m]
 2:(== (cast csym::m (ptr 61440)) 24576)
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::m 61440) 24576)
Trying c2sc
#define S_ISREG(m) ( ( ( m ) & 0170000 ) == 0100000 )
 1:(== (bit-and csym::m 61440) 32768)
[typename --- ]
[not typename --- m]
 2:(== (cast csym::m (ptr 61440)) 32768)
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::m 61440) 32768)
Trying c2sc
#define S_ISFIFO(m) ( ( ( m ) & 0170000 ) == 0010000 )
 1:(== (bit-and csym::m 61440) 4096)
[typename --- ]
[not typename --- m]
 2:(== (cast csym::m (ptr 61440)) 4096)
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::m 61440) 4096)
Trying c2sc
#define S_ISLNK(m) ( ( ( m ) & 0170000 ) == 0120000 )
 1:(== (bit-and csym::m 61440) 40960)
[typename --- ]
[not typename --- m]
 2:(== (cast csym::m (ptr 61440)) 40960)
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::m 61440) 40960)
Trying c2sc
#define S_ISSOCK(m) ( ( ( m ) & 0170000 ) == 0140000 )
 1:(== (bit-and csym::m 61440) 49152)
[typename --- ]
[not typename --- m]
 2:(== (cast csym::m (ptr 61440)) 49152)
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::m 61440) 49152)
Trying c2sc
#define S_ISWHT(m) ( ( ( m ) & 0170000 ) == 0160000 )
 1:(== (bit-and csym::m 61440) 57344)
[typename --- ]
[not typename --- m]
 2:(== (cast csym::m (ptr 61440)) 57344)
[typename --- m]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::m 61440) 57344)
Trying c2sc
#define ACCESSPERMS (0000700 |0000070 |0000007 )
==> (sc::bit-or 448 56 7)
Trying c2sc
#define ALLPERMS (0004000 |0002000 |0001000 |0000700 |0000070 |0000007 )
==> (sc::bit-or 2048 1024 512 448 56 7)
Trying c2sc
#define DEFFILEMODE (0000400 |0000200 |0000040 |0000020 |0000004 |0000002 )
==> (sc::bit-or 256 128 32 16 4 2)
Trying c2sc
#define S_BLKSIZE 512
==> 512
Trying c2sc
#define UF_SETTABLE 0x0000ffff
==> 65535
Trying c2sc
#define UF_NODUMP 0x00000001
==> 1
Trying c2sc
#define UF_IMMUTABLE 0x00000002
==> 2
Trying c2sc
#define UF_APPEND 0x00000004
==> 4
Trying c2sc
#define UF_OPAQUE 0x00000008
==> 8
Trying c2sc
#define UF_NOUNLINK 0x00000010
==> 16
Trying c2sc
#define SF_SETTABLE 0xffff0000
==> 4294901760
Trying c2sc
#define SF_ARCHIVED 0x00010000
==> 65536
Trying c2sc
#define SF_IMMUTABLE 0x00020000
==> 131072
Trying c2sc
#define SF_APPEND 0x00040000
==> 262144
Trying c2sc
#define SF_NOUNLINK 0x00100000
==> 1048576
Trying c2sc
#define SF_SNAPSHOT 0x00200000
==> 2097152
Trying c2sc
#define FTW_F 0
==> 0
Trying c2sc
#define FTW_D 1
==> 1
Trying c2sc
#define FTW_DNR 2
==> 2
Trying c2sc
#define FTW_DP 3
==> 3
Trying c2sc
#define FTW_NS 4
==> 4
Trying c2sc
#define FTW_SL 5
==> 5
Trying c2sc
#define FTW_SLN 6
==> 6
Trying c2sc
#define FTW_PHYS 0x01
==> 1
Trying c2sc
#define FTW_MOUNT 0x02
==> 2
Trying c2sc
#define FTW_DEPTH 0x04
==> 4
Trying c2sc
#define FTW_CHDIR 0x08
==> 8
Trying c2sc
#define _GLOB_H_ 
==> <gave up...>
Trying c2sc
#define GLOB_APPEND 0x0001
==> 1
Trying c2sc
#define GLOB_DOOFFS 0x0002
==> 2
Trying c2sc
#define GLOB_ERR 0x0004
==> 4
Trying c2sc
#define GLOB_MARK 0x0008
==> 8
Trying c2sc
#define GLOB_NOCHECK 0x0010
==> 16
Trying c2sc
#define GLOB_NOSORT 0x0020
==> 32
Trying c2sc
#define GLOB_NOESCAPE 0x2000
==> 8192
Trying c2sc
#define GLOB_NOSPACE (-1)
==> (sc::- 1)
Trying c2sc
#define GLOB_ABORTED (-2)
==> (sc::- 2)
Trying c2sc
#define GLOB_NOMATCH (-3)
==> (sc::- 3)
Trying c2sc
#define GLOB_NOSYS (-4)
==> (sc::- 4)
Trying c2sc
#define GLOB_ALTDIRFUNC 0x0040
==> 64
Trying c2sc
#define GLOB_BRACE 0x0080
==> 128
Trying c2sc
#define GLOB_MAGCHAR 0x0100
==> 256
Trying c2sc
#define GLOB_NOMAGIC 0x0200
==> 512
Trying c2sc
#define GLOB_QUOTE 0x0400
==> 1024
Trying c2sc
#define GLOB_TILDE 0x0800
==> 2048
Trying c2sc
#define GLOB_LIMIT 0x1000
==> 4096
Trying c2sc
#define GLOB_MAXPATH 0x1000
==> 4096
Trying c2sc
#define GLOB_ABEND (-2)
==> (sc::- 2)
Trying c2sc
#define _GRP_H_ 
==> <gave up...>
Trying c2sc
#define _PATH_GROUP "/etc/group"
==> "/etc/group"
Trying c2sc
#define _NET_IF_H_ 
==> <gave up...>
Trying c2sc
#define IF_NAMESIZE 16
==> 16
Trying c2sc
#define IFNAMSIZ 16
==> 16
Trying c2sc
#define IF_MAXUNIT 0x7fff
==> 32767
Trying c2sc
#define IFF_UP 0x1
==> 1
Trying c2sc
#define IFF_BROADCAST 0x2
==> 2
Trying c2sc
#define IFF_DEBUG 0x4
==> 4
Trying c2sc
#define IFF_LOOPBACK 0x8
==> 8
Trying c2sc
#define IFF_POINTOPOINT 0x10
==> 16
Trying c2sc
#define IFF_SMART 0x20
==> 32
Trying c2sc
#define IFF_RUNNING 0x40
==> 64
Trying c2sc
#define IFF_NOARP 0x80
==> 128
Trying c2sc
#define IFF_PROMISC 0x100
==> 256
Trying c2sc
#define IFF_ALLMULTI 0x200
==> 512
Trying c2sc
#define IFF_OACTIVE 0x400
==> 1024
Trying c2sc
#define IFF_SIMPLEX 0x800
==> 2048
Trying c2sc
#define IFF_LINK0 0x1000
==> 4096
Trying c2sc
#define IFF_LINK1 0x2000
==> 8192
Trying c2sc
#define IFF_LINK2 0x4000
==> 16384
Trying c2sc
#define IFF_ALTPHYS 0x4000
==> 16384
Trying c2sc
#define IFF_MULTICAST 0x8000
==> 32768
Trying c2sc
#define IFF_POLLING 0x10000
==> 65536
Trying c2sc
#define IFF_PPROMISC 0x20000
==> 131072
Trying c2sc
#define IFF_MONITOR 0x40000
==> 262144
Trying c2sc
#define IFF_STATICARP 0x80000
==> 524288
Trying c2sc
#define IFF_NEEDSGIANT 0x100000
==> 1048576
Trying c2sc
#define IFF_CANTCHANGE (0x2 |0x10 |0x40 |0x400 | 0x800 |0x8000 |0x200 |0x20 |0x100 | 0x10000 )
==> (sc::bit-or 2 16 64 1024 2048 32768 512 32 256 65536)
Trying c2sc
#define LINK_STATE_UNKNOWN 0
==> 0
Trying c2sc
#define LINK_STATE_DOWN 1
==> 1
Trying c2sc
#define LINK_STATE_UP 2
==> 2
Trying c2sc
#define if_kBPS(x) ( ( x ) * 1000 )
 1:(* csym::x 1000)
[typename --- ]
[not typename --- x]
 2:(cast csym::x (mref 1000))
[typename --- x]
[not typename --- ]
Select number? 1
==> (sc::* csym::x 1000)
Trying c2sc
#define if_mBPS(x) ( ( ( ( x ) * 1000 ) * 1000 ) )
 1:(* (* csym::x 1000) 1000)
[typename --- ]
[not typename --- x]
 2:(* (cast csym::x (mref 1000)) 1000)
[typename --- x]
[not typename --- ]
Select number? 1
==> (sc::* (sc::* csym::x 1000) 1000)
Trying c2sc
#define if_gBPS(x) ( ( ( ( ( ( x ) * 1000 ) * 1000 ) * 1000 ) ) )
 1:(* (* (* csym::x 1000) 1000) 1000)
[typename --- ]
[not typename --- x]
 2:(* (* (cast csym::x (mref 1000)) 1000) 1000)
[typename --- x]
[not typename --- ]
Select number? 1
==> (sc::* (sc::* (sc::* csym::x 1000) 1000) 1000)
Trying c2sc
#define IFCAP_RXCSUM 0x0001
==> 1
Trying c2sc
#define IFCAP_TXCSUM 0x0002
==> 2
Trying c2sc
#define IFCAP_NETCONS 0x0004
==> 4
Trying c2sc
#define IFCAP_VLAN_MTU 0x0008
==> 8
Trying c2sc
#define IFCAP_VLAN_HWTAGGING 0x0010
==> 16
Trying c2sc
#define IFCAP_JUMBO_MTU 0x0020
==> 32
Trying c2sc
#define IFCAP_POLLING 0x0040
==> 64
Trying c2sc
#define IFCAP_HWCSUM (0x0001 | 0x0002 )
==> (sc::bit-or 1 2)
Trying c2sc
#define IFQ_MAXLEN 50
==> 50
Trying c2sc
#define IFNET_SLOWHZ 1
==> 1
Trying c2sc
#define IFAN_ARRIVAL 0
==> 0
Trying c2sc
#define IFAN_DEPARTURE 1
==> 1
Trying c2sc
#define ifr_addr ifr_ifru.ifru_addr
==> (sc::fref csym::ifr_ifru csym::ifru_addr)
Trying c2sc
#define ifr_dstaddr ifr_ifru.ifru_dstaddr
==> (sc::fref csym::ifr_ifru csym::ifru_dstaddr)
Trying c2sc
#define ifr_broadaddr ifr_ifru.ifru_broadaddr
==> (sc::fref csym::ifr_ifru csym::ifru_broadaddr)
Trying c2sc
#define ifr_flags ifr_ifru.ifru_flags[0]
==> (sc::aref (sc::fref csym::ifr_ifru csym::ifru_flags) 0)
Trying c2sc
#define ifr_flagshigh ifr_ifru.ifru_flags[1]
==> (sc::aref (sc::fref csym::ifr_ifru csym::ifru_flags) 1)
Trying c2sc
#define ifr_metric ifr_ifru.ifru_metric
==> (sc::fref csym::ifr_ifru csym::ifru_metric)
Trying c2sc
#define ifr_mtu ifr_ifru.ifru_mtu
==> (sc::fref csym::ifr_ifru csym::ifru_mtu)
Trying c2sc
#define ifr_phys ifr_ifru.ifru_phys
==> (sc::fref csym::ifr_ifru csym::ifru_phys)
Trying c2sc
#define ifr_media ifr_ifru.ifru_media
==> (sc::fref csym::ifr_ifru csym::ifru_media)
Trying c2sc
#define ifr_data ifr_ifru.ifru_data
==> (sc::fref csym::ifr_ifru csym::ifru_data)
Trying c2sc
#define ifr_reqcap ifr_ifru.ifru_cap[0]
==> (sc::aref (sc::fref csym::ifr_ifru csym::ifru_cap) 0)
Trying c2sc
#define ifr_curcap ifr_ifru.ifru_cap[1]
==> (sc::aref (sc::fref csym::ifr_ifru csym::ifru_cap) 1)
Trying c2sc
#define ifr_index ifr_ifru.ifru_index
==> (sc::fref csym::ifr_ifru csym::ifru_index)
Trying c2sc
#define _SIZEOF_ADDR_IFREQ(ifr) ( ( ifr ) . ifr_ifru . ifru_addr . sa_len > sizeof ( struct sockaddr ) ? ( sizeof ( struct ifreq ) - sizeof ( struct sockaddr ) + ( ifr ) . ifr_ifru . ifru_addr . sa_len ) : sizeof ( struct ifreq ) )
==> (sc::if-exp
     (sc::>
      (sc::fref (sc::fref (sc::fref csym::ifr csym::ifr_ifru) csym::ifru_addr)
       csym::sa_len)
      (sc::sizeof (sc::struct csym::sockaddr)))
     (sc::+
      (sc::- (sc::sizeof (sc::struct csym::ifreq))
       (sc::sizeof (sc::struct csym::sockaddr)))
      (sc::fref (sc::fref (sc::fref csym::ifr csym::ifr_ifru) csym::ifru_addr)
       csym::sa_len))
     (sc::sizeof (sc::struct csym::ifreq)))
Trying c2sc
#define IFSTATMAX 800
==> 800
Trying c2sc
#define ifc_buf ifc_ifcu.ifcu_buf
==> (sc::fref csym::ifc_ifcu csym::ifcu_buf)
Trying c2sc
#define ifc_req ifc_ifcu.ifcu_req
==> (sc::fref csym::ifc_ifcu csym::ifcu_req)
Trying c2sc
#define IFLR_PREFIX 0x8000
==> 32768
Trying c2sc
#define _NETINET_IN_H_ 
==> <gave up...>
Trying c2sc
#define IPPROTO_IP 0
==> 0
Trying c2sc
#define IPPROTO_ICMP 1
==> 1
Trying c2sc
#define IPPROTO_TCP 6
==> 6
Trying c2sc
#define IPPROTO_UDP 17
==> 17
Trying c2sc
#define INADDR_ANY (u_int32_t)0x00000000
==> (sc::cast csym::u_int32_t 0)
Trying c2sc
#define INADDR_BROADCAST (u_int32_t)0xffffffff
==> (sc::cast csym::u_int32_t 4294967295)
Trying c2sc
#define _SA_FAMILY_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _STRUCT_IN_ADDR_DECLARED 
==> <gave up...>
Trying c2sc
#define _BYTEORDER_PROTOTYPED 
==> <gave up...>
Trying c2sc
#define _BYTEORDER_FUNC_DEFINED 
==> <gave up...>
Trying c2sc
#define htonl(x) __bswap32 ( x )
==> (csym::__bswap32 csym::x)
Trying c2sc
#define htons(x) __bswap16 ( x )
==> (csym::__bswap16 csym::x)
Trying c2sc
#define ntohl(x) __bswap32 ( x )
==> (csym::__bswap32 csym::x)
Trying c2sc
#define ntohs(x) __bswap16 ( x )
==> (csym::__bswap16 csym::x)
Trying c2sc
#define IPPROTO_RAW 255
==> 255
Trying c2sc
#define INET_ADDRSTRLEN 16
==> 16
Trying c2sc
#define IPPROTO_HOPOPTS 0
==> 0
Trying c2sc
#define IPPROTO_IGMP 2
==> 2
Trying c2sc
#define IPPROTO_GGP 3
==> 3
Trying c2sc
#define IPPROTO_IPV4 4
==> 4
Trying c2sc
#define IPPROTO_IPIP 4
==> 4
Trying c2sc
#define IPPROTO_ST 7
==> 7
Trying c2sc
#define IPPROTO_EGP 8
==> 8
Trying c2sc
#define IPPROTO_PIGP 9
==> 9
Trying c2sc
#define IPPROTO_RCCMON 10
==> 10
Trying c2sc
#define IPPROTO_NVPII 11
==> 11
Trying c2sc
#define IPPROTO_PUP 12
==> 12
Trying c2sc
#define IPPROTO_ARGUS 13
==> 13
Trying c2sc
#define IPPROTO_EMCON 14
==> 14
Trying c2sc
#define IPPROTO_XNET 15
==> 15
Trying c2sc
#define IPPROTO_CHAOS 16
==> 16
Trying c2sc
#define IPPROTO_MUX 18
==> 18
Trying c2sc
#define IPPROTO_MEAS 19
==> 19
Trying c2sc
#define IPPROTO_HMP 20
==> 20
Trying c2sc
#define IPPROTO_PRM 21
==> 21
Trying c2sc
#define IPPROTO_IDP 22
==> 22
Trying c2sc
#define IPPROTO_TRUNK1 23
==> 23
Trying c2sc
#define IPPROTO_TRUNK2 24
==> 24
Trying c2sc
#define IPPROTO_LEAF1 25
==> 25
Trying c2sc
#define IPPROTO_LEAF2 26
==> 26
Trying c2sc
#define IPPROTO_RDP 27
==> 27
Trying c2sc
#define IPPROTO_IRTP 28
==> 28
Trying c2sc
#define IPPROTO_TP 29
==> 29
Trying c2sc
#define IPPROTO_BLT 30
==> 30
Trying c2sc
#define IPPROTO_NSP 31
==> 31
Trying c2sc
#define IPPROTO_INP 32
==> 32
Trying c2sc
#define IPPROTO_SEP 33
==> 33
Trying c2sc
#define IPPROTO_3PC 34
==> 34
Trying c2sc
#define IPPROTO_IDPR 35
==> 35
Trying c2sc
#define IPPROTO_XTP 36
==> 36
Trying c2sc
#define IPPROTO_DDP 37
==> 37
Trying c2sc
#define IPPROTO_CMTP 38
==> 38
Trying c2sc
#define IPPROTO_TPXX 39
==> 39
Trying c2sc
#define IPPROTO_IL 40
==> 40
Trying c2sc
#define IPPROTO_IPV6 41
==> 41
Trying c2sc
#define IPPROTO_SDRP 42
==> 42
Trying c2sc
#define IPPROTO_ROUTING 43
==> 43
Trying c2sc
#define IPPROTO_FRAGMENT 44
==> 44
Trying c2sc
#define IPPROTO_IDRP 45
==> 45
Trying c2sc
#define IPPROTO_RSVP 46
==> 46
Trying c2sc
#define IPPROTO_GRE 47
==> 47
Trying c2sc
#define IPPROTO_MHRP 48
==> 48
Trying c2sc
#define IPPROTO_BHA 49
==> 49
Trying c2sc
#define IPPROTO_ESP 50
==> 50
Trying c2sc
#define IPPROTO_AH 51
==> 51
Trying c2sc
#define IPPROTO_INLSP 52
==> 52
Trying c2sc
#define IPPROTO_SWIPE 53
==> 53
Trying c2sc
#define IPPROTO_NHRP 54
==> 54
Trying c2sc
#define IPPROTO_MOBILE 55
==> 55
Trying c2sc
#define IPPROTO_TLSP 56
==> 56
Trying c2sc
#define IPPROTO_SKIP 57
==> 57
Trying c2sc
#define IPPROTO_ICMPV6 58
==> 58
Trying c2sc
#define IPPROTO_NONE 59
==> 59
Trying c2sc
#define IPPROTO_DSTOPTS 60
==> 60
Trying c2sc
#define IPPROTO_AHIP 61
==> 61
Trying c2sc
#define IPPROTO_CFTP 62
==> 62
Trying c2sc
#define IPPROTO_HELLO 63
==> 63
Trying c2sc
#define IPPROTO_SATEXPAK 64
==> 64
Trying c2sc
#define IPPROTO_KRYPTOLAN 65
==> 65
Trying c2sc
#define IPPROTO_RVD 66
==> 66
Trying c2sc
#define IPPROTO_IPPC 67
==> 67
Trying c2sc
#define IPPROTO_ADFS 68
==> 68
Trying c2sc
#define IPPROTO_SATMON 69
==> 69
Trying c2sc
#define IPPROTO_VISA 70
==> 70
Trying c2sc
#define IPPROTO_IPCV 71
==> 71
Trying c2sc
#define IPPROTO_CPNX 72
==> 72
Trying c2sc
#define IPPROTO_CPHB 73
==> 73
Trying c2sc
#define IPPROTO_WSN 74
==> 74
Trying c2sc
#define IPPROTO_PVP 75
==> 75
Trying c2sc
#define IPPROTO_BRSATMON 76
==> 76
Trying c2sc
#define IPPROTO_ND 77
==> 77
Trying c2sc
#define IPPROTO_WBMON 78
==> 78
Trying c2sc
#define IPPROTO_WBEXPAK 79
==> 79
Trying c2sc
#define IPPROTO_EON 80
==> 80
Trying c2sc
#define IPPROTO_VMTP 81
==> 81
Trying c2sc
#define IPPROTO_SVMTP 82
==> 82
Trying c2sc
#define IPPROTO_VINES 83
==> 83
Trying c2sc
#define IPPROTO_TTP 84
==> 84
Trying c2sc
#define IPPROTO_IGP 85
==> 85
Trying c2sc
#define IPPROTO_DGP 86
==> 86
Trying c2sc
#define IPPROTO_TCF 87
==> 87
Trying c2sc
#define IPPROTO_IGRP 88
==> 88
Trying c2sc
#define IPPROTO_OSPFIGP 89
==> 89
Trying c2sc
#define IPPROTO_SRPC 90
==> 90
Trying c2sc
#define IPPROTO_LARP 91
==> 91
Trying c2sc
#define IPPROTO_MTP 92
==> 92
Trying c2sc
#define IPPROTO_AX25 93
==> 93
Trying c2sc
#define IPPROTO_IPEIP 94
==> 94
Trying c2sc
#define IPPROTO_MICP 95
==> 95
Trying c2sc
#define IPPROTO_SCCSP 96
==> 96
Trying c2sc
#define IPPROTO_ETHERIP 97
==> 97
Trying c2sc
#define IPPROTO_ENCAP 98
==> 98
Trying c2sc
#define IPPROTO_APES 99
==> 99
Trying c2sc
#define IPPROTO_GMTP 100
==> 100
Trying c2sc
#define IPPROTO_IPCOMP 108
==> 108
Trying c2sc
#define IPPROTO_PIM 103
==> 103
Trying c2sc
#define IPPROTO_PGM 113
==> 113
Trying c2sc
#define IPPROTO_PFSYNC 240
==> 240
Trying c2sc
#define IPPROTO_OLD_DIVERT 254
==> 254
Trying c2sc
#define IPPROTO_MAX 256
==> 256
Trying c2sc
#define IPPROTO_DONE 257
==> 257
Trying c2sc
#define IPPROTO_DIVERT 258
==> 258
Trying c2sc
#define IPPORT_RESERVED 1024
==> 1024
Trying c2sc
#define IPPORT_HIFIRSTAUTO 49152
==> 49152
Trying c2sc
#define IPPORT_HILASTAUTO 65535
==> 65535
Trying c2sc
#define IPPORT_RESERVEDSTART 600
==> 600
Trying c2sc
#define IPPORT_MAX 65535
==> 65535
Trying c2sc
#define IN_CLASSA(i) ( ( ( u_int32_t ) ( i ) & 0x80000000 ) == 0 )
 1:(== (bit-and (csym::u_int32_t csym::i) 2147483648) 0)
[typename --- ]
[not typename --- u_int32_t]
 2:(== (bit-and (cast csym::u_int32_t csym::i) 2147483648) 0)
[typename --- u_int32_t]
[not typename --- i]
 3:(== (cast csym::u_int32_t (cast csym::i (ptr 2147483648))) 0)
[typename --- u_int32_t, i]
[not typename --- ]
Select number? 2
==> (sc::==
                    (sc::bit-and (sc::cast csym::u_int32_t csym::i) 2147483648)
                    0)
Trying c2sc
#define IN_CLASSA_NET 0xff000000
==> 4278190080
Trying c2sc
#define IN_CLASSA_NSHIFT 24
==> 24
Trying c2sc
#define IN_CLASSA_HOST 0x00ffffff
==> 16777215
Trying c2sc
#define IN_CLASSA_MAX 128
==> 128
Trying c2sc
#define IN_CLASSB(i) ( ( ( u_int32_t ) ( i ) & 0xc0000000 ) == 0x80000000 )
 1:(== (bit-and (csym::u_int32_t csym::i) 3221225472) 2147483648)
[typename --- ]
[not typename --- u_int32_t]
 2:(== (bit-and (cast csym::u_int32_t csym::i) 3221225472) 2147483648)
[typename --- u_int32_t]
[not typename --- i]
 3:(== (cast csym::u_int32_t (cast csym::i (ptr 3221225472))) 2147483648)
[typename --- u_int32_t, i]
[not typename --- ]
Select number? 2
==> (sc::==
                    (sc::bit-and (sc::cast csym::u_int32_t csym::i) 3221225472)
                    2147483648)
Trying c2sc
#define IN_CLASSB_NET 0xffff0000
==> 4294901760
Trying c2sc
#define IN_CLASSB_NSHIFT 16
==> 16
Trying c2sc
#define IN_CLASSB_HOST 0x0000ffff
==> 65535
Trying c2sc
#define IN_CLASSB_MAX 65536
==> 65536
Trying c2sc
#define IN_CLASSC(i) ( ( ( u_int32_t ) ( i ) & 0xe0000000 ) == 0xc0000000 )
 1:(== (bit-and (csym::u_int32_t csym::i) 3758096384) 3221225472)
[typename --- ]
[not typename --- u_int32_t]
 2:(== (bit-and (cast csym::u_int32_t csym::i) 3758096384) 3221225472)
[typename --- u_int32_t]
[not typename --- i]
 3:(== (cast csym::u_int32_t (cast csym::i (ptr 3758096384))) 3221225472)
[typename --- u_int32_t, i]
[not typename --- ]
Select number? 2
==> (sc::==
                    (sc::bit-and (sc::cast csym::u_int32_t csym::i) 3758096384)
                    3221225472)
Trying c2sc
#define IN_CLASSC_NET 0xffffff00
==> 4294967040
Trying c2sc
#define IN_CLASSC_NSHIFT 8
==> 8
Trying c2sc
#define IN_CLASSC_HOST 0x000000ff
==> 255
Trying c2sc
#define IN_CLASSD(i) ( ( ( u_int32_t ) ( i ) & 0xf0000000 ) == 0xe0000000 )
 1:(== (bit-and (csym::u_int32_t csym::i) 4026531840) 3758096384)
[typename --- ]
[not typename --- u_int32_t]
 2:(== (bit-and (cast csym::u_int32_t csym::i) 4026531840) 3758096384)
[typename --- u_int32_t]
[not typename --- i]
 3:(== (cast csym::u_int32_t (cast csym::i (ptr 4026531840))) 3758096384)
[typename --- u_int32_t, i]
[not typename --- ]
Select number? 2
==> (sc::==
                    (sc::bit-and (sc::cast csym::u_int32_t csym::i) 4026531840)
                    3758096384)
Trying c2sc
#define IN_CLASSD_NET 0xf0000000
==> 4026531840
Trying c2sc
#define IN_CLASSD_NSHIFT 28
==> 28
Trying c2sc
#define IN_CLASSD_HOST 0x0fffffff
==> 268435455
Trying c2sc
#define IN_MULTICAST(i) ( ( ( u_int32_t ) ( i ) & 0xf0000000 ) == 0xe0000000 )
 1:(== (bit-and (csym::u_int32_t csym::i) 4026531840) 3758096384)
[typename --- ]
[not typename --- u_int32_t]
 2:(== (bit-and (cast csym::u_int32_t csym::i) 4026531840) 3758096384)
[typename --- u_int32_t]
[not typename --- i]
 3:(== (cast csym::u_int32_t (cast csym::i (ptr 4026531840))) 3758096384)
[typename --- u_int32_t, i]
[not typename --- ]
Select number? 2
==> (sc::==
                    (sc::bit-and (sc::cast csym::u_int32_t csym::i) 4026531840)
                    3758096384)
Trying c2sc
#define IN_EXPERIMENTAL(i) ( ( ( u_int32_t ) ( i ) & 0xf0000000 ) == 0xf0000000 )
 1:(== (bit-and (csym::u_int32_t csym::i) 4026531840) 4026531840)
[typename --- ]
[not typename --- u_int32_t]
 2:(== (bit-and (cast csym::u_int32_t csym::i) 4026531840) 4026531840)
[typename --- u_int32_t]
[not typename --- i]
 3:(== (cast csym::u_int32_t (cast csym::i (ptr 4026531840))) 4026531840)
[typename --- u_int32_t, i]
[not typename --- ]
Select number? 2
==> (sc::==
                    (sc::bit-and (sc::cast csym::u_int32_t csym::i) 4026531840)
                    4026531840)
Trying c2sc
#define IN_BADCLASS(i) ( ( ( u_int32_t ) ( i ) & 0xf0000000 ) == 0xf0000000 )
 1:(== (bit-and (csym::u_int32_t csym::i) 4026531840) 4026531840)
[typename --- ]
[not typename --- u_int32_t]
 2:(== (bit-and (cast csym::u_int32_t csym::i) 4026531840) 4026531840)
[typename --- u_int32_t]
[not typename --- i]
 3:(== (cast csym::u_int32_t (cast csym::i (ptr 4026531840))) 4026531840)
[typename --- u_int32_t, i]
[not typename --- ]
Select number? 2
==> (sc::==
                    (sc::bit-and (sc::cast csym::u_int32_t csym::i) 4026531840)
                    4026531840)
Trying c2sc
#define INADDR_LOOPBACK (u_int32_t)0x7f000001
==> (sc::cast csym::u_int32_t 2130706433)
Trying c2sc
#define INADDR_NONE 0xffffffff
==> 4294967295
Trying c2sc
#define INADDR_UNSPEC_GROUP (u_int32_t)0xe0000000
==> (sc::cast csym::u_int32_t 3758096384)
Trying c2sc
#define INADDR_ALLHOSTS_GROUP (u_int32_t)0xe0000001
==> (sc::cast csym::u_int32_t 3758096385)
Trying c2sc
#define INADDR_ALLRTRS_GROUP (u_int32_t)0xe0000002
==> (sc::cast csym::u_int32_t 3758096386)
Trying c2sc
#define INADDR_PFSYNC_GROUP (u_int32_t)0xe00000f0
==> (sc::cast csym::u_int32_t 3758096624)
Trying c2sc
#define INADDR_ALLMDNS_GROUP (u_int32_t)0xe00000fb
==> (sc::cast csym::u_int32_t 3758096635)
Trying c2sc
#define INADDR_MAX_LOCAL_GROUP (u_int32_t)0xe00000ff
==> (sc::cast csym::u_int32_t 3758096639)
Trying c2sc
#define IN_LOOPBACKNET 127
==> 127
Trying c2sc
#define IP_OPTIONS 1
==> 1
Trying c2sc
#define IP_HDRINCL 2
==> 2
Trying c2sc
#define IP_TOS 3
==> 3
Trying c2sc
#define IP_TTL 4
==> 4
Trying c2sc
#define IP_RECVOPTS 5
==> 5
Trying c2sc
#define IP_RECVRETOPTS 6
==> 6
Trying c2sc
#define IP_RECVDSTADDR 7
==> 7
Trying c2sc
#define IP_SENDSRCADDR 7
==> 7
Trying c2sc
#define IP_RETOPTS 8
==> 8
Trying c2sc
#define IP_MULTICAST_IF 9
==> 9
Trying c2sc
#define IP_MULTICAST_TTL 10
==> 10
Trying c2sc
#define IP_MULTICAST_LOOP 11
==> 11
Trying c2sc
#define IP_ADD_MEMBERSHIP 12
==> 12
Trying c2sc
#define IP_DROP_MEMBERSHIP 13
==> 13
Trying c2sc
#define IP_MULTICAST_VIF 14
==> 14
Trying c2sc
#define IP_RSVP_ON 15
==> 15
Trying c2sc
#define IP_RSVP_OFF 16
==> 16
Trying c2sc
#define IP_RSVP_VIF_ON 17
==> 17
Trying c2sc
#define IP_RSVP_VIF_OFF 18
==> 18
Trying c2sc
#define IP_PORTRANGE 19
==> 19
Trying c2sc
#define IP_RECVIF 20
==> 20
Trying c2sc
#define IP_IPSEC_POLICY 21
==> 21
Trying c2sc
#define IP_FAITH 22
==> 22
Trying c2sc
#define IP_ONESBCAST 23
==> 23
Trying c2sc
#define IP_FW_TABLE_ADD 40
==> 40
Trying c2sc
#define IP_FW_TABLE_DEL 41
==> 41
Trying c2sc
#define IP_FW_TABLE_FLUSH 42
==> 42
Trying c2sc
#define IP_FW_TABLE_GETSIZE 43
==> 43
Trying c2sc
#define IP_FW_TABLE_LIST 44
==> 44
Trying c2sc
#define IP_FW_ADD 50
==> 50
Trying c2sc
#define IP_FW_DEL 51
==> 51
Trying c2sc
#define IP_FW_FLUSH 52
==> 52
Trying c2sc
#define IP_FW_ZERO 53
==> 53
Trying c2sc
#define IP_FW_GET 54
==> 54
Trying c2sc
#define IP_FW_RESETLOG 55
==> 55
Trying c2sc
#define IP_DUMMYNET_CONFIGURE 60
==> 60
Trying c2sc
#define IP_DUMMYNET_DEL 61
==> 61
Trying c2sc
#define IP_DUMMYNET_FLUSH 62
==> 62
Trying c2sc
#define IP_DUMMYNET_GET 64
==> 64
Trying c2sc
#define IP_RECVTTL 65
==> 65
Trying c2sc
#define IP_DEFAULT_MULTICAST_TTL 1
==> 1
Trying c2sc
#define IP_DEFAULT_MULTICAST_LOOP 1
==> 1
Trying c2sc
#define IP_MAX_MEMBERSHIPS 20
==> 20
Trying c2sc
#define IP_PORTRANGE_DEFAULT 0
==> 0
Trying c2sc
#define IP_PORTRANGE_HIGH 1
==> 1
Trying c2sc
#define IP_PORTRANGE_LOW 2
==> 2
Trying c2sc
#define IPPROTO_MAXID (51 + 1)
==> (sc::+ 51 1)
Trying c2sc
#define CTL_IPPROTO_NAMES { { "ip", CTLTYPE_NODE }, { "icmp", CTLTYPE_NODE }, { "igmp", CTLTYPE_NODE }, { "ggp", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { "tcp", CTLTYPE_NODE }, { 0, 0 }, { "egp", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { "pup", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { "udp", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { "idp", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { "ipsec", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { "pim", CTLTYPE_NODE }, }
==> <gave up...>
Trying c2sc
#define IPCTL_FORWARDING 1
==> 1
Trying c2sc
#define IPCTL_SENDREDIRECTS 2
==> 2
Trying c2sc
#define IPCTL_DEFTTL 3
==> 3
Trying c2sc
#define IPCTL_RTEXPIRE 5
==> 5
Trying c2sc
#define IPCTL_RTMINEXPIRE 6
==> 6
Trying c2sc
#define IPCTL_RTMAXCACHE 7
==> 7
Trying c2sc
#define IPCTL_SOURCEROUTE 8
==> 8
Trying c2sc
#define IPCTL_DIRECTEDBROADCAST 9
==> 9
Trying c2sc
#define IPCTL_INTRQMAXLEN 10
==> 10
Trying c2sc
#define IPCTL_INTRQDROPS 11
==> 11
Trying c2sc
#define IPCTL_STATS 12
==> 12
Trying c2sc
#define IPCTL_ACCEPTSOURCEROUTE 13
==> 13
Trying c2sc
#define IPCTL_FASTFORWARDING 14
==> 14
Trying c2sc
#define IPCTL_KEEPFAITH 15
==> 15
Trying c2sc
#define IPCTL_GIF_TTL 16
==> 16
Trying c2sc
#define IPCTL_MAXID 17
==> 17
Trying c2sc
#define IPCTL_NAMES { { 0, 0 }, { "forwarding", CTLTYPE_INT }, { "redirect", CTLTYPE_INT }, { "ttl", CTLTYPE_INT }, { "mtu", CTLTYPE_INT }, { "rtexpire", CTLTYPE_INT }, { "rtminexpire", CTLTYPE_INT }, { "rtmaxcache", CTLTYPE_INT }, { "sourceroute", CTLTYPE_INT }, { "directed-broadcast", CTLTYPE_INT }, { "intr-queue-maxlen", CTLTYPE_INT }, { "intr-queue-drops", CTLTYPE_INT }, { "stats", CTLTYPE_STRUCT }, { "accept_sourceroute", CTLTYPE_INT }, { "fastforwarding", CTLTYPE_INT }, }
==> <gave up...>
Trying c2sc
#define __KAME_NETINET_IN_H_INCLUDED_ 
==> <gave up...>
Trying c2sc
#define _NETINET6_IN6_H_ 
==> <gave up...>
Trying c2sc
#define __KAME__ 
==> <gave up...>
Trying c2sc
#define __KAME_VERSION "20010528/FreeBSD"
==> "20010528/FreeBSD"
Trying c2sc
#define IPV6PORT_RESERVED 1024
==> 1024
Trying c2sc
#define IPV6PORT_ANONMIN 49152
==> 49152
Trying c2sc
#define IPV6PORT_ANONMAX 65535
==> 65535
Trying c2sc
#define IPV6PORT_RESERVEDMIN 600
==> 600
Trying c2sc
#define IPV6PORT_RESERVEDMAX (1024 -1)
==> (sc::- 1024 1)
Trying c2sc
#define s6_addr __u6_addr.__u6_addr8
==> (sc::fref csym::__u6_addr csym::__u6_addr8)
Trying c2sc
#define INET6_ADDRSTRLEN 46
==> 46
Trying c2sc
#define SIN6_LEN 
==> <gave up...>
Trying c2sc
#define IN6ADDR_ANY_INIT {{{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }}}
==> <gave up...>
Trying c2sc
#define IN6ADDR_LOOPBACK_INIT {{{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}
==> <gave up...>
Trying c2sc
#define IN6ADDR_NODELOCAL_ALLNODES_INIT {{{ 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}
==> <gave up...>
Trying c2sc
#define IN6ADDR_INTFACELOCAL_ALLNODES_INIT {{{ 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}
==> <gave up...>
Trying c2sc
#define IN6ADDR_LINKLOCAL_ALLNODES_INIT {{{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}
==> <gave up...>
Trying c2sc
#define IN6ADDR_LINKLOCAL_ALLROUTERS_INIT {{{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 }}}
==> <gave up...>
Trying c2sc
#define IN6_ARE_ADDR_EQUAL(a,b) ( memcmp ( & ( a ) -> __u6_addr . __u6_addr8 [ 0 ] , & ( b ) -> __u6_addr . __u6_addr8 [ 0 ] , sizeof ( struct in6_addr ) ) == 0 )
==> (sc::==
     (csym::memcmp
      (sc::ptr
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
         csym::__u6_addr8)
        0))
      (sc::ptr
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::b) csym::__u6_addr)
         csym::__u6_addr8)
        0))
      (sc::sizeof (sc::struct csym::in6_addr)))
     0)
Trying c2sc
#define IN6_IS_ADDR_UNSPECIFIED(a) ( ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 0 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 4 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 8 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 12 ] ) == 0 ) )
==> (sc::and
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           0)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           4)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           8)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           12)))))
      0))
Trying c2sc
#define IN6_IS_ADDR_LOOPBACK(a) ( ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 0 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 4 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 8 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 12 ] ) == __bswap32 ( 1 ) ) )
==> (sc::and
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           0)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           4)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           8)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           12)))))
      (csym::__bswap32 1)))
Trying c2sc
#define IN6_IS_ADDR_V4COMPAT(a) ( ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 0 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 4 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 8 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 12 ] ) != 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 12 ] ) != __bswap32 ( 1 ) ) )
==> (sc::and
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           0)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           4)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           8)))))
      0)
     (sc::!=
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           12)))))
      0)
     (sc::!=
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           12)))))
      (csym::__bswap32 1)))
Trying c2sc
#define IN6_IS_ADDR_V4MAPPED(a) ( ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 0 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 4 ] ) == 0 ) && ( * ( const u_int32_t * ) ( const void * ) ( & ( a ) -> __u6_addr . __u6_addr8 [ 8 ] ) == __bswap32 ( 0x0000ffff ) ) )
==> (sc::and
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           0)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           4)))))
      0)
     (sc::==
      (sc::mref
       (sc::cast (sc::ptr (sc::const csym::u_int32_t))
        (sc::cast (sc::ptr (sc::const sc::void))
         (sc::ptr
          (sc::aref
           (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
            csym::__u6_addr8)
           8)))))
      (csym::__bswap32 65535)))
Trying c2sc
#define __IPV6_ADDR_SCOPE_NODELOCAL 0x01
==> 1
Trying c2sc
#define __IPV6_ADDR_SCOPE_INTFACELOCAL 0x01
==> 1
Trying c2sc
#define __IPV6_ADDR_SCOPE_LINKLOCAL 0x02
==> 2
Trying c2sc
#define __IPV6_ADDR_SCOPE_SITELOCAL 0x05
==> 5
Trying c2sc
#define __IPV6_ADDR_SCOPE_ORGLOCAL 0x08
==> 8
Trying c2sc
#define __IPV6_ADDR_SCOPE_GLOBAL 0x0e
==> 14
Trying c2sc
#define IN6_IS_ADDR_LINKLOCAL(a) ( ( ( a ) -> __u6_addr . __u6_addr8 [ 0 ] == 0xfe ) && ( ( ( a ) -> __u6_addr . __u6_addr8 [ 1 ] & 0xc0 ) == 0x80 ) )
==> (sc::and
     (sc::==
      (sc::aref
       (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
        csym::__u6_addr8)
       0)
      254)
     (sc::==
      (sc::bit-and
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
         csym::__u6_addr8)
        1)
       192)
      128))
Trying c2sc
#define IN6_IS_ADDR_SITELOCAL(a) ( ( ( a ) -> __u6_addr . __u6_addr8 [ 0 ] == 0xfe ) && ( ( ( a ) -> __u6_addr . __u6_addr8 [ 1 ] & 0xc0 ) == 0xc0 ) )
==> (sc::and
     (sc::==
      (sc::aref
       (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
        csym::__u6_addr8)
       0)
      254)
     (sc::==
      (sc::bit-and
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
         csym::__u6_addr8)
        1)
       192)
      192))
Trying c2sc
#define IN6_IS_ADDR_MULTICAST(a) ( ( a ) -> __u6_addr . __u6_addr8 [ 0 ] == 0xff )
==> (sc::==
     (sc::aref
      (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr) csym::__u6_addr8)
      0)
     255)
Trying c2sc
#define __IPV6_ADDR_MC_SCOPE(a) ( ( a ) -> __u6_addr . __u6_addr8 [ 1 ] & 0x0f )
==> (sc::bit-and
     (sc::aref
      (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr) csym::__u6_addr8)
      1)
     15)
Trying c2sc
#define IN6_IS_ADDR_MC_NODELOCAL(a) ( ( ( a ) -> __u6_addr . __u6_addr8 [ 0 ] == 0xff ) && ( ( ( a ) -> __u6_addr . __u6_addr8 [ 1 ] & 0x0f ) == 0x01 ) )
==> (sc::and
     (sc::==
      (sc::aref
       (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
        csym::__u6_addr8)
       0)
      255)
     (sc::==
      (sc::bit-and
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
         csym::__u6_addr8)
        1)
       15)
      1))
Trying c2sc
#define IN6_IS_ADDR_MC_LINKLOCAL(a) ( ( ( a ) -> __u6_addr . __u6_addr8 [ 0 ] == 0xff ) && ( ( ( a ) -> __u6_addr . __u6_addr8 [ 1 ] & 0x0f ) == 0x02 ) )
==> (sc::and
     (sc::==
      (sc::aref
       (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
        csym::__u6_addr8)
       0)
      255)
     (sc::==
      (sc::bit-and
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
         csym::__u6_addr8)
        1)
       15)
      2))
Trying c2sc
#define IN6_IS_ADDR_MC_SITELOCAL(a) ( ( ( a ) -> __u6_addr . __u6_addr8 [ 0 ] == 0xff ) && ( ( ( a ) -> __u6_addr . __u6_addr8 [ 1 ] & 0x0f ) == 0x05 ) )
==> (sc::and
     (sc::==
      (sc::aref
       (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
        csym::__u6_addr8)
       0)
      255)
     (sc::==
      (sc::bit-and
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
         csym::__u6_addr8)
        1)
       15)
      5))
Trying c2sc
#define IN6_IS_ADDR_MC_ORGLOCAL(a) ( ( ( a ) -> __u6_addr . __u6_addr8 [ 0 ] == 0xff ) && ( ( ( a ) -> __u6_addr . __u6_addr8 [ 1 ] & 0x0f ) == 0x08 ) )
==> (sc::and
     (sc::==
      (sc::aref
       (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
        csym::__u6_addr8)
       0)
      255)
     (sc::==
      (sc::bit-and
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
         csym::__u6_addr8)
        1)
       15)
      8))
Trying c2sc
#define IN6_IS_ADDR_MC_GLOBAL(a) ( ( ( a ) -> __u6_addr . __u6_addr8 [ 0 ] == 0xff ) && ( ( ( a ) -> __u6_addr . __u6_addr8 [ 1 ] & 0x0f ) == 0x0e ) )
==> (sc::and
     (sc::==
      (sc::aref
       (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
        csym::__u6_addr8)
       0)
      255)
     (sc::==
      (sc::bit-and
       (sc::aref
        (sc::fref (sc::fref (sc::mref csym::a) csym::__u6_addr)
         csym::__u6_addr8)
        1)
       15)
      14))
Trying c2sc
#define IPV6_SOCKOPT_RESERVED1 3
==> 3
Trying c2sc
#define IPV6_UNICAST_HOPS 4
==> 4
Trying c2sc
#define IPV6_MULTICAST_IF 9
==> 9
Trying c2sc
#define IPV6_MULTICAST_HOPS 10
==> 10
Trying c2sc
#define IPV6_MULTICAST_LOOP 11
==> 11
Trying c2sc
#define IPV6_JOIN_GROUP 12
==> 12
Trying c2sc
#define IPV6_LEAVE_GROUP 13
==> 13
Trying c2sc
#define IPV6_PORTRANGE 14
==> 14
Trying c2sc
#define ICMP6_FILTER 18
==> 18
Trying c2sc
#define IPV6_CHECKSUM 26
==> 26
Trying c2sc
#define IPV6_V6ONLY 27
==> 27
Trying c2sc
#define IPV6_BINDV6ONLY 27
==> 27
Trying c2sc
#define IPV6_IPSEC_POLICY 28
==> 28
Trying c2sc
#define IPV6_FAITH 29
==> 29
Trying c2sc
#define IPV6_FW_ADD 30
==> 30
Trying c2sc
#define IPV6_FW_DEL 31
==> 31
Trying c2sc
#define IPV6_FW_FLUSH 32
==> 32
Trying c2sc
#define IPV6_FW_ZERO 33
==> 33
Trying c2sc
#define IPV6_FW_GET 34
==> 34
Trying c2sc
#define IPV6_RTHDRDSTOPTS 35
==> 35
Trying c2sc
#define IPV6_RECVPKTINFO 36
==> 36
Trying c2sc
#define IPV6_RECVHOPLIMIT 37
==> 37
Trying c2sc
#define IPV6_RECVRTHDR 38
==> 38
Trying c2sc
#define IPV6_RECVHOPOPTS 39
==> 39
Trying c2sc
#define IPV6_RECVDSTOPTS 40
==> 40
Trying c2sc
#define IPV6_USE_MIN_MTU 42
==> 42
Trying c2sc
#define IPV6_RECVPATHMTU 43
==> 43
Trying c2sc
#define IPV6_PATHMTU 44
==> 44
Trying c2sc
#define IPV6_PKTINFO 46
==> 46
Trying c2sc
#define IPV6_HOPLIMIT 47
==> 47
Trying c2sc
#define IPV6_NEXTHOP 48
==> 48
Trying c2sc
#define IPV6_HOPOPTS 49
==> 49
Trying c2sc
#define IPV6_DSTOPTS 50
==> 50
Trying c2sc
#define IPV6_RTHDR 51
==> 51
Trying c2sc
#define IPV6_RECVTCLASS 57
==> 57
Trying c2sc
#define IPV6_AUTOFLOWLABEL 59
==> 59
Trying c2sc
#define IPV6_TCLASS 61
==> 61
Trying c2sc
#define IPV6_DONTFRAG 62
==> 62
Trying c2sc
#define IPV6_PREFER_TEMPADDR 63
==> 63
Trying c2sc
#define IPV6_RTHDR_LOOSE 0
==> 0
Trying c2sc
#define IPV6_RTHDR_STRICT 1
==> 1
Trying c2sc
#define IPV6_RTHDR_TYPE_0 0
==> 0
Trying c2sc
#define IPV6_DEFAULT_MULTICAST_HOPS 1
==> 1
Trying c2sc
#define IPV6_DEFAULT_MULTICAST_LOOP 1
==> 1
Trying c2sc
#define IPV6_PORTRANGE_DEFAULT 0
==> 0
Trying c2sc
#define IPV6_PORTRANGE_HIGH 1
==> 1
Trying c2sc
#define IPV6_PORTRANGE_LOW 2
==> 2
Trying c2sc
#define IPV6PROTO_MAXID (103 + 1)
==> (sc::+ 103 1)
Trying c2sc
#define IPV6CTL_FORWARDING 1
==> 1
Trying c2sc
#define IPV6CTL_SENDREDIRECTS 2
==> 2
Trying c2sc
#define IPV6CTL_DEFHLIM 3
==> 3
Trying c2sc
#define IPV6CTL_FORWSRCRT 5
==> 5
Trying c2sc
#define IPV6CTL_STATS 6
==> 6
Trying c2sc
#define IPV6CTL_MRTSTATS 7
==> 7
Trying c2sc
#define IPV6CTL_MRTPROTO 8
==> 8
Trying c2sc
#define IPV6CTL_MAXFRAGPACKETS 9
==> 9
Trying c2sc
#define IPV6CTL_SOURCECHECK 10
==> 10
Trying c2sc
#define IPV6CTL_SOURCECHECK_LOGINT 11
==> 11
Trying c2sc
#define IPV6CTL_ACCEPT_RTADV 12
==> 12
Trying c2sc
#define IPV6CTL_KEEPFAITH 13
==> 13
Trying c2sc
#define IPV6CTL_LOG_INTERVAL 14
==> 14
Trying c2sc
#define IPV6CTL_HDRNESTLIMIT 15
==> 15
Trying c2sc
#define IPV6CTL_DAD_COUNT 16
==> 16
Trying c2sc
#define IPV6CTL_AUTO_FLOWLABEL 17
==> 17
Trying c2sc
#define IPV6CTL_DEFMCASTHLIM 18
==> 18
Trying c2sc
#define IPV6CTL_GIF_HLIM 19
==> 19
Trying c2sc
#define IPV6CTL_KAME_VERSION 20
==> 20
Trying c2sc
#define IPV6CTL_USE_DEPRECATED 21
==> 21
Trying c2sc
#define IPV6CTL_RR_PRUNE 22
==> 22
Trying c2sc
#define IPV6CTL_V6ONLY 24
==> 24
Trying c2sc
#define IPV6CTL_RTEXPIRE 25
==> 25
Trying c2sc
#define IPV6CTL_RTMINEXPIRE 26
==> 26
Trying c2sc
#define IPV6CTL_RTMAXCACHE 27
==> 27
Trying c2sc
#define IPV6CTL_USETEMPADDR 32
==> 32
Trying c2sc
#define IPV6CTL_TEMPPLTIME 33
==> 33
Trying c2sc
#define IPV6CTL_TEMPVLTIME 34
==> 34
Trying c2sc
#define IPV6CTL_AUTO_LINKLOCAL 35
==> 35
Trying c2sc
#define IPV6CTL_RIP6STATS 36
==> 36
Trying c2sc
#define IPV6CTL_PREFER_TEMPADDR 37
==> 37
Trying c2sc
#define IPV6CTL_ADDRCTLPOLICY 38
==> 38
Trying c2sc
#define IPV6CTL_MAXFRAGS 41
==> 41
Trying c2sc
#define IPV6CTL_MAXID 42
==> 42
Trying c2sc
#define M_AUTHIPHDR M_PROTO2
==> csym::|@m_proto2|
Trying c2sc
#define M_DECRYPTED M_PROTO3
==> csym::|@m_proto3|
Trying c2sc
#define M_LOOP M_PROTO4
==> csym::|@m_proto4|
Trying c2sc
#define M_AUTHIPDGM M_PROTO5
==> csym::|@m_proto5|
Trying c2sc
#define _SOCKLEN_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _ARPA_INET_H_ 
==> <gave up...>
Trying c2sc
#define inet_addr __inet_addr
==> csym::__inet_addr
Trying c2sc
#define inet_aton __inet_aton
==> csym::__inet_aton
Trying c2sc
#define inet_lnaof __inet_lnaof
==> csym::__inet_lnaof
Trying c2sc
#define inet_makeaddr __inet_makeaddr
==> csym::__inet_makeaddr
Trying c2sc
#define inet_neta __inet_neta
==> csym::__inet_neta
Trying c2sc
#define inet_netof __inet_netof
==> csym::__inet_netof
Trying c2sc
#define inet_network __inet_network
==> csym::__inet_network
Trying c2sc
#define inet_net_ntop __inet_net_ntop
==> csym::__inet_net_ntop
Trying c2sc
#define inet_net_pton __inet_net_pton
==> csym::__inet_net_pton
Trying c2sc
#define inet_ntoa __inet_ntoa
==> csym::__inet_ntoa
Trying c2sc
#define inet_pton __inet_pton
==> csym::__inet_pton
Trying c2sc
#define inet_ntop __inet_ntop
==> csym::__inet_ntop
Trying c2sc
#define inet_nsap_addr __inet_nsap_addr
==> csym::__inet_nsap_addr
Trying c2sc
#define inet_nsap_ntoa __inet_nsap_ntoa
==> csym::__inet_nsap_ntoa
Trying c2sc
#define _INTTYPES_H_ 
==> <gave up...>
Trying c2sc
#define _MACHINE_INTTYPES_H_ 
==> <gave up...>
Trying c2sc
#define priD8 "d"
==> "d"
Trying c2sc
#define priD16 "d"
==> "d"
Trying c2sc
#define priD32 "d"
==> "d"
Trying c2sc
#define priD64 "lld"
==> "lld"
Trying c2sc
#define priDleast8 "d"
==> "d"
Trying c2sc
#define priDleast16 "d"
==> "d"
Trying c2sc
#define priDleast32 "d"
==> "d"
Trying c2sc
#define priDleast64 "lld"
==> "lld"
Trying c2sc
#define priDfast8 "d"
==> "d"
Trying c2sc
#define priDfast16 "d"
==> "d"
Trying c2sc
#define priDfast32 "d"
==> "d"
Trying c2sc
#define priDfast64 "lld"
==> "lld"
Trying c2sc
#define priDmax "jd"
==> "jd"
Trying c2sc
#define priDptr "d"
==> "d"
Trying c2sc
#define priI8 "i"
==> "i"
Trying c2sc
#define priI16 "i"
==> "i"
Trying c2sc
#define priI32 "i"
==> "i"
Trying c2sc
#define priI64 "lli"
==> "lli"
Trying c2sc
#define priIleast8 "i"
==> "i"
Trying c2sc
#define priIleast16 "i"
==> "i"
Trying c2sc
#define priIleast32 "i"
==> "i"
Trying c2sc
#define priIleast64 "lli"
==> "lli"
Trying c2sc
#define priIfast8 "i"
==> "i"
Trying c2sc
#define priIfast16 "i"
==> "i"
Trying c2sc
#define priIfast32 "i"
==> "i"
Trying c2sc
#define priIfast64 "lli"
==> "lli"
Trying c2sc
#define priImax "ji"
==> "ji"
Trying c2sc
#define priIptr "i"
==> "i"
Trying c2sc
#define priO8 "o"
==> "o"
Trying c2sc
#define priO16 "o"
==> "o"
Trying c2sc
#define priO32 "o"
==> "o"
Trying c2sc
#define priO64 "llo"
==> "llo"
Trying c2sc
#define priOleast8 "o"
==> "o"
Trying c2sc
#define priOleast16 "o"
==> "o"
Trying c2sc
#define priOleast32 "o"
==> "o"
Trying c2sc
#define priOleast64 "llo"
==> "llo"
Trying c2sc
#define priOfast8 "o"
==> "o"
Trying c2sc
#define priOfast16 "o"
==> "o"
Trying c2sc
#define priOfast32 "o"
==> "o"
Trying c2sc
#define priOfast64 "llo"
==> "llo"
Trying c2sc
#define priOmax "jo"
==> "jo"
Trying c2sc
#define priOptr "o"
==> "o"
Trying c2sc
#define priU8 "u"
==> "u"
Trying c2sc
#define priU16 "u"
==> "u"
Trying c2sc
#define priU32 "u"
==> "u"
Trying c2sc
#define priU64 "llu"
==> "llu"
Trying c2sc
#define priUleast8 "u"
==> "u"
Trying c2sc
#define priUleast16 "u"
==> "u"
Trying c2sc
#define priUleast32 "u"
==> "u"
Trying c2sc
#define priUleast64 "llu"
==> "llu"
Trying c2sc
#define priUfast8 "u"
==> "u"
Trying c2sc
#define priUfast16 "u"
==> "u"
Trying c2sc
#define priUfast32 "u"
==> "u"
Trying c2sc
#define priUfast64 "llu"
==> "llu"
Trying c2sc
#define priUmax "ju"
==> "ju"
Trying c2sc
#define priUptr "u"
==> "u"
Trying c2sc
#define priX8 "x"
==> "x"
Trying c2sc
#define priX16 "x"
==> "x"
Trying c2sc
#define priX32 "x"
==> "x"
Trying c2sc
#define priX64 "llx"
==> "llx"
Trying c2sc
#define priXleast8 "x"
==> "x"
Trying c2sc
#define priXleast16 "x"
==> "x"
Trying c2sc
#define priXleast32 "x"
==> "x"
Trying c2sc
#define priXleast64 "llx"
==> "llx"
Trying c2sc
#define priXfast8 "x"
==> "x"
Trying c2sc
#define priXfast16 "x"
==> "x"
Trying c2sc
#define priXfast32 "x"
==> "x"
Trying c2sc
#define priXfast64 "llx"
==> "llx"
Trying c2sc
#define priXmax "jx"
==> "jx"
Trying c2sc
#define priXptr "x"
==> "x"
Trying c2sc
#define PRIX8 "X"
==> "X"
Trying c2sc
#define PRIX16 "X"
==> "X"
Trying c2sc
#define PRIX32 "X"
==> "X"
Trying c2sc
#define PRIX64 "llX"
==> "llX"
Trying c2sc
#define PRIXLEAST8 "X"
==> "X"
Trying c2sc
#define PRIXLEAST16 "X"
==> "X"
Trying c2sc
#define PRIXLEAST32 "X"
==> "X"
Trying c2sc
#define PRIXLEAST64 "llX"
==> "llX"
Trying c2sc
#define PRIXFAST8 "X"
==> "X"
Trying c2sc
#define PRIXFAST16 "X"
==> "X"
Trying c2sc
#define PRIXFAST32 "X"
==> "X"
Trying c2sc
#define PRIXFAST64 "llX"
==> "llX"
Trying c2sc
#define PRIXMAX "jX"
==> "jX"
Trying c2sc
#define PRIXPTR "X"
==> "X"
Trying c2sc
#define scnD8 "hhd"
==> "hhd"
Trying c2sc
#define scnD16 "hd"
==> "hd"
Trying c2sc
#define scnD32 "d"
==> "d"
Trying c2sc
#define scnD64 "lld"
==> "lld"
Trying c2sc
#define scnDleast8 "hhd"
==> "hhd"
Trying c2sc
#define scnDleast16 "hd"
==> "hd"
Trying c2sc
#define scnDleast32 "d"
==> "d"
Trying c2sc
#define scnDleast64 "lld"
==> "lld"
Trying c2sc
#define scnDfast8 "d"
==> "d"
Trying c2sc
#define scnDfast16 "d"
==> "d"
Trying c2sc
#define scnDfast32 "d"
==> "d"
Trying c2sc
#define scnDfast64 "lld"
==> "lld"
Trying c2sc
#define scnDmax "jd"
==> "jd"
Trying c2sc
#define scnDptr "d"
==> "d"
Trying c2sc
#define scnI8 "hhi"
==> "hhi"
Trying c2sc
#define scnI16 "hi"
==> "hi"
Trying c2sc
#define scnI32 "i"
==> "i"
Trying c2sc
#define scnI64 "lli"
==> "lli"
Trying c2sc
#define scnIleast8 "hhi"
==> "hhi"
Trying c2sc
#define scnIleast16 "hi"
==> "hi"
Trying c2sc
#define scnIleast32 "i"
==> "i"
Trying c2sc
#define scnIleast64 "lli"
==> "lli"
Trying c2sc
#define scnIfast8 "i"
==> "i"
Trying c2sc
#define scnIfast16 "i"
==> "i"
Trying c2sc
#define scnIfast32 "i"
==> "i"
Trying c2sc
#define scnIfast64 "lli"
==> "lli"
Trying c2sc
#define scnImax "ji"
==> "ji"
Trying c2sc
#define scnIptr "i"
==> "i"
Trying c2sc
#define scnO8 "hho"
==> "hho"
Trying c2sc
#define scnO16 "ho"
==> "ho"
Trying c2sc
#define scnO32 "o"
==> "o"
Trying c2sc
#define scnO64 "llo"
==> "llo"
Trying c2sc
#define scnOleast8 "hho"
==> "hho"
Trying c2sc
#define scnOleast16 "ho"
==> "ho"
Trying c2sc
#define scnOleast32 "o"
==> "o"
Trying c2sc
#define scnOleast64 "llo"
==> "llo"
Trying c2sc
#define scnOfast8 "o"
==> "o"
Trying c2sc
#define scnOfast16 "o"
==> "o"
Trying c2sc
#define scnOfast32 "o"
==> "o"
Trying c2sc
#define scnOfast64 "llo"
==> "llo"
Trying c2sc
#define scnOmax "jo"
==> "jo"
Trying c2sc
#define scnOptr "o"
==> "o"
Trying c2sc
#define scnU8 "hhu"
==> "hhu"
Trying c2sc
#define scnU16 "hu"
==> "hu"
Trying c2sc
#define scnU32 "u"
==> "u"
Trying c2sc
#define scnU64 "llu"
==> "llu"
Trying c2sc
#define scnUleast8 "hhu"
==> "hhu"
Trying c2sc
#define scnUleast16 "hu"
==> "hu"
Trying c2sc
#define scnUleast32 "u"
==> "u"
Trying c2sc
#define scnUleast64 "llu"
==> "llu"
Trying c2sc
#define scnUfast8 "u"
==> "u"
Trying c2sc
#define scnUfast16 "u"
==> "u"
Trying c2sc
#define scnUfast32 "u"
==> "u"
Trying c2sc
#define scnUfast64 "llu"
==> "llu"
Trying c2sc
#define scnUmax "ju"
==> "ju"
Trying c2sc
#define scnUptr "u"
==> "u"
Trying c2sc
#define scnX8 "hhx"
==> "hhx"
Trying c2sc
#define scnX16 "hx"
==> "hx"
Trying c2sc
#define scnX32 "x"
==> "x"
Trying c2sc
#define scnX64 "llx"
==> "llx"
Trying c2sc
#define scnXleast8 "hhx"
==> "hhx"
Trying c2sc
#define scnXleast16 "hx"
==> "hx"
Trying c2sc
#define scnXleast32 "x"
==> "x"
Trying c2sc
#define scnXleast64 "llx"
==> "llx"
Trying c2sc
#define scnXfast8 "x"
==> "x"
Trying c2sc
#define scnXfast16 "x"
==> "x"
Trying c2sc
#define scnXfast32 "x"
==> "x"
Trying c2sc
#define scnXfast64 "llx"
==> "llx"
Trying c2sc
#define scnXmax "jx"
==> "jx"
Trying c2sc
#define scnXptr "x"
==> "x"
Trying c2sc
#define _SYS_STDINT_H_ 
==> <gave up...>
Trying c2sc
#define _MACHINE__STDINT_H_ 
==> <gave up...>
Trying c2sc
#define INT8_C(c) ( c )
==> csym::c
Trying c2sc
#define INT16_C(c) ( c )
==> csym::c
Trying c2sc
#define INT32_C(c) ( c )
==> csym::c
Trying c2sc
#define INT64_C(c) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define UINT8_C(c) ( c )
==> csym::c
Trying c2sc
#define UINT16_C(c) ( c )
==> csym::c
Trying c2sc
#define UINT32_C(c) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define UINT64_C(c) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define INTMAX_C(c) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define UINTMAX_C(c) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define INT8_MIN (-0x7f-1)
==> (sc::- (sc::- 127) 1)
Trying c2sc
#define INT16_MIN (-0x7fff-1)
==> (sc::- (sc::- 32767) 1)
Trying c2sc
#define INT32_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define INT64_MIN (-0x7fffffffffffffffLL-1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define INT8_MAX 0x7f
==> 127
Trying c2sc
#define INT16_MAX 0x7fff
==> 32767
Trying c2sc
#define INT32_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define INT64_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define UINT8_MAX 0xff
==> 255
Trying c2sc
#define UINT16_MAX 0xffff
==> 65535
Trying c2sc
#define UINT32_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define UINT64_MAX 0xffffffffffffffffULL
==> (sc::cast sc::unsigned-long-long 18446744073709551615)
Trying c2sc
#define INT_LEAST8_MIN (-0x7f-1)
==> (sc::- (sc::- 127) 1)
Trying c2sc
#define INT_LEAST16_MIN (-0x7fff-1)
==> (sc::- (sc::- 32767) 1)
Trying c2sc
#define INT_LEAST32_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define INT_LEAST64_MIN (-0x7fffffffffffffffLL-1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define INT_LEAST8_MAX 0x7f
==> 127
Trying c2sc
#define INT_LEAST16_MAX 0x7fff
==> 32767
Trying c2sc
#define INT_LEAST32_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define INT_LEAST64_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define UINT_LEAST8_MAX 0xff
==> 255
Trying c2sc
#define UINT_LEAST16_MAX 0xffff
==> 65535
Trying c2sc
#define UINT_LEAST32_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define UINT_LEAST64_MAX 0xffffffffffffffffULL
==> (sc::cast sc::unsigned-long-long 18446744073709551615)
Trying c2sc
#define INT_FAST8_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define INT_FAST16_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define INT_FAST32_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define INT_FAST64_MIN (-0x7fffffffffffffffLL-1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define INT_FAST8_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define INT_FAST16_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define INT_FAST32_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define INT_FAST64_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define UINT_FAST8_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define UINT_FAST16_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define UINT_FAST32_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define UINT_FAST64_MAX 0xffffffffffffffffULL
==> (sc::cast sc::unsigned-long-long 18446744073709551615)
Trying c2sc
#define INTPTR_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define INTPTR_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define UINTPTR_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define INTMAX_MIN (-0x7fffffffffffffffLL-1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define INTMAX_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define UINTMAX_MAX 0xffffffffffffffffULL
==> (sc::cast sc::unsigned-long-long 18446744073709551615)
Trying c2sc
#define PTRDIFF_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define PTRDIFF_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define SIG_ATOMIC_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define SIG_ATOMIC_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define SIZE_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define WCHAR_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define WCHAR_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define WINT_MIN (-0x7fffffff-1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define WINT_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define _SYS_IPC_H_ 
==> <gave up...>
Trying c2sc
#define IPC_R 000400
==> 256
Trying c2sc
#define IPC_W 000200
==> 128
Trying c2sc
#define IPC_M 010000
==> 4096
Trying c2sc
#define IPC_CREAT 001000
==> 512
Trying c2sc
#define IPC_EXCL 002000
==> 1024
Trying c2sc
#define IPC_NOWAIT 004000
==> 2048
Trying c2sc
#define IPC_PRIVATE (key_t)0
==> (sc::cast csym::key_t 0)
Trying c2sc
#define IPC_RMID 0
==> 0
Trying c2sc
#define IPC_SET 1
==> 1
Trying c2sc
#define IPC_STAT 2
==> 2
Trying c2sc
#define IPC_INFO 3
==> 3
Trying c2sc
#define _ISO646_H_ 
==> <gave up...>
Trying c2sc
#define nil &&
==> <gave up...>
Trying c2sc
#define and_eq &=
==> <gave up...>
Trying c2sc
#define bitand &
==> <gave up...>
Trying c2sc
#define bitor |
==> <gave up...>
Trying c2sc
#define compl ~
==> <gave up...>
Trying c2sc
#define nil !
==> <gave up...>
Trying c2sc
#define not_eq !=
==> <gave up...>
Trying c2sc
#define nil ||
==> <gave up...>
Trying c2sc
#define or_eq |=
==> <gave up...>
Trying c2sc
#define xor ^
==> <gave up...>
Trying c2sc
#define xor_eq ^=
==> <gave up...>
Trying c2sc
#define _LANGINFO_H_ 
==> <gave up...>
Trying c2sc
#define _NL_ITEM_DECLARED 
==> <gave up...>
Trying c2sc
#define CODESET 0
==> 0
Trying c2sc
#define D_T_FMT 1
==> 1
Trying c2sc
#define D_FMT 2
==> 2
Trying c2sc
#define T_FMT 3
==> 3
Trying c2sc
#define T_FMT_AMPM 4
==> 4
Trying c2sc
#define AM_STR 5
==> 5
Trying c2sc
#define PM_STR 6
==> 6
Trying c2sc
#define DAY_1 7
==> 7
Trying c2sc
#define DAY_2 8
==> 8
Trying c2sc
#define DAY_3 9
==> 9
Trying c2sc
#define DAY_4 10
==> 10
Trying c2sc
#define DAY_5 11
==> 11
Trying c2sc
#define DAY_6 12
==> 12
Trying c2sc
#define DAY_7 13
==> 13
Trying c2sc
#define ABDAY_1 14
==> 14
Trying c2sc
#define ABDAY_2 15
==> 15
Trying c2sc
#define ABDAY_3 16
==> 16
Trying c2sc
#define ABDAY_4 17
==> 17
Trying c2sc
#define ABDAY_5 18
==> 18
Trying c2sc
#define ABDAY_6 19
==> 19
Trying c2sc
#define ABDAY_7 20
==> 20
Trying c2sc
#define MON_1 21
==> 21
Trying c2sc
#define MON_2 22
==> 22
Trying c2sc
#define MON_3 23
==> 23
Trying c2sc
#define MON_4 24
==> 24
Trying c2sc
#define MON_5 25
==> 25
Trying c2sc
#define MON_6 26
==> 26
Trying c2sc
#define MON_7 27
==> 27
Trying c2sc
#define MON_8 28
==> 28
Trying c2sc
#define MON_9 29
==> 29
Trying c2sc
#define MON_10 30
==> 30
Trying c2sc
#define MON_11 31
==> 31
Trying c2sc
#define MON_12 32
==> 32
Trying c2sc
#define ABMON_1 33
==> 33
Trying c2sc
#define ABMON_2 34
==> 34
Trying c2sc
#define ABMON_3 35
==> 35
Trying c2sc
#define ABMON_4 36
==> 36
Trying c2sc
#define ABMON_5 37
==> 37
Trying c2sc
#define ABMON_6 38
==> 38
Trying c2sc
#define ABMON_7 39
==> 39
Trying c2sc
#define ABMON_8 40
==> 40
Trying c2sc
#define ABMON_9 41
==> 41
Trying c2sc
#define ABMON_10 42
==> 42
Trying c2sc
#define ABMON_11 43
==> 43
Trying c2sc
#define ABMON_12 44
==> 44
Trying c2sc
#define ERA 45
==> 45
Trying c2sc
#define ERA_D_FMT 46
==> 46
Trying c2sc
#define ERA_D_T_FMT 47
==> 47
Trying c2sc
#define ERA_T_FMT 48
==> 48
Trying c2sc
#define ALT_DIGITS 49
==> 49
Trying c2sc
#define RADIXCHAR 50
==> 50
Trying c2sc
#define THOUSEP 51
==> 51
Trying c2sc
#define YESEXPR 52
==> 52
Trying c2sc
#define NOEXPR 53
==> 53
Trying c2sc
#define YESSTR 54
==> 54
Trying c2sc
#define NOSTR 55
==> 55
Trying c2sc
#define CRNCYSTR 56
==> 56
Trying c2sc
#define D_MD_ORDER 57
==> 57
Trying c2sc
#define _LIBGEN_H_ 
==> <gave up...>
Trying c2sc
#define _LIMITS_H_ 
==> <gave up...>
Trying c2sc
#define _POSIX_ARG_MAX 4096
==> 4096
Trying c2sc
#define _POSIX_CHILD_MAX 25
==> 25
Trying c2sc
#define _POSIX_LINK_MAX 8
==> 8
Trying c2sc
#define _POSIX_MAX_CANON 255
==> 255
Trying c2sc
#define _POSIX_MAX_INPUT 255
==> 255
Trying c2sc
#define _POSIX_NAME_MAX 14
==> 14
Trying c2sc
#define _POSIX_NGROUPS_MAX 8
==> 8
Trying c2sc
#define _POSIX_OPEN_MAX 20
==> 20
Trying c2sc
#define _POSIX_PATH_MAX 256
==> 256
Trying c2sc
#define _POSIX_PIPE_BUF 512
==> 512
Trying c2sc
#define _POSIX_SSIZE_MAX 32767
==> 32767
Trying c2sc
#define _POSIX_STREAM_MAX 8
==> 8
Trying c2sc
#define _POSIX_TZNAME_MAX 6
==> 6
Trying c2sc
#define BC_BASE_MAX 99
==> 99
Trying c2sc
#define BC_DIM_MAX 2048
==> 2048
Trying c2sc
#define BC_SCALE_MAX 99
==> 99
Trying c2sc
#define BC_STRING_MAX 1000
==> 1000
Trying c2sc
#define COLL_WEIGHTS_MAX 0
==> 0
Trying c2sc
#define EXPR_NEST_MAX 32
==> 32
Trying c2sc
#define LINE_MAX 2048
==> 2048
Trying c2sc
#define RE_DUP_MAX 255
==> 255
Trying c2sc
#define _POSIX2_BC_BASE_MAX 99
==> 99
Trying c2sc
#define _POSIX2_BC_DIM_MAX 2048
==> 2048
Trying c2sc
#define _POSIX2_BC_SCALE_MAX 99
==> 99
Trying c2sc
#define _POSIX2_BC_STRING_MAX 1000
==> 1000
Trying c2sc
#define _POSIX2_EQUIV_CLASS_MAX 2
==> 2
Trying c2sc
#define _POSIX2_EXPR_NEST_MAX 32
==> 32
Trying c2sc
#define _POSIX2_LINE_MAX 2048
==> 2048
Trying c2sc
#define _POSIX2_RE_DUP_MAX 255
==> 255
Trying c2sc
#define _POSIX_AIO_LISTIO_MAX 16
==> 16
Trying c2sc
#define _POSIX_AIO_MAX 1
==> 1
Trying c2sc
#define _POSIX_DELAYTIMER_MAX 32
==> 32
Trying c2sc
#define _POSIX_MQ_OPEN_MAX 8
==> 8
Trying c2sc
#define _POSIX_MQ_PRIO_MAX 32
==> 32
Trying c2sc
#define _POSIX_RTSIG_MAX 8
==> 8
Trying c2sc
#define _POSIX_SEM_NSEMS_MAX 256
==> 256
Trying c2sc
#define _POSIX_SEM_VALUE_MAX 32767
==> 32767
Trying c2sc
#define _POSIX_SIGQUEUE_MAX 32
==> 32
Trying c2sc
#define _POSIX_TIMER_MAX 32
==> 32
Trying c2sc
#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4
==> 4
Trying c2sc
#define _POSIX_THREAD_KEYS_MAX 128
==> 128
Trying c2sc
#define _POSIX_THREAD_THREADS_MAX 64
==> 64
Trying c2sc
#define _POSIX_HOST_NAME_MAX 255
==> 255
Trying c2sc
#define _POSIX_LOGIN_NAME_MAX 9
==> 9
Trying c2sc
#define _POSIX_SS_REPL_MAX 4
==> 4
Trying c2sc
#define _POSIX_SYMLINK_MAX 255
==> 255
Trying c2sc
#define _POSIX_SYMLOOP_MAX 8
==> 8
Trying c2sc
#define _POSIX_TRACE_EVENT_NAME_MAX 30
==> 30
Trying c2sc
#define _POSIX_TRACE_NAME_MAX 8
==> 8
Trying c2sc
#define _POSIX_TRACE_SYS_MAX 8
==> 8
Trying c2sc
#define _POSIX_TRACE_USER_EVENT_MAX 32
==> 32
Trying c2sc
#define _POSIX_TTY_NAME_MAX 9
==> 9
Trying c2sc
#define _POSIX2_CHARCLASS_NAME_MAX 14
==> 14
Trying c2sc
#define _POSIX2_COLL_WEIGHTS_MAX 2
==> 2
Trying c2sc
#define _POSIX_RE_DUP_MAX 255
==> 255
Trying c2sc
#define _XOPEN_IOV_MAX 16
==> 16
Trying c2sc
#define _XOPEN_NAME_MAX 255
==> 255
Trying c2sc
#define _XOPEN_PATH_MAX 1024
==> 1024
Trying c2sc
#define PASS_MAX 128
==> 128
Trying c2sc
#define NL_ARGMAX 99
==> 99
Trying c2sc
#define NL_LANGMAX 31
==> 31
Trying c2sc
#define NL_MSGMAX 32767
==> 32767
Trying c2sc
#define NL_NMAX 1
==> 1
Trying c2sc
#define NL_SETMAX 255
==> 255
Trying c2sc
#define NL_TEXTMAX 2048
==> 2048
Trying c2sc
#define MB_LEN_MAX 6
==> 6
Trying c2sc
#define _SYS_LIMITS_H_ 
==> <gave up...>
Trying c2sc
#define _MACHINE__LIMITS_H_ 
==> <gave up...>
Trying c2sc
#define __CHAR_BIT 8
==> 8
Trying c2sc
#define __SCHAR_MAX 0x7f
==> 127
Trying c2sc
#define __SCHAR_MIN (-0x7f - 1)
==> (sc::- (sc::- 127) 1)
Trying c2sc
#define __UCHAR_MAX 0xff
==> 255
Trying c2sc
#define __USHRT_MAX 0xffff
==> 65535
Trying c2sc
#define __SHRT_MAX 0x7fff
==> 32767
Trying c2sc
#define __SHRT_MIN (-0x7fff - 1)
==> (sc::- (sc::- 32767) 1)
Trying c2sc
#define __UINT_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define __INT_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define __INT_MIN (-0x7fffffff - 1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define __ULONG_MAX 0xffffffffUL
==> (sc::cast sc::unsigned-long 4294967295)
Trying c2sc
#define __LONG_MAX 0x7fffffffL
==> (sc::cast sc::long 2147483647)
Trying c2sc
#define __LONG_MIN (-0x7fffffffL - 1)
==> (sc::- (sc::- (sc::cast sc::long 2147483647)) 1)
Trying c2sc
#define __ULLONG_MAX 0xffffffffffffffffULL
==> (sc::cast sc::unsigned-long-long 18446744073709551615)
Trying c2sc
#define __LLONG_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define __LLONG_MIN (-0x7fffffffffffffffLL - 1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define __SSIZE_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define __SIZE_T_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define __OFF_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define __OFF_MIN (-0x7fffffffffffffffLL - 1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define __UQUAD_MAX 0xffffffffffffffffULL
==> (sc::cast sc::unsigned-long-long 18446744073709551615)
Trying c2sc
#define __QUAD_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define __QUAD_MIN (-0x7fffffffffffffffLL - 1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define __LONG_BIT 32
==> 32
Trying c2sc
#define __WORD_BIT 32
==> 32
Trying c2sc
#define CHAR_BIT 8
==> 8
Trying c2sc
#define SCHAR_MAX 0x7f
==> 127
Trying c2sc
#define SCHAR_MIN (-0x7f - 1)
==> (sc::- (sc::- 127) 1)
Trying c2sc
#define UCHAR_MAX 0xff
==> 255
Trying c2sc
#define CHAR_MAX 0x7f
==> 127
Trying c2sc
#define CHAR_MIN (-0x7f - 1)
==> (sc::- (sc::- 127) 1)
Trying c2sc
#define USHRT_MAX 0xffff
==> 65535
Trying c2sc
#define SHRT_MAX 0x7fff
==> 32767
Trying c2sc
#define SHRT_MIN (-0x7fff - 1)
==> (sc::- (sc::- 32767) 1)
Trying c2sc
#define UINT_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define INT_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define INT_MIN (-0x7fffffff - 1)
==> (sc::- (sc::- 2147483647) 1)
Trying c2sc
#define ULONG_MAX 0xffffffffUL
==> (sc::cast sc::unsigned-long 4294967295)
Trying c2sc
#define LONG_MAX 0x7fffffffL
==> (sc::cast sc::long 2147483647)
Trying c2sc
#define LONG_MIN (-0x7fffffffL - 1)
==> (sc::- (sc::- (sc::cast sc::long 2147483647)) 1)
Trying c2sc
#define ULLONG_MAX 0xffffffffffffffffULL
==> (sc::cast sc::unsigned-long-long 18446744073709551615)
Trying c2sc
#define LLONG_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define LLONG_MIN (-0x7fffffffffffffffLL - 1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define SSIZE_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define SIZE_T_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define OFF_MAX 0x7fffffffffffffffLL
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define OFF_MIN (-0x7fffffffffffffffLL - 1)
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define GID_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define UID_MAX 0xffffffffU
==> (sc::cast sc::unsigned-int 4294967295)
Trying c2sc
#define UQUAD_MAX (0xffffffffffffffffULL )
==> (sc::cast sc::unsigned-long-long 18446744073709551615)
Trying c2sc
#define QUAD_MAX (0x7fffffffffffffffLL )
==> (sc::cast sc::long-long 9223372036854775807)
Trying c2sc
#define QUAD_MIN ((-0x7fffffffffffffffLL - 1) )
==> (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1)
Trying c2sc
#define LONG_BIT 32
==> 32
Trying c2sc
#define WORD_BIT 32
==> 32
Trying c2sc
#define _SYS_SYSLIMITS_H_ 
==> <gave up...>
Trying c2sc
#define ARG_MAX 65536
==> 65536
Trying c2sc
#define CHILD_MAX 40
==> 40
Trying c2sc
#define LINK_MAX 32767
==> 32767
Trying c2sc
#define MAX_CANON 255
==> 255
Trying c2sc
#define MAX_INPUT 255
==> 255
Trying c2sc
#define NAME_MAX 255
==> 255
Trying c2sc
#define NGROUPS_MAX 16
==> 16
Trying c2sc
#define OPEN_MAX 64
==> 64
Trying c2sc
#define PATH_MAX 1024
==> 1024
Trying c2sc
#define PIPE_BUF 512
==> 512
Trying c2sc
#define IOV_MAX 1024
==> 1024
Trying c2sc
#define _LOCALE_H_ 
==> <gave up...>
Trying c2sc
#define LC_ALL 0
==> 0
Trying c2sc
#define LC_COLLATE 1
==> 1
Trying c2sc
#define LC_CTYPE 2
==> 2
Trying c2sc
#define LC_MONETARY 3
==> 3
Trying c2sc
#define LC_NUMERIC 4
==> 4
Trying c2sc
#define LC_TIME 5
==> 5
Trying c2sc
#define LC_MESSAGES 6
==> 6
Trying c2sc
#define _LC_LAST 7
==> 7
Trying c2sc
#define _MATH_H_ 
==> <gave up...>
Trying c2sc
#define __MATH_BUILTIN_CONSTANTS 
==> <gave up...>
Trying c2sc
#define __MATH_BUILTIN_RELOPS 
==> <gave up...>
Trying c2sc
#define HUGE_VAL __builtin_huge_val()
==> (csym::__builtin_huge_val)
Trying c2sc
#define FP_ILOGB0 (-0x7fffffff )
==> (sc::- 2147483647)
Trying c2sc
#define FP_ILOGBNAN 0x7fffffff
==> 2147483647
Trying c2sc
#define HUGE_VALF __builtin_huge_valf()
==> (csym::__builtin_huge_valf)
Trying c2sc
#define HUGE_VALL __builtin_huge_vall()
==> (csym::__builtin_huge_vall)
Trying c2sc
#define INFINITY __builtin_inf()
==> (csym::__builtin_inf)
Trying c2sc
#define NAN __builtin_nan("")
==> (csym::__builtin_nan "")
Trying c2sc
#define MATH_ERRNO 1
==> 1
Trying c2sc
#define MATH_ERREXCEPT 2
==> 2
Trying c2sc
#define math_errhandling 0
==> 0
Trying c2sc
#define FP_INFINITE 0x01
==> 1
Trying c2sc
#define FP_NAN 0x02
==> 2
Trying c2sc
#define FP_NORMAL 0x04
==> 4
Trying c2sc
#define FP_SUBNORMAL 0x08
==> 8
Trying c2sc
#define FP_ZERO 0x10
==> 16
Trying c2sc
#define fpclassify(x) ( ( sizeof ( x ) == sizeof ( float ) ) ? __fpclassifyf ( x ) : ( sizeof ( x ) == sizeof ( double ) ) ? __fpclassifyd ( x ) : __fpclassifyl ( x ) )
==> (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::float))
     (csym::__fpclassifyf csym::x)
     (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::double))
      (csym::__fpclassifyd csym::x) (csym::__fpclassifyl csym::x)))
Trying c2sc
#define isfinite(x) ( ( sizeof ( x ) == sizeof ( float ) ) ? __isfinitef ( x ) : ( sizeof ( x ) == sizeof ( double ) ) ? __isfinite ( x ) : __isfinitel ( x ) )
==> (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::float))
     (csym::__isfinitef csym::x)
     (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::double))
      (csym::__isfinite csym::x) (csym::__isfinitel csym::x)))
Trying c2sc
#define isinf(x) ( ( sizeof ( x ) == sizeof ( float ) ) ? __isinff ( x ) : ( sizeof ( x ) == sizeof ( double ) ) ? ( ( sizeof ( x ) == sizeof ( float ) ) ? __isinff ( x ) : ( sizeof ( x ) == sizeof ( double ) ) ? isinf ( x ) : __isinfl ( x ) ) : __isinfl ( x ) )
==> (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::float))
     (csym::__isinff csym::x)
     (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::double))
      (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::float))
       (csym::__isinff csym::x)
       (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::double))
        (csym::isinf csym::x) (csym::__isinfl csym::x)))
      (csym::__isinfl csym::x)))
Trying c2sc
#define isnan(x) ( ( sizeof ( x ) == sizeof ( float ) ) ? isnanf ( x ) : ( sizeof ( x ) == sizeof ( double ) ) ? ( ( sizeof ( x ) == sizeof ( float ) ) ? isnanf ( x ) : ( sizeof ( x ) == sizeof ( double ) ) ? isnan ( x ) : __isnanl ( x ) ) : __isnanl ( x ) )
==> (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::float))
     (csym::isnanf csym::x)
     (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::double))
      (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::float))
       (csym::isnanf csym::x)
       (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::double))
        (csym::isnan csym::x) (csym::__isnanl csym::x)))
      (csym::__isnanl csym::x)))
Trying c2sc
#define isnormal(x) ( ( sizeof ( x ) == sizeof ( float ) ) ? __isnormalf ( x ) : ( sizeof ( x ) == sizeof ( double ) ) ? __isnormal ( x ) : __isnormall ( x ) )
==> (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::float))
     (csym::__isnormalf csym::x)
     (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::double))
      (csym::__isnormal csym::x) (csym::__isnormall csym::x)))
Trying c2sc
#define isgreater(x,y) __builtin_isgreater ( ( x ) , ( y ) )
==> (csym::__builtin_isgreater csym::x csym::y)
Trying c2sc
#define isgreaterequal(x,y) __builtin_isgreaterequal ( ( x ) , ( y ) )
==> (csym::__builtin_isgreaterequal csym::x csym::y)
Trying c2sc
#define isless(x,y) __builtin_isless ( ( x ) , ( y ) )
==> (csym::__builtin_isless csym::x csym::y)
Trying c2sc
#define islessequal(x,y) __builtin_islessequal ( ( x ) , ( y ) )
==> (csym::__builtin_islessequal csym::x csym::y)
Trying c2sc
#define islessgreater(x,y) __builtin_islessgreater ( ( x ) , ( y ) )
==> (csym::__builtin_islessgreater csym::x csym::y)
Trying c2sc
#define isunordered(x,y) __builtin_isunordered ( ( x ) , ( y ) )
==> (csym::__builtin_isunordered csym::x csym::y)
Trying c2sc
#define signbit(x) ( ( sizeof ( x ) == sizeof ( float ) ) ? __signbitf ( x ) : ( sizeof ( x ) == sizeof ( double ) ) ? __signbit ( x ) : __signbitl ( x ) )
==> (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::float))
     (csym::__signbitf csym::x)
     (sc::if-exp (sc::== (sc::sizeof csym::x) (sc::sizeof sc::double))
      (csym::__signbit csym::x) (csym::__signbitl csym::x)))
Trying c2sc
#define M_E 2.7182818284590452354
==> 2.718281828459045d0
Trying c2sc
#define M_LOG2E 1.4426950408889634074
==> 1.4426950408889634d0
Trying c2sc
#define M_LOG10E 0.43429448190325182765
==> 0.4342944819032518d0
Trying c2sc
#define M_LN2 0.69314718055994530942
==> 0.6931471805599453d0
Trying c2sc
#define M_LN10 2.30258509299404568402
==> 2.302585092994046d0
Trying c2sc
#define M_PI 3.14159265358979323846
==> 3.141592653589793d0
Trying c2sc
#define M_PI_2 1.57079632679489661923
==> 1.5707963267948966d0
Trying c2sc
#define M_PI_4 0.78539816339744830962
==> 0.7853981633974483d0
Trying c2sc
#define M_1_PI 0.31830988618379067154
==> 0.3183098861837907d0
Trying c2sc
#define M_2_PI 0.63661977236758134308
==> 0.6366197723675814d0
Trying c2sc
#define M_2_SQRTPI 1.12837916709551257390
==> 1.1283791670955126d0
Trying c2sc
#define M_SQRT2 1.41421356237309504880
==> 1.4142135623730951d0
Trying c2sc
#define M_SQRT1_2 0.70710678118654752440
==> 0.7071067811865476d0
Trying c2sc
#define MAXFLOAT ((float)3.40282346638528860e+38)
==> (sc::cast sc::float 3.4028234663852886d+38)
Trying c2sc
#define _LIB_VERSION_TYPE enum fdversion
==> (sc::enum csym::fdversion)
Trying c2sc
#define _LIB_VERSION _fdlib_version
==> csym::_fdlib_version
Trying c2sc
#define _IEEE_ fdlibm_ieee
==> csym::fdlibm_ieee
Trying c2sc
#define _SVID_ fdlibm_svid
==> csym::fdlibm_svid
Trying c2sc
#define _XOPEN_ fdlibm_xopen
==> csym::fdlibm_xopen
Trying c2sc
#define _POSIX_ fdlibm_posix
==> csym::fdlibm_posix
Trying c2sc
#define HUGE ((float)3.40282346638528860e+38)
==> (sc::cast sc::float 3.4028234663852886d+38)
Trying c2sc
#define X_TLOSS 1.41484755040568800000e+16
==> 1.414847550405688d+16
Trying c2sc
#define DOMAIN 1
==> 1
Trying c2sc
#define SING 2
==> 2
Trying c2sc
#define OVERFLOW 3
==> 3
Trying c2sc
#define UNDERFLOW 4
==> 4
Trying c2sc
#define TLOSS 5
==> 5
Trying c2sc
#define PLOSS 6
==> 6
Trying c2sc
#define _SYS_MMAN_H_ 
==> <gave up...>
Trying c2sc
#define INHERIT_SHARE 0
==> 0
Trying c2sc
#define INHERIT_COPY 1
==> 1
Trying c2sc
#define INHERIT_NONE 2
==> 2
Trying c2sc
#define PROT_NONE 0x00
==> 0
Trying c2sc
#define PROT_READ 0x01
==> 1
Trying c2sc
#define PROT_WRITE 0x02
==> 2
Trying c2sc
#define PROT_EXEC 0x04
==> 4
Trying c2sc
#define MAP_SHARED 0x0001
==> 1
Trying c2sc
#define MAP_PRIVATE 0x0002
==> 2
Trying c2sc
#define MAP_COPY 0x0002
==> 2
Trying c2sc
#define MAP_FIXED 0x0010
==> 16
Trying c2sc
#define MAP_RENAME 0x0020
==> 32
Trying c2sc
#define MAP_NORESERVE 0x0040
==> 64
Trying c2sc
#define MAP_RESERVED0080 0x0080
==> 128
Trying c2sc
#define MAP_RESERVED0100 0x0100
==> 256
Trying c2sc
#define MAP_HASSEMAPHORE 0x0200
==> 512
Trying c2sc
#define MAP_STACK 0x0400
==> 1024
Trying c2sc
#define MAP_NOSYNC 0x0800
==> 2048
Trying c2sc
#define MAP_FILE 0x0000
==> 0
Trying c2sc
#define MAP_ANON 0x1000
==> 4096
Trying c2sc
#define MAP_NOCORE 0x00020000
==> 131072
Trying c2sc
#define MCL_CURRENT 0x0001
==> 1
Trying c2sc
#define MCL_FUTURE 0x0002
==> 2
Trying c2sc
#define MAP_FAILED ((void *)-1)
==> (sc::cast (sc::ptr sc::void) (sc::- 1))
Trying c2sc
#define MS_SYNC 0x0000
==> 0
Trying c2sc
#define MS_ASYNC 0x0001
==> 1
Trying c2sc
#define MS_INVALIDATE 0x0002
==> 2
Trying c2sc
#define MADV_NORMAL 0
==> 0
Trying c2sc
#define MADV_RANDOM 1
==> 1
Trying c2sc
#define MADV_SEQUENTIAL 2
==> 2
Trying c2sc
#define MADV_WILLNEED 3
==> 3
Trying c2sc
#define MADV_DONTNEED 4
==> 4
Trying c2sc
#define MADV_FREE 5
==> 5
Trying c2sc
#define MADV_NOSYNC 6
==> 6
Trying c2sc
#define MADV_AUTOSYNC 7
==> 7
Trying c2sc
#define MADV_NOCORE 8
==> 8
Trying c2sc
#define MADV_CORE 9
==> 9
Trying c2sc
#define MADV_PROTECT 10
==> 10
Trying c2sc
#define MINCORE_INCORE 0x1
==> 1
Trying c2sc
#define MINCORE_REFERENCED 0x2
==> 2
Trying c2sc
#define MINCORE_MODIFIED 0x4
==> 4
Trying c2sc
#define MINCORE_REFERENCED_OTHER 0x8
==> 8
Trying c2sc
#define MINCORE_MODIFIED_OTHER 0x10
==> 16
Trying c2sc
#define POSIX_MADV_NORMAL 0
==> 0
Trying c2sc
#define POSIX_MADV_RANDOM 1
==> 1
Trying c2sc
#define POSIX_MADV_SEQUENTIAL 2
==> 2
Trying c2sc
#define POSIX_MADV_WILLNEED 3
==> 3
Trying c2sc
#define POSIX_MADV_DONTNEED 4
==> 4
Trying c2sc
#define _MONETARY_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_MSG_H_ 
==> <gave up...>
Trying c2sc
#define MSG_NOERROR 010000
==> 4096
Trying c2sc
#define _NDBM_H_ 
==> <gave up...>
Trying c2sc
#define _DB_H_ 
==> <gave up...>
Trying c2sc
#define RET_ERROR -1
==> (sc::- 1)
Trying c2sc
#define RET_SUCCESS 0
==> 0
Trying c2sc
#define RET_SPECIAL 1
==> 1
Trying c2sc
#define MAX_PAGE_NUMBER 0xffffffff
==> 4294967295
Trying c2sc
#define MAX_PAGE_OFFSET 65535
==> 65535
Trying c2sc
#define MAX_REC_NUMBER 0xffffffff
==> 4294967295
Trying c2sc
#define R_CURSOR 1
==> 1
Trying c2sc
#define __R_UNUSED 2
==> 2
Trying c2sc
#define R_FIRST 3
==> 3
Trying c2sc
#define R_IAFTER 4
==> 4
Trying c2sc
#define R_IBEFORE 5
==> 5
Trying c2sc
#define R_LAST 6
==> 6
Trying c2sc
#define R_NEXT 7
==> 7
Trying c2sc
#define R_NOOVERWRITE 8
==> 8
Trying c2sc
#define R_PREV 9
==> 9
Trying c2sc
#define R_SETCURSOR 10
==> 10
Trying c2sc
#define R_RECNOSYNC 11
==> 11
Trying c2sc
#define DB_LOCK 0x20000000
==> 536870912
Trying c2sc
#define DB_SHMEM 0x40000000
==> 1073741824
Trying c2sc
#define DB_TXN 0x80000000
==> 2147483648
Trying c2sc
#define BTREEMAGIC 0x053162
==> 340322
Trying c2sc
#define BTREEVERSION 3
==> 3
Trying c2sc
#define R_DUP 0x01
==> 1
Trying c2sc
#define HASHMAGIC 0x061561
==> 398689
Trying c2sc
#define HASHVERSION 2
==> 2
Trying c2sc
#define R_FIXEDLEN 0x01
==> 1
Trying c2sc
#define R_NOKEY 0x02
==> 2
Trying c2sc
#define R_SNAPSHOT 0x04
==> 4
Trying c2sc
#define DBM_RDONLY 0x0000
==> 0
Trying c2sc
#define DBM_INSERT 0
==> 0
Trying c2sc
#define DBM_REPLACE 1
==> 1
Trying c2sc
#define DBM_SUFFIX ".db"
==> ".db"
Trying c2sc
#define dbm_pagfno(a) DBM_PAGFNO_NOT_AVAILABLE
==> csym::|@dbm_pagfno_not_available|
Trying c2sc
#define _NETDB_H_ 
==> <gave up...>
Trying c2sc
#define _PATH_HEQUIV "/etc/hosts.equiv"
==> "/etc/hosts.equiv"
Trying c2sc
#define _PATH_HOSTS "/etc/hosts"
==> "/etc/hosts"
Trying c2sc
#define _PATH_NETWORKS "/etc/networks"
==> "/etc/networks"
Trying c2sc
#define _PATH_PROTOCOLS "/etc/protocols"
==> "/etc/protocols"
Trying c2sc
#define _PATH_SERVICES "/etc/services"
==> "/etc/services"
Trying c2sc
#define h_errno (*__h_error())
==> (sc::mref (csym::__h_error))
Trying c2sc
#define h_addr h_addr_list[0]
==> (sc::aref csym::h_addr_list 0)
Trying c2sc
#define NETDB_INTERNAL -1
==> (sc::- 1)
Trying c2sc
#define NETDB_SUCCESS 0
==> 0
Trying c2sc
#define HOST_NOT_FOUND 1
==> 1
Trying c2sc
#define TRY_AGAIN 2
==> 2
Trying c2sc
#define NO_RECOVERY 3
==> 3
Trying c2sc
#define NO_DATA 4
==> 4
Trying c2sc
#define NO_ADDRESS 4
==> 4
Trying c2sc
#define EAI_AGAIN 2
==> 2
Trying c2sc
#define EAI_BADFLAGS 3
==> 3
Trying c2sc
#define EAI_FAIL 4
==> 4
Trying c2sc
#define EAI_FAMILY 5
==> 5
Trying c2sc
#define EAI_MEMORY 6
==> 6
Trying c2sc
#define EAI_NONAME 8
==> 8
Trying c2sc
#define EAI_SERVICE 9
==> 9
Trying c2sc
#define EAI_SOCKTYPE 10
==> 10
Trying c2sc
#define EAI_SYSTEM 11
==> 11
Trying c2sc
#define EAI_BADHINTS 12
==> 12
Trying c2sc
#define EAI_PROTOCOL 13
==> 13
Trying c2sc
#define EAI_MAX 14
==> 14
Trying c2sc
#define AI_PASSIVE 0x00000001
==> 1
Trying c2sc
#define AI_CANONNAME 0x00000002
==> 2
Trying c2sc
#define AI_NUMERICHOST 0x00000004
==> 4
Trying c2sc
#define AI_MASK (0x00000001 | 0x00000002 | 0x00000004 | 0x00000400 )
==> (sc::bit-or 1 2 4 1024)
Trying c2sc
#define AI_ALL 0x00000100
==> 256
Trying c2sc
#define AI_V4MAPPED_CFG 0x00000200
==> 512
Trying c2sc
#define AI_ADDRCONFIG 0x00000400
==> 1024
Trying c2sc
#define AI_V4MAPPED 0x00000800
==> 2048
Trying c2sc
#define AI_DEFAULT (0x00000200 | 0x00000400 )
==> (sc::bit-or 512 1024)
Trying c2sc
#define NI_MAXHOST 1025
==> 1025
Trying c2sc
#define NI_MAXSERV 32
==> 32
Trying c2sc
#define NI_NOFQDN 0x00000001
==> 1
Trying c2sc
#define NI_NUMERICHOST 0x00000002
==> 2
Trying c2sc
#define NI_NAMEREQD 0x00000004
==> 4
Trying c2sc
#define NI_NUMERICSERV 0x00000008
==> 8
Trying c2sc
#define NI_DGRAM 0x00000010
==> 16
Trying c2sc
#define NI_WITHSCOPEID 0x00000020
==> 32
Trying c2sc
#define SCOPE_DELIMITER '%'
==> #\%
Trying c2sc
#define _NL_TYPES_H_ 
==> <gave up...>
Trying c2sc
#define NL_SETD 0
==> 0
Trying c2sc
#define NL_CAT_LOCALE 1
==> 1
Trying c2sc
#define _SYS_POLL_H_ 
==> <gave up...>
Trying c2sc
#define POLLIN 0x0001
==> 1
Trying c2sc
#define POLLPRI 0x0002
==> 2
Trying c2sc
#define POLLOUT 0x0004
==> 4
Trying c2sc
#define POLLRDNORM 0x0040
==> 64
Trying c2sc
#define POLLWRNORM 0x0004
==> 4
Trying c2sc
#define POLLRDBAND 0x0080
==> 128
Trying c2sc
#define POLLWRBAND 0x0100
==> 256
Trying c2sc
#define POLLINIGNEOF 0x2000
==> 8192
Trying c2sc
#define POLLERR 0x0008
==> 8
Trying c2sc
#define POLLHUP 0x0010
==> 16
Trying c2sc
#define POLLNVAL 0x0020
==> 32
Trying c2sc
#define POLLSTANDARD (0x0001 |0x0002 |0x0004 |0x0040 |0x0080 | 0x0100 |0x0008 |0x0010 |0x0020 )
==> (sc::bit-or 1 2 4 64 128 256 8 16 32)
Trying c2sc
#define INFTIM (-1)
==> (sc::- 1)
Trying c2sc
#define _PTHREAD_H_ 
==> <gave up...>
Trying c2sc
#define _SCHED_H_ 
==> <gave up...>
Trying c2sc
#define SCHED_FIFO 1
==> 1
Trying c2sc
#define SCHED_OTHER 2
==> 2
Trying c2sc
#define SCHED_RR 3
==> 3
Trying c2sc
#define PTHREAD_DESTRUCTOR_ITERATIONS 4
==> 4
Trying c2sc
#define PTHREAD_KEYS_MAX 256
==> 256
Trying c2sc
#define PTHREAD_STACK_MIN 1024
==> 1024
Trying c2sc
#define PTHREAD_THREADS_MAX 0xffffffffUL
==> (sc::cast sc::unsigned-long 4294967295)
Trying c2sc
#define PTHREAD_BARRIER_SERIAL_THREAD -1
==> (sc::- 1)
Trying c2sc
#define PTHREAD_DETACHED 0x1
==> 1
Trying c2sc
#define PTHREAD_SCOPE_SYSTEM 0x2
==> 2
Trying c2sc
#define PTHREAD_INHERIT_SCHED 0x4
==> 4
Trying c2sc
#define PTHREAD_NOFLOAT 0x8
==> 8
Trying c2sc
#define PTHREAD_CREATE_DETACHED 0x1
==> 1
Trying c2sc
#define PTHREAD_CREATE_JOINABLE 0
==> 0
Trying c2sc
#define PTHREAD_SCOPE_PROCESS 0
==> 0
Trying c2sc
#define PTHREAD_EXPLICIT_SCHED 0
==> 0
Trying c2sc
#define PTHREAD_PROCESS_PRIVATE 0
==> 0
Trying c2sc
#define PTHREAD_PROCESS_SHARED 1
==> 1
Trying c2sc
#define PTHREAD_CANCEL_ENABLE 0
==> 0
Trying c2sc
#define PTHREAD_CANCEL_DISABLE 1
==> 1
Trying c2sc
#define PTHREAD_CANCEL_DEFERRED 0
==> 0
Trying c2sc
#define PTHREAD_CANCEL_ASYNCHRONOUS 2
==> 2
Trying c2sc
#define PTHREAD_CANCELED ((void *) 1)
==> (sc::cast (sc::ptr sc::void) 1)
Trying c2sc
#define PTHREAD_NEEDS_INIT 0
==> 0
Trying c2sc
#define PTHREAD_DONE_INIT 1
==> 1
Trying c2sc
#define PTHREAD_ONCE_INIT { 0 , ((void *)0) }
==> <gave up...>
Trying c2sc
#define PTHREAD_MUTEX_INITIALIZER ((void *)0)
==> (sc::cast (sc::ptr sc::void) 0)
Trying c2sc
#define PTHREAD_COND_INITIALIZER ((void *)0)
==> (sc::cast (sc::ptr sc::void) 0)
Trying c2sc
#define PTHREAD_RWLOCK_INITIALIZER ((void *)0)
==> (sc::cast (sc::ptr sc::void) 0)
Trying c2sc
#define pthread_condattr_default ((void *)0)
==> (sc::cast (sc::ptr sc::void) 0)
Trying c2sc
#define pthread_mutexattr_default ((void *)0)
==> (sc::cast (sc::ptr sc::void) 0)
Trying c2sc
#define pthread_attr_default ((void *)0)
==> (sc::cast (sc::ptr sc::void) 0)
Trying c2sc
#define PTHREAD_PRIO_NONE 0
==> 0
Trying c2sc
#define PTHREAD_PRIO_INHERIT 1
==> 1
Trying c2sc
#define PTHREAD_PRIO_PROTECT 2
==> 2
Trying c2sc
#define PTHREAD_MUTEX_DEFAULT PTHREAD_MUTEX_ERRORCHECK
==> csym::|@pthread_mutex_errorcheck|
Trying c2sc
#define MUTEX_TYPE_FAST PTHREAD_MUTEX_NORMAL
==> csym::|@pthread_mutex_normal|
Trying c2sc
#define MUTEX_TYPE_COUNTING_FAST PTHREAD_MUTEX_RECURSIVE
==> csym::|@pthread_mutex_recursive|
Trying c2sc
#define _PWD_H_ 
==> <gave up...>
Trying c2sc
#define _PATH_PWD "/etc"
==> "/etc"
Trying c2sc
#define _PATH_PASSWD "/etc/passwd"
==> "/etc/passwd"
Trying c2sc
#define _PASSWD "passwd"
==> "passwd"
Trying c2sc
#define _PATH_MASTERPASSWD "/etc/master.passwd"
==> "/etc/master.passwd"
Trying c2sc
#define _MASTERPASSWD "master.passwd"
==> "master.passwd"
Trying c2sc
#define _PATH_MP_DB "/etc/pwd.db"
==> "/etc/pwd.db"
Trying c2sc
#define _MP_DB "pwd.db"
==> "pwd.db"
Trying c2sc
#define _PATH_SMP_DB "/etc/spwd.db"
==> "/etc/spwd.db"
Trying c2sc
#define _SMP_DB "spwd.db"
==> "spwd.db"
Trying c2sc
#define _PATH_PWD_MKDB "/usr/sbin/pwd_mkdb"
==> "/usr/sbin/pwd_mkdb"
Trying c2sc
#define _PW_VERSION_MASK '0xF0'
==> #\.ANp
Trying c2sc
#define _PW_VERSIONED(x,v) ( ( unsigned char ) ( ( ( x ) & 0xCF ) | ( ( v ) << 4 ) ) )
 1:(cast unsigned-char (bit-or (bit-and csym::x 207) (<< csym::v 4)))
[typename --- ]
[not typename --- x]
 2:(cast unsigned-char (bit-or (cast csym::x (ptr 207)) (<< csym::v 4)))
[typename --- x]
[not typename --- ]
Select number? 1
==> (sc::cast sc::unsigned-char
                    (sc::bit-or (sc::bit-and csym::x 207) (sc::<< csym::v 4)))
Trying c2sc
#define _PW_KEYBYNAME '\x31'
==> #\1
Trying c2sc
#define _PW_KEYBYNUM '\x32'
==> #\2
Trying c2sc
#define _PW_KEYBYUID '\x33'
==> #\3
Trying c2sc
#define _PW_KEYYPENABLED '\x34'
==> #\4
Trying c2sc
#define _PW_KEYYPBYNUM '\x35'
==> #\5
Trying c2sc
#define _PWD_VERSION_KEY "\xFF" "VERSION"
==> "~|377|VERSION"
Trying c2sc
#define _PWD_CURRENT_VERSION '\x04'
==> #\^d
Trying c2sc
#define _PASSWORD_EFMT1 '_'
==> #\_
Trying c2sc
#define _PASSWORD_LEN 128
==> 128
Trying c2sc
#define _PWF(x) ( 1 << x )
==> (sc::<< 1 csym::x)
Trying c2sc
#define _PWF_NAME (1 << 0)
==> (sc::<< 1 0)
Trying c2sc
#define _PWF_PASSWD (1 << 1)
==> (sc::<< 1 1)
Trying c2sc
#define _PWF_UID (1 << 2)
==> (sc::<< 1 2)
Trying c2sc
#define _PWF_GID (1 << 3)
==> (sc::<< 1 3)
Trying c2sc
#define _PWF_CHANGE (1 << 4)
==> (sc::<< 1 4)
Trying c2sc
#define _PWF_CLASS (1 << 5)
==> (sc::<< 1 5)
Trying c2sc
#define _PWF_GECOS (1 << 6)
==> (sc::<< 1 6)
Trying c2sc
#define _PWF_DIR (1 << 7)
==> (sc::<< 1 7)
Trying c2sc
#define _PWF_SHELL (1 << 8)
==> (sc::<< 1 8)
Trying c2sc
#define _PWF_EXPIRE (1 << 9)
==> (sc::<< 1 9)
Trying c2sc
#define _PWF_SOURCE 0x3000
==> 12288
Trying c2sc
#define _PWF_FILES 0x1000
==> 4096
Trying c2sc
#define _PWF_NIS 0x2000
==> 8192
Trying c2sc
#define _PWF_HESIOD 0x3000
==> 12288
Trying c2sc
#define _REGEX_H_ 
==> <gave up...>
Trying c2sc
#define REG_BASIC 0000
==> 0
Trying c2sc
#define REG_EXTENDED 0001
==> 1
Trying c2sc
#define REG_ICASE 0002
==> 2
Trying c2sc
#define REG_NOSUB 0004
==> 4
Trying c2sc
#define REG_NEWLINE 0010
==> 8
Trying c2sc
#define REG_NOSPEC 0020
==> 16
Trying c2sc
#define REG_PEND 0040
==> 32
Trying c2sc
#define REG_DUMP 0200
==> 128
Trying c2sc
#define REG_ENOSYS (-1)
==> (sc::- 1)
Trying c2sc
#define REG_NOMATCH 1
==> 1
Trying c2sc
#define REG_BADPAT 2
==> 2
Trying c2sc
#define REG_ECOLLATE 3
==> 3
Trying c2sc
#define REG_ECTYPE 4
==> 4
Trying c2sc
#define REG_EESCAPE 5
==> 5
Trying c2sc
#define REG_ESUBREG 6
==> 6
Trying c2sc
#define REG_EBRACK 7
==> 7
Trying c2sc
#define REG_EPAREN 8
==> 8
Trying c2sc
#define REG_EBRACE 9
==> 9
Trying c2sc
#define REG_BADBR 10
==> 10
Trying c2sc
#define REG_ERANGE 11
==> 11
Trying c2sc
#define REG_ESPACE 12
==> 12
Trying c2sc
#define REG_BADRPT 13
==> 13
Trying c2sc
#define REG_EMPTY 14
==> 14
Trying c2sc
#define REG_ASSERT 15
==> 15
Trying c2sc
#define REG_INVARG 16
==> 16
Trying c2sc
#define REG_ILLSEQ 17
==> 17
Trying c2sc
#define REG_ATOI 255
==> 255
Trying c2sc
#define REG_ITOA 0400
==> 256
Trying c2sc
#define REG_NOTBOL 00001
==> 1
Trying c2sc
#define REG_NOTEOL 00002
==> 2
Trying c2sc
#define REG_STARTEND 00004
==> 4
Trying c2sc
#define REG_TRACE 00400
==> 256
Trying c2sc
#define REG_LARGE 01000
==> 512
Trying c2sc
#define REG_BACKR 02000
==> 1024
Trying c2sc
#define _SYS_RESOURCE_H_ 
==> <gave up...>
Trying c2sc
#define PRIO_MIN -20
==> (sc::- 20)
Trying c2sc
#define PRIO_MAX 20
==> 20
Trying c2sc
#define PRIO_PROCESS 0
==> 0
Trying c2sc
#define PRIO_PGRP 1
==> 1
Trying c2sc
#define PRIO_USER 2
==> 2
Trying c2sc
#define RUSAGE_SELF 0
==> 0
Trying c2sc
#define RUSAGE_CHILDREN -1
==> (sc::- 1)
Trying c2sc
#define ru_first ru_ixrss
==> csym::ru_ixrss
Trying c2sc
#define ru_last ru_nivcsw
==> csym::ru_nivcsw
Trying c2sc
#define RLIMIT_CPU 0
==> 0
Trying c2sc
#define RLIMIT_FSIZE 1
==> 1
Trying c2sc
#define RLIMIT_DATA 2
==> 2
Trying c2sc
#define RLIMIT_STACK 3
==> 3
Trying c2sc
#define RLIMIT_CORE 4
==> 4
Trying c2sc
#define RLIMIT_RSS 5
==> 5
Trying c2sc
#define RLIMIT_MEMLOCK 6
==> 6
Trying c2sc
#define RLIMIT_NPROC 7
==> 7
Trying c2sc
#define RLIMIT_NOFILE 8
==> 8
Trying c2sc
#define RLIMIT_SBSIZE 9
==> 9
Trying c2sc
#define RLIMIT_VMEM 10
==> 10
Trying c2sc
#define RLIMIT_AS 10
==> 10
Trying c2sc
#define RLIM_NLIMITS 11
==> 11
Trying c2sc
#define RLIM_INFINITY ((rlim_t)(((u_quad_t)1 << 63) - 1))
 1:(csym::rlim_t (- (<< (cast csym::u_quad_t 1) 63) 1))
[typename --- ]
[not typename --- rlim_t]
 2:(cast csym::rlim_t (- (<< (cast csym::u_quad_t 1) 63) 1))
[typename --- rlim_t]
[not typename --- ]
Select number? 2
==> (sc::cast csym::rlim_t
                    (sc::- (sc::<< (sc::cast csym::u_quad_t 1) 63) 1))
Trying c2sc
#define CP_USER 0
==> 0
Trying c2sc
#define CP_NICE 1
==> 1
Trying c2sc
#define CP_SYS 2
==> 2
Trying c2sc
#define CP_INTR 3
==> 3
Trying c2sc
#define CP_IDLE 4
==> 4
Trying c2sc
#define CPUSTATES 5
==> 5
Trying c2sc
#define _SEARCH_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_SEM_H_ 
==> <gave up...>
Trying c2sc
#define SEM_UNDO 010000
==> 4096
Trying c2sc
#define GETNCNT 3
==> 3
Trying c2sc
#define GETPID 4
==> 4
Trying c2sc
#define GETVAL 5
==> 5
Trying c2sc
#define GETALL 6
==> 6
Trying c2sc
#define GETZCNT 7
==> 7
Trying c2sc
#define SETVAL 8
==> 8
Trying c2sc
#define SETALL 9
==> 9
Trying c2sc
#define SEM_STAT 10
==> 10
Trying c2sc
#define SEM_INFO 11
==> 11
Trying c2sc
#define SEM_A 000200
==> 128
Trying c2sc
#define SEM_R 000400
==> 256
Trying c2sc
#define _SEMAPHORE_H_ 
==> <gave up...>
Trying c2sc
#define SEM_FAILED ((sem_t *)0)
==> (sc::cast (sc::ptr csym::sem_t) 0)
Trying c2sc
#define SEM_VALUE_MAX (~0U)
==> (sc::bit-not (sc::cast sc::unsigned-int 0))
Trying c2sc
#define _SETJMP_H_ 
==> <gave up...>
Trying c2sc
#define _MACHINE_SETJMP_H_ 
==> <gave up...>
Trying c2sc
#define _JBLEN 11
==> 11
Trying c2sc
#define _SYS_SHM_H_ 
==> <gave up...>
Trying c2sc
#define SHM_RDONLY 010000
==> 4096
Trying c2sc
#define SHM_RND 020000
==> 8192
Trying c2sc
#define SHMLBA PAGE_SIZE
==> csym::|@page_size|
Trying c2sc
#define SHM_R (000400 )
==> 256
Trying c2sc
#define SHM_W (000200 )
==> 128
Trying c2sc
#define SHM_LOCK 11
==> 11
Trying c2sc
#define SHM_UNLOCK 12
==> 12
Trying c2sc
#define SHM_STAT 13
==> 13
Trying c2sc
#define SHM_INFO 14
==> 14
Trying c2sc
#define _SIGNAL_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_SOCKET_H_ 
==> <gave up...>
Trying c2sc
#define _SYS__IOVEC_H_ 
==> <gave up...>
Trying c2sc
#define _NO_NAMESPACE_POLLUTION 
==> <gave up...>
Trying c2sc
#define _ALIGNBYTES (sizeof(int) - 1)
==> (sc::- (sc::sizeof sc::int) 1)
Trying c2sc
#define _ALIGN(p) ( ( ( unsigned ) ( p ) + ( sizeof ( int ) - 1 ) ) & ~ ( sizeof ( int ) - 1 ) )
 1:(bit-and (+ (cast unsigned-int csym::p) (- (sizeof int) 1))
 (bit-not (- (sizeof int) 1)))
[typename --- ]
[not typename --- p]
 2:(bit-and (cast unsigned-int (cast csym::p (+ (- (sizeof int) 1))))
 (bit-not (- (sizeof int) 1)))
[typename --- p]
[not typename --- ]
Select number? 1
==> (sc::bit-and
                    (sc::+ (sc::cast sc::unsigned-int csym::p)
                     (sc::- (sc::sizeof sc::int) 1))
                    (sc::bit-not (sc::- (sc::sizeof sc::int) 1)))
Trying c2sc
#define _MACHINE 1
==> 1
Trying c2sc
#define _MACHINE_ARCH 1
==> 1
Trying c2sc
#define SOCK_STREAM 1
==> 1
Trying c2sc
#define SOCK_DGRAM 2
==> 2
Trying c2sc
#define SOCK_RAW 3
==> 3
Trying c2sc
#define SOCK_RDM 4
==> 4
Trying c2sc
#define SOCK_SEQPACKET 5
==> 5
Trying c2sc
#define SO_DEBUG 0x0001
==> 1
Trying c2sc
#define SO_ACCEPTCONN 0x0002
==> 2
Trying c2sc
#define SO_REUSEADDR 0x0004
==> 4
Trying c2sc
#define SO_KEEPALIVE 0x0008
==> 8
Trying c2sc
#define SO_DONTROUTE 0x0010
==> 16
Trying c2sc
#define SO_BROADCAST 0x0020
==> 32
Trying c2sc
#define SO_USELOOPBACK 0x0040
==> 64
Trying c2sc
#define SO_LINGER 0x0080
==> 128
Trying c2sc
#define SO_OOBINLINE 0x0100
==> 256
Trying c2sc
#define SO_REUSEPORT 0x0200
==> 512
Trying c2sc
#define SO_TIMESTAMP 0x0400
==> 1024
Trying c2sc
#define SO_NOSIGPIPE 0x0800
==> 2048
Trying c2sc
#define SO_ACCEPTFILTER 0x1000
==> 4096
Trying c2sc
#define SO_BINTIME 0x2000
==> 8192
Trying c2sc
#define SO_SNDBUF 0x1001
==> 4097
Trying c2sc
#define SO_RCVBUF 0x1002
==> 4098
Trying c2sc
#define SO_SNDLOWAT 0x1003
==> 4099
Trying c2sc
#define SO_RCVLOWAT 0x1004
==> 4100
Trying c2sc
#define SO_SNDTIMEO 0x1005
==> 4101
Trying c2sc
#define SO_RCVTIMEO 0x1006
==> 4102
Trying c2sc
#define SO_ERROR 0x1007
==> 4103
Trying c2sc
#define SO_TYPE 0x1008
==> 4104
Trying c2sc
#define SO_LABEL 0x1009
==> 4105
Trying c2sc
#define SO_PEERLABEL 0x1010
==> 4112
Trying c2sc
#define SOL_SOCKET 0xffff
==> 65535
Trying c2sc
#define AF_UNSPEC 0
==> 0
Trying c2sc
#define AF_LOCAL 1
==> 1
Trying c2sc
#define AF_UNIX 1
==> 1
Trying c2sc
#define AF_INET 2
==> 2
Trying c2sc
#define AF_IMPLINK 3
==> 3
Trying c2sc
#define AF_PUP 4
==> 4
Trying c2sc
#define AF_CHAOS 5
==> 5
Trying c2sc
#define AF_NETBIOS 6
==> 6
Trying c2sc
#define AF_ISO 7
==> 7
Trying c2sc
#define AF_OSI 7
==> 7
Trying c2sc
#define AF_ECMA 8
==> 8
Trying c2sc
#define AF_DATAKIT 9
==> 9
Trying c2sc
#define AF_CCITT 10
==> 10
Trying c2sc
#define AF_SNA 11
==> 11
Trying c2sc
#define af_decNET 12
==> 12
Trying c2sc
#define AF_DLI 13
==> 13
Trying c2sc
#define AF_LAT 14
==> 14
Trying c2sc
#define AF_HYLINK 15
==> 15
Trying c2sc
#define AF_APPLETALK 16
==> 16
Trying c2sc
#define AF_ROUTE 17
==> 17
Trying c2sc
#define AF_LINK 18
==> 18
Trying c2sc
#define PSEUDO_af_xtp 19
==> 19
Trying c2sc
#define AF_COIP 20
==> 20
Trying c2sc
#define AF_CNT 21
==> 21
Trying c2sc
#define PSEUDO_af_rtip 22
==> 22
Trying c2sc
#define AF_IPX 23
==> 23
Trying c2sc
#define AF_SIP 24
==> 24
Trying c2sc
#define PSEUDO_af_pip 25
==> 25
Trying c2sc
#define AF_ISDN 26
==> 26
Trying c2sc
#define AF_E164 26
==> 26
Trying c2sc
#define PSEUDO_af_key 27
==> 27
Trying c2sc
#define AF_INET6 28
==> 28
Trying c2sc
#define AF_NATM 29
==> 29
Trying c2sc
#define AF_ATM 30
==> 30
Trying c2sc
#define PSEUDO_af_hdrcmplt 31
==> 31
Trying c2sc
#define AF_NETGRAPH 32
==> 32
Trying c2sc
#define AF_SLOW 33
==> 33
Trying c2sc
#define AF_SCLUSTER 34
==> 34
Trying c2sc
#define AF_ARP 35
==> 35
Trying c2sc
#define AF_BLUETOOTH 36
==> 36
Trying c2sc
#define AF_MAX 37
==> 37
Trying c2sc
#define SOCK_MAXADDRLEN 255
==> 255
Trying c2sc
#define _SS_MAXSIZE 128U
==> (sc::cast sc::unsigned-int 128)
Trying c2sc
#define _SS_ALIGNSIZE (sizeof(__int64_t))
==> (sc::sizeof csym::__int64_t)
Trying c2sc
#define _SS_PAD1SIZE ((sizeof(__int64_t)) - sizeof(unsigned char) - sizeof(sa_family_t))
==> (sc::- (sc::- (sc::sizeof csym::__int64_t) (sc::sizeof sc::unsigned-char))
     (sc::sizeof csym::sa_family_t))
Trying c2sc
#define _SS_PAD2SIZE (128U - sizeof(unsigned char) - sizeof(sa_family_t) - ( (sizeof(__int64_t)) - sizeof(unsigned char) - sizeof(sa_family_t)) - (sizeof(__int64_t)) )
==> (sc::-
     (sc::-
      (sc::-
       (sc::- (sc::cast sc::unsigned-int 128) (sc::sizeof sc::unsigned-char))
       (sc::sizeof csym::sa_family_t))
      (sc::-
       (sc::- (sc::sizeof csym::__int64_t) (sc::sizeof sc::unsigned-char))
       (sc::sizeof csym::sa_family_t)))
     (sc::sizeof csym::__int64_t))
Trying c2sc
#define PF_UNSPEC 0
==> 0
Trying c2sc
#define PF_LOCAL 1
==> 1
Trying c2sc
#define PF_UNIX 1
==> 1
Trying c2sc
#define PF_INET 2
==> 2
Trying c2sc
#define PF_IMPLINK 3
==> 3
Trying c2sc
#define PF_PUP 4
==> 4
Trying c2sc
#define PF_CHAOS 5
==> 5
Trying c2sc
#define PF_NETBIOS 6
==> 6
Trying c2sc
#define PF_ISO 7
==> 7
Trying c2sc
#define PF_OSI 7
==> 7
Trying c2sc
#define PF_ECMA 8
==> 8
Trying c2sc
#define PF_DATAKIT 9
==> 9
Trying c2sc
#define PF_CCITT 10
==> 10
Trying c2sc
#define PF_SNA 11
==> 11
Trying c2sc
#define pf_decNET 12
==> 12
Trying c2sc
#define PF_DLI 13
==> 13
Trying c2sc
#define PF_LAT 14
==> 14
Trying c2sc
#define PF_HYLINK 15
==> 15
Trying c2sc
#define PF_APPLETALK 16
==> 16
Trying c2sc
#define PF_ROUTE 17
==> 17
Trying c2sc
#define PF_LINK 18
==> 18
Trying c2sc
#define PF_XTP 19
==> 19
Trying c2sc
#define PF_COIP 20
==> 20
Trying c2sc
#define PF_CNT 21
==> 21
Trying c2sc
#define PF_SIP 24
==> 24
Trying c2sc
#define PF_IPX 23
==> 23
Trying c2sc
#define PF_RTIP 22
==> 22
Trying c2sc
#define PF_PIP 25
==> 25
Trying c2sc
#define PF_ISDN 26
==> 26
Trying c2sc
#define PF_KEY 27
==> 27
Trying c2sc
#define PF_INET6 28
==> 28
Trying c2sc
#define PF_NATM 29
==> 29
Trying c2sc
#define PF_ATM 30
==> 30
Trying c2sc
#define PF_NETGRAPH 32
==> 32
Trying c2sc
#define PF_SLOW 33
==> 33
Trying c2sc
#define PF_SCLUSTER 34
==> 34
Trying c2sc
#define PF_ARP 35
==> 35
Trying c2sc
#define PF_BLUETOOTH 36
==> 36
Trying c2sc
#define PF_MAX 37
==> 37
Trying c2sc
#define NET_MAXID 37
==> 37
Trying c2sc
#define CTL_NET_NAMES { { 0, 0 }, { "unix", CTLTYPE_NODE }, { "inet", CTLTYPE_NODE }, { "implink", CTLTYPE_NODE }, { "pup", CTLTYPE_NODE }, { "chaos", CTLTYPE_NODE }, { "xerox_ns", CTLTYPE_NODE }, { "iso", CTLTYPE_NODE }, { "emca", CTLTYPE_NODE }, { "datakit", CTLTYPE_NODE }, { "ccitt", CTLTYPE_NODE }, { "ibm_sna", CTLTYPE_NODE }, { "decnet", CTLTYPE_NODE }, { "dec_dli", CTLTYPE_NODE }, { "lat", CTLTYPE_NODE }, { "hylink", CTLTYPE_NODE }, { "appletalk", CTLTYPE_NODE }, { "route", CTLTYPE_NODE }, { "link_layer", CTLTYPE_NODE }, { "xtp", CTLTYPE_NODE }, { "coip", CTLTYPE_NODE }, { "cnt", CTLTYPE_NODE }, { "rtip", CTLTYPE_NODE }, { "ipx", CTLTYPE_NODE }, { "sip", CTLTYPE_NODE }, { "pip", CTLTYPE_NODE }, { "isdn", CTLTYPE_NODE }, { "key", CTLTYPE_NODE }, { "inet6", CTLTYPE_NODE }, { "natm", CTLTYPE_NODE }, { "atm", CTLTYPE_NODE }, { "hdrcomplete", CTLTYPE_NODE }, { "netgraph", CTLTYPE_NODE }, { "snp", CTLTYPE_NODE }, { "scp", CTLTYPE_NODE }, }
==> <gave up...>
Trying c2sc
#define NET_RT_DUMP 1
==> 1
Trying c2sc
#define NET_RT_FLAGS 2
==> 2
Trying c2sc
#define NET_RT_IFLIST 3
==> 3
Trying c2sc
#define NET_RT_IFMALIST 4
==> 4
Trying c2sc
#define NET_RT_MAXID 5
==> 5
Trying c2sc
#define CTL_NET_RT_NAMES { { 0, 0 }, { "dump", CTLTYPE_STRUCT }, { "flags", CTLTYPE_STRUCT }, { "iflist", CTLTYPE_STRUCT }, { "ifmalist", CTLTYPE_STRUCT }, }
==> <gave up...>
Trying c2sc
#define SOMAXCONN 128
==> 128
Trying c2sc
#define MSG_OOB 0x1
==> 1
Trying c2sc
#define MSG_PEEK 0x2
==> 2
Trying c2sc
#define MSG_DONTROUTE 0x4
==> 4
Trying c2sc
#define MSG_EOR 0x8
==> 8
Trying c2sc
#define MSG_TRUNC 0x10
==> 16
Trying c2sc
#define MSG_CTRUNC 0x20
==> 32
Trying c2sc
#define MSG_WAITALL 0x40
==> 64
Trying c2sc
#define MSG_DONTWAIT 0x80
==> 128
Trying c2sc
#define MSG_EOF 0x100
==> 256
Trying c2sc
#define MSG_NBIO 0x4000
==> 16384
Trying c2sc
#define MSG_COMPAT 0x8000
==> 32768
Trying c2sc
#define CMGROUP_MAX 16
==> 16
Trying c2sc
#define CMSG_DATA(cmsg) ( ( unsigned char * ) ( cmsg ) + ( ( ( unsigned ) ( sizeof ( struct cmsghdr ) ) + ( sizeof ( int ) - 1 ) ) & ~ ( sizeof ( int ) - 1 ) ) )
 1:(+ (cast (ptr unsigned-char) csym::cmsg)
 (bit-and
  (+ (cast unsigned-int (sizeof (struct csym::cmsghdr))) (- (sizeof int) 1))
  (bit-not (- (sizeof int) 1))))
[typename --- ]
[not typename --- cmsg]
 2:(cast (ptr unsigned-char)
 (cast csym::cmsg
  (+
   (bit-and
    (+ (cast unsigned-int (sizeof (struct csym::cmsghdr))) (- (sizeof int) 1))
    (bit-not (- (sizeof int) 1))))))
[typename --- cmsg]
[not typename --- ]
Select number? 1
==> (sc::+ (sc::cast (sc::ptr sc::unsigned-char) csym::cmsg)
                    (sc::bit-and
                     (sc::+
                      (sc::cast sc::unsigned-int
                       (sc::sizeof (sc::struct csym::cmsghdr)))
                      (sc::- (sc::sizeof sc::int) 1))
                     (sc::bit-not (sc::- (sc::sizeof sc::int) 1))))
Trying c2sc
#define CMSG_NXTHDR(mhdr,cmsg) ( ( ( char * ) ( cmsg ) + ( ( ( unsigned ) ( ( cmsg ) -> cmsg_len ) + ( sizeof ( int ) - 1 ) ) & ~ ( sizeof ( int ) - 1 ) ) + ( ( ( unsigned ) ( sizeof ( struct cmsghdr ) ) + ( sizeof ( int ) - 1 ) ) & ~ ( sizeof ( int ) - 1 ) ) > ( char * ) ( mhdr ) -> msg_control + ( mhdr ) -> msg_controllen ) ? ( struct cmsghdr * ) 0 : ( struct cmsghdr * ) ( ( char * ) ( cmsg ) + ( ( ( unsigned ) ( ( cmsg ) -> cmsg_len ) + ( sizeof ( int ) - 1 ) ) & ~ ( sizeof ( int ) - 1 ) ) ) )
==> (sc::if-exp
     (sc::>
      (sc::+
       (sc::+ (sc::cast (sc::ptr sc::char) csym::cmsg)
        (sc::bit-and
         (sc::+
          (sc::cast sc::unsigned-int
           (sc::fref (sc::mref csym::cmsg) csym::cmsg_len))
          (sc::- (sc::sizeof sc::int) 1))
         (sc::bit-not (sc::- (sc::sizeof sc::int) 1))))
       (sc::bit-and
        (sc::+
         (sc::cast sc::unsigned-int (sc::sizeof (sc::struct csym::cmsghdr)))
         (sc::- (sc::sizeof sc::int) 1))
        (sc::bit-not (sc::- (sc::sizeof sc::int) 1))))
      (sc::+
       (sc::cast (sc::ptr sc::char)
        (sc::fref (sc::mref csym::mhdr) csym::msg_control))
       (sc::fref (sc::mref csym::mhdr) csym::msg_controllen)))
     (sc::cast (sc::ptr (sc::struct csym::cmsghdr)) 0)
     (sc::cast (sc::ptr (sc::struct csym::cmsghdr))
      (sc::+ (sc::cast (sc::ptr sc::char) csym::cmsg)
       (sc::bit-and
        (sc::+
         (sc::cast sc::unsigned-int
          (sc::fref (sc::mref csym::cmsg) csym::cmsg_len))
         (sc::- (sc::sizeof sc::int) 1))
        (sc::bit-not (sc::- (sc::sizeof sc::int) 1))))))
Trying c2sc
#define CMSG_FIRSTHDR(mhdr) ( ( mhdr ) -> msg_controllen >= sizeof ( struct cmsghdr ) ? ( struct cmsghdr * ) ( mhdr ) -> msg_control : ( struct cmsghdr * ) ( ( void * ) 0 ) )
==> (sc::if-exp
     (sc::>= (sc::fref (sc::mref csym::mhdr) csym::msg_controllen)
      (sc::sizeof (sc::struct csym::cmsghdr)))
     (sc::cast (sc::ptr (sc::struct csym::cmsghdr))
      (sc::fref (sc::mref csym::mhdr) csym::msg_control))
     (sc::cast (sc::ptr (sc::struct csym::cmsghdr))
      (sc::cast (sc::ptr sc::void) 0)))
Trying c2sc
#define CMSG_SPACE(l) ( ( ( ( unsigned ) ( sizeof ( struct cmsghdr ) ) + ( sizeof ( int ) - 1 ) ) & ~ ( sizeof ( int ) - 1 ) ) + ( ( ( unsigned ) ( l ) + ( sizeof ( int ) - 1 ) ) & ~ ( sizeof ( int ) - 1 ) ) )
 1:(+
 (bit-and
  (+ (cast unsigned-int (sizeof (struct csym::cmsghdr))) (- (sizeof int) 1))
  (bit-not (- (sizeof int) 1)))
 (bit-and (+ (cast unsigned-int csym::l) (- (sizeof int) 1))
  (bit-not (- (sizeof int) 1))))
[typename --- ]
[not typename --- l]
 2:(+
 (bit-and
  (+ (cast unsigned-int (sizeof (struct csym::cmsghdr))) (- (sizeof int) 1))
  (bit-not (- (sizeof int) 1)))
 (bit-and (cast unsigned-int (cast csym::l (+ (- (sizeof int) 1))))
  (bit-not (- (sizeof int) 1))))
[typename --- l]
[not typename --- ]
Select number? 1
==> (sc::+
                    (sc::bit-and
                     (sc::+
                      (sc::cast sc::unsigned-int
                       (sc::sizeof (sc::struct csym::cmsghdr)))
                      (sc::- (sc::sizeof sc::int) 1))
                     (sc::bit-not (sc::- (sc::sizeof sc::int) 1)))
                    (sc::bit-and
                     (sc::+ (sc::cast sc::unsigned-int csym::l)
                      (sc::- (sc::sizeof sc::int) 1))
                     (sc::bit-not (sc::- (sc::sizeof sc::int) 1))))
Trying c2sc
#define CMSG_LEN(l) ( ( ( ( unsigned ) ( sizeof ( struct cmsghdr ) ) + ( sizeof ( int ) - 1 ) ) & ~ ( sizeof ( int ) - 1 ) ) + ( l ) )
==> (sc::+
     (sc::bit-and
      (sc::+
       (sc::cast sc::unsigned-int (sc::sizeof (sc::struct csym::cmsghdr)))
       (sc::- (sc::sizeof sc::int) 1))
      (sc::bit-not (sc::- (sc::sizeof sc::int) 1)))
     csym::l)
Trying c2sc
#define SCM_RIGHTS 0x01
==> 1
Trying c2sc
#define SCM_TIMESTAMP 0x02
==> 2
Trying c2sc
#define SCM_CREDS 0x03
==> 3
Trying c2sc
#define SCM_BINTIME 0x04
==> 4
Trying c2sc
#define SHUT_RD 0
==> 0
Trying c2sc
#define SHUT_WR 1
==> 1
Trying c2sc
#define SHUT_RDWR 2
==> 2
Trying c2sc
#define SF_NODISKIO 0x00000001
==> 1
Trying c2sc
#define _SYS_STATVFS_H_ 
==> <gave up...>
Trying c2sc
#define ST_RDONLY 0x1
==> 1
Trying c2sc
#define ST_NOSUID 0x2
==> 2
Trying c2sc
#define _MACHINE_STDARG_H_ 
==> <gave up...>
Trying c2sc
#define _VA_LIST_DECLARED 
==> <gave up...>
Trying c2sc
#define va_start(ap,last) __builtin_stdarg_start ( ( ap ) , ( last ) )
==> (csym::__builtin_stdarg_start csym::ap csym::last)
Trying c2sc
#define va_arg(ap,type) __builtin_va_arg ( ( ap ) , type )
==> (csym::__builtin_va_arg csym::ap csym::type)
Trying c2sc
#define va_copy(dest,src) __builtin_va_copy ( ( dest ) , ( src ) )
==> (csym::__builtin_va_copy csym::dest csym::src)
Trying c2sc
#define va_end(ap) __builtin_va_end ( ap )
==> (csym::__builtin_va_end csym::ap)
Trying c2sc
#define _STDBOOL_H_ 
==> <gave up...>
Trying c2sc
#define __bool_true_false_are_defined 1
==> 1
Trying c2sc
#define false 0
==> 0
Trying c2sc
#define true 1
==> 1
Trying c2sc
#define bool _Bool
==> <gave up...>
Trying c2sc
#define _STDDEF_H_ 
==> <gave up...>
Trying c2sc
#define _RUNE_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _WCHAR_T_DECLARED 
==> <gave up...>
Trying c2sc
#define offsetof(type,member) ( ( size_t ) ( & ( ( type * ) 0 ) -> member ) )
 1:(csym::size_t (ptr (fref (mref (cast (ptr csym::type) 0)) csym::member)))
[typename --- ]
[not typename --- size_t]
 2:(cast csym::size_t (ptr (fref (mref (cast (ptr csym::type) 0)) csym::member)))
[typename --- size_t]
[not typename --- ]
Select number? 2
==> (sc::cast csym::size_t
                    (sc::ptr
                     (sc::fref (sc::mref (sc::cast (sc::ptr csym::type) 0))
                      csym::member)))
Trying c2sc
#define _STDIO_H_ 
==> <gave up...>
Trying c2sc
#define _FSTDIO 
==> <gave up...>
Trying c2sc
#define _STDSTREAM_DECLARED 
==> <gave up...>
Trying c2sc
#define __SLBF 0x0001
==> 1
Trying c2sc
#define __SNBF 0x0002
==> 2
Trying c2sc
#define __SRD 0x0004
==> 4
Trying c2sc
#define __SWR 0x0008
==> 8
Trying c2sc
#define __SRW 0x0010
==> 16
Trying c2sc
#define __SEOF 0x0020
==> 32
Trying c2sc
#define __SERR 0x0040
==> 64
Trying c2sc
#define __SMBF 0x0080
==> 128
Trying c2sc
#define __SAPP 0x0100
==> 256
Trying c2sc
#define __SSTR 0x0200
==> 512
Trying c2sc
#define __SOPT 0x0400
==> 1024
Trying c2sc
#define __SNPT 0x0800
==> 2048
Trying c2sc
#define __SOFF 0x1000
==> 4096
Trying c2sc
#define __SMOD 0x2000
==> 8192
Trying c2sc
#define __SALC 0x4000
==> 16384
Trying c2sc
#define __SIGN 0x8000
==> 32768
Trying c2sc
#define _IOFBF 0
==> 0
Trying c2sc
#define _IOLBF 1
==> 1
Trying c2sc
#define _IONBF 2
==> 2
Trying c2sc
#define BUFSIZ 1024
==> 1024
Trying c2sc
#define EOF (-1)
==> (sc::- 1)
Trying c2sc
#define FOPEN_MAX 20
==> 20
Trying c2sc
#define FILENAME_MAX 1024
==> 1024
Trying c2sc
#define p_TMPDIR "/var/tmp/"
==> "/var/tmp/"
Trying c2sc
#define l_TMPNAM 1024
==> 1024
Trying c2sc
#define TMP_MAX 308915776
==> 308915776
Trying c2sc
#define SEEK_SET 0
==> 0
Trying c2sc
#define SEEK_CUR 1
==> 1
Trying c2sc
#define SEEK_END 2
==> 2
Trying c2sc
#define stdin __stdinp
==> csym::__stdinp
Trying c2sc
#define stdout __stdoutp
==> csym::__stdoutp
Trying c2sc
#define stderr __stderrp
==> csym::__stderrp
Trying c2sc
#define l_CUSERID 17
==> 17
Trying c2sc
#define l_CTERMID 1024
==> 1024
Trying c2sc
#define __ATTR_FORMAT_ARG 
==> <gave up...>
Trying c2sc
#define fropen(cookie,nil) funopen ( cookie , , 0 , 0 , 0 )
==> <gave up...>
Trying c2sc
#define fwopen(cookie,nil) funopen ( cookie , 0 , , 0 , 0 )
==> <gave up...>
Trying c2sc
#define __sgetc(p) ( -- ( p ) -> _r < 0 ? __srget ( p ) : ( int ) ( * ( p ) -> _p ++ ) )
==> (sc::if-exp (sc::< (sc::-- (sc::fref (sc::mref csym::p) csym::_r)) 0)
     (csym::__srget csym::p)
     (sc::cast sc::int
      (sc::mref (sc::inc (sc::fref (sc::mref csym::p) csym::_p)))))
Trying c2sc
#define __sfeof(p) ( ( ( p ) -> _flags & 0x0020 ) != 0 )
==> (sc::!= (sc::bit-and (sc::fref (sc::mref csym::p) csym::_flags) 32) 0)
Trying c2sc
#define __sferror(p) ( ( ( p ) -> _flags & 0x0040 ) != 0 )
==> (sc::!= (sc::bit-and (sc::fref (sc::mref csym::p) csym::_flags) 64) 0)
Trying c2sc
#define __sclearerr(p) ( ( void ) ( ( p ) -> _flags &= ~ ( 0x0040 | 0x0020 ) ) )
==> (sc::cast sc::void
     (sc::bit-and= (sc::fref (sc::mref csym::p) csym::_flags)
      (sc::bit-not (sc::bit-or 64 32))))
Trying c2sc
#define __sfileno(p) ( ( p ) -> _file )
==> (sc::fref (sc::mref csym::p) csym::_file)
Trying c2sc
#define feof(p) ( ! __isthreaded ? ( ( ( p ) -> _flags & 0x0020 ) != 0 ) : ( feof ) ( p ) )
 1:(if-exp (not csym::__isthreaded)
 (!= (bit-and (fref (mref csym::p) csym::_flags) 32) 0) (csym::feof csym::p))
[typename --- ]
[not typename --- feof]
 2:(if-exp (not csym::__isthreaded)
 (!= (bit-and (fref (mref csym::p) csym::_flags) 32) 0)
 (cast csym::feof csym::p))
[typename --- feof]
[not typename --- ]
Select number? 1
==> (sc::if-exp (sc::not csym::__isthreaded)
                    (sc::!=
                     (sc::bit-and (sc::fref (sc::mref csym::p) csym::_flags)
                      32)
                     0)
                    (csym::feof csym::p))
Trying c2sc
#define ferror(p) ( ! __isthreaded ? ( ( ( p ) -> _flags & 0x0040 ) != 0 ) : ( ferror ) ( p ) )
 1:(if-exp (not csym::__isthreaded)
 (!= (bit-and (fref (mref csym::p) csym::_flags) 64) 0) (csym::ferror csym::p))
[typename --- ]
[not typename --- ferror]
 2:(if-exp (not csym::__isthreaded)
 (!= (bit-and (fref (mref csym::p) csym::_flags) 64) 0)
 (cast csym::ferror csym::p))
[typename --- ferror]
[not typename --- ]
Select number? 1
==> (sc::if-exp (sc::not csym::__isthreaded)
                    (sc::!=
                     (sc::bit-and (sc::fref (sc::mref csym::p) csym::_flags)
                      64)
                     0)
                    (csym::ferror csym::p))
Trying c2sc
#define clearerr(p) ( ! __isthreaded ? ( ( void ) ( ( p ) -> _flags &= ~ ( 0x0040 | 0x0020 ) ) ) : ( clearerr ) ( p ) )
 1:(if-exp (not csym::__isthreaded)
 (cast void
  (bit-and= (fref (mref csym::p) csym::_flags) (bit-not (bit-or 64 32))))
 (csym::clearerr csym::p))
[typename --- ]
[not typename --- clearerr]
 2:(if-exp (not csym::__isthreaded)
 (cast void
  (bit-and= (fref (mref csym::p) csym::_flags) (bit-not (bit-or 64 32))))
 (cast csym::clearerr csym::p))
[typename --- clearerr]
[not typename --- ]
Select number? 1
==> (sc::if-exp (sc::not csym::__isthreaded)
                    (sc::cast sc::void
                     (sc::bit-and= (sc::fref (sc::mref csym::p) csym::_flags)
                      (sc::bit-not (sc::bit-or 64 32))))
                    (csym::clearerr csym::p))
Trying c2sc
#define fileno(p) ( ! __isthreaded ? ( ( p ) -> _file ) : ( fileno ) ( p ) )
 1:(if-exp (not csym::__isthreaded) (fref (mref csym::p) csym::_file)
 (csym::fileno csym::p))
[typename --- ]
[not typename --- fileno]
 2:(if-exp (not csym::__isthreaded) (fref (mref csym::p) csym::_file)
 (cast csym::fileno csym::p))
[typename --- fileno]
[not typename --- ]
Select number? 1
==> (sc::if-exp (sc::not csym::__isthreaded)
                    (sc::fref (sc::mref csym::p) csym::_file)
                    (csym::fileno csym::p))
Trying c2sc
#define getc(fp) ( ! __isthreaded ? ( -- ( fp ) -> _r < 0 ? __srget ( fp ) : ( int ) ( * ( fp ) -> _p ++ ) ) : ( getc ) ( fp ) )
 1:(if-exp (not csym::__isthreaded)
 (if-exp (< (-- (fref (mref csym::fp) csym::_r)) 0) (csym::__srget csym::fp)
  (cast int (mref (inc (fref (mref csym::fp) csym::_p)))))
 (csym::getc csym::fp))
[typename --- ]
[not typename --- getc]
 2:(if-exp (not csym::__isthreaded)
 (if-exp (< (-- (fref (mref csym::fp) csym::_r)) 0) (csym::__srget csym::fp)
  (cast int (mref (inc (fref (mref csym::fp) csym::_p)))))
 (cast csym::getc csym::fp))
[typename --- getc]
[not typename --- ]
Select number? 1
==> (sc::if-exp (sc::not csym::__isthreaded)
                    (sc::if-exp
                     (sc::< (sc::-- (sc::fref (sc::mref csym::fp) csym::_r)) 0)
                     (csym::__srget csym::fp)
                     (sc::cast sc::int
                      (sc::mref
                       (sc::inc (sc::fref (sc::mref csym::fp) csym::_p)))))
                    (csym::getc csym::fp))
Trying c2sc
#define putc(x,fp) ( ! __isthreaded ? __sputc ( x , fp ) : ( putc ) ( x , fp ) )
 1:(if-exp (not csym::__isthreaded) (csym::__sputc csym::x csym::fp)
 (csym::putc csym::x csym::fp))
[typename --- ]
[not typename --- putc]
 2:(if-exp (not csym::__isthreaded) (csym::__sputc csym::x csym::fp)
 (cast csym::putc (c2sc::exps csym::x csym::fp)))
[typename --- putc]
[not typename --- x]
Select number? 1
==> (sc::if-exp (sc::not csym::__isthreaded)
                    (csym::__sputc csym::x csym::fp)
                    (csym::putc csym::x csym::fp))
Trying c2sc
#define getchar() ( ! __isthreaded ? ( -- ( __stdinp ) -> _r < 0 ? __srget ( __stdinp ) : ( int ) ( * ( __stdinp ) -> _p ++ ) ) : ( getc ) ( __stdinp ) )
 1:(if-exp (not csym::__isthreaded)
 (if-exp (< (-- (fref (mref csym::__stdinp) csym::_r)) 0)
  (csym::__srget csym::__stdinp)
  (cast int (mref (inc (fref (mref csym::__stdinp) csym::_p)))))
 (csym::getc csym::__stdinp))
[typename --- ]
[not typename --- getc]
 2:(if-exp (not csym::__isthreaded)
 (if-exp (< (-- (fref (mref csym::__stdinp) csym::_r)) 0)
  (csym::__srget csym::__stdinp)
  (cast int (mref (inc (fref (mref csym::__stdinp) csym::_p)))))
 (cast csym::getc csym::__stdinp))
[typename --- getc]
[not typename --- ]
Select number? 1
==> (sc::if-exp (sc::not csym::__isthreaded)
                    (sc::if-exp
                     (sc::<
                      (sc::-- (sc::fref (sc::mref csym::__stdinp) csym::_r)) 0)
                     (csym::__srget csym::__stdinp)
                     (sc::cast sc::int
                      (sc::mref
                       (sc::inc
                        (sc::fref (sc::mref csym::__stdinp) csym::_p)))))
                    (csym::getc csym::__stdinp))
Trying c2sc
#define putchar(x) ( ! __isthreaded ? __sputc ( x , __stdoutp ) : ( putc ) ( x , __stdoutp ) )
 1:(if-exp (not csym::__isthreaded) (csym::__sputc csym::x csym::__stdoutp)
 (csym::putc csym::x csym::__stdoutp))
[typename --- ]
[not typename --- putc]
 2:(if-exp (not csym::__isthreaded) (csym::__sputc csym::x csym::__stdoutp)
 (cast csym::putc (c2sc::exps csym::x csym::__stdoutp)))
[typename --- putc]
[not typename --- x]
Select number? 1
==> (sc::if-exp (sc::not csym::__isthreaded)
                    (csym::__sputc csym::x csym::__stdoutp)
                    (csym::putc csym::x csym::__stdoutp))
Trying c2sc
#define feof_unlocked(p) ( ( ( p ) -> _flags & 0x0020 ) != 0 )
==> (sc::!= (sc::bit-and (sc::fref (sc::mref csym::p) csym::_flags) 32) 0)
Trying c2sc
#define ferror_unlocked(p) ( ( ( p ) -> _flags & 0x0040 ) != 0 )
==> (sc::!= (sc::bit-and (sc::fref (sc::mref csym::p) csym::_flags) 64) 0)
Trying c2sc
#define clearerr_unlocked(p) ( ( void ) ( ( p ) -> _flags &= ~ ( 0x0040 | 0x0020 ) ) )
==> (sc::cast sc::void
     (sc::bit-and= (sc::fref (sc::mref csym::p) csym::_flags)
      (sc::bit-not (sc::bit-or 64 32))))
Trying c2sc
#define fileno_unlocked(p) ( ( p ) -> _file )
==> (sc::fref (sc::mref csym::p) csym::_file)
Trying c2sc
#define getc_unlocked(fp) ( -- ( fp ) -> _r < 0 ? __srget ( fp ) : ( int ) ( * ( fp ) -> _p ++ ) )
==> (sc::if-exp (sc::< (sc::-- (sc::fref (sc::mref csym::fp) csym::_r)) 0)
     (csym::__srget csym::fp)
     (sc::cast sc::int
      (sc::mref (sc::inc (sc::fref (sc::mref csym::fp) csym::_p)))))
Trying c2sc
#define putc_unlocked(x,fp) __sputc ( x , fp )
==> (csym::__sputc csym::x csym::fp)
Trying c2sc
#define getchar_unlocked() ( -- ( __stdinp ) -> _r < 0 ? __srget ( __stdinp ) : ( int ) ( * ( __stdinp ) -> _p ++ ) )
==> (sc::if-exp
     (sc::< (sc::-- (sc::fref (sc::mref csym::__stdinp) csym::_r)) 0)
     (csym::__srget csym::__stdinp)
     (sc::cast sc::int
      (sc::mref (sc::inc (sc::fref (sc::mref csym::__stdinp) csym::_p)))))
Trying c2sc
#define putchar_unlocked(x) __sputc ( x , __stdoutp )
==> (csym::__sputc csym::x csym::__stdoutp)
Trying c2sc
#define _STDLIB_H_ 
==> <gave up...>
Trying c2sc
#define EXIT_FAILURE 1
==> 1
Trying c2sc
#define EXIT_SUCCESS 0
==> 0
Trying c2sc
#define RAND_MAX 0x7fffffff
==> 2147483647
Trying c2sc
#define MB_CUR_MAX __mb_cur_max
==> csym::__mb_cur_max
Trying c2sc
#define _MKSTEMP_DECLARED 
==> <gave up...>
Trying c2sc
#define _MKTEMP_DECLARED 
==> <gave up...>
Trying c2sc
#define _SETKEY_DECLARED 
==> <gave up...>
Trying c2sc
#define alloca(sz) __builtin_alloca ( sz )
==> (csym::__builtin_alloca csym::sz)
Trying c2sc
#define _STRING_H_ 
==> <gave up...>
Trying c2sc
#define _STRINGS_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_SYSLOG_H_ 
==> <gave up...>
Trying c2sc
#define _PATH_LOG "/var/run/log"
==> "/var/run/log"
Trying c2sc
#define _PATH_LOG_PRIV "/var/run/logpriv"
==> "/var/run/logpriv"
Trying c2sc
#define _PATH_OLDLOG "/dev/log"
==> "/dev/log"
Trying c2sc
#define LOG_EMERG 0
==> 0
Trying c2sc
#define LOG_ALERT 1
==> 1
Trying c2sc
#define LOG_CRIT 2
==> 2
Trying c2sc
#define LOG_ERR 3
==> 3
Trying c2sc
#define LOG_WARNING 4
==> 4
Trying c2sc
#define LOG_NOTICE 5
==> 5
Trying c2sc
#define LOG_INFO 6
==> 6
Trying c2sc
#define LOG_DEBUG 7
==> 7
Trying c2sc
#define LOG_PRIMASK 0x07
==> 7
Trying c2sc
#define LOG_PRI(p) ( ( p ) & 0x07 )
 1:(bit-and csym::p 7)
[typename --- ]
[not typename --- p]
 2:(cast csym::p (ptr 7))
[typename --- p]
[not typename --- ]
Select number? 1
==> (sc::bit-and csym::p 7)
Trying c2sc
#define LOG_MAKEPRI(fac,pri) ( ( fac ) | ( pri ) )
==> (sc::bit-or csym::fac csym::pri)
Trying c2sc
#define LOG_KERN (0<<3)
==> (sc::<< 0 3)
Trying c2sc
#define LOG_USER (1<<3)
==> (sc::<< 1 3)
Trying c2sc
#define LOG_MAIL (2<<3)
==> (sc::<< 2 3)
Trying c2sc
#define LOG_DAEMON (3<<3)
==> (sc::<< 3 3)
Trying c2sc
#define LOG_AUTH (4<<3)
==> (sc::<< 4 3)
Trying c2sc
#define LOG_SYSLOG (5<<3)
==> (sc::<< 5 3)
Trying c2sc
#define LOG_LPR (6<<3)
==> (sc::<< 6 3)
Trying c2sc
#define LOG_NEWS (7<<3)
==> (sc::<< 7 3)
Trying c2sc
#define LOG_UUCP (8<<3)
==> (sc::<< 8 3)
Trying c2sc
#define LOG_CRON (9<<3)
==> (sc::<< 9 3)
Trying c2sc
#define LOG_AUTHPRIV (10<<3)
==> (sc::<< 10 3)
Trying c2sc
#define LOG_FTP (11<<3)
==> (sc::<< 11 3)
Trying c2sc
#define LOG_NTP (12<<3)
==> (sc::<< 12 3)
Trying c2sc
#define LOG_SECURITY (13<<3)
==> (sc::<< 13 3)
Trying c2sc
#define LOG_CONSOLE (14<<3)
==> (sc::<< 14 3)
Trying c2sc
#define LOG_LOCAL0 (16<<3)
==> (sc::<< 16 3)
Trying c2sc
#define LOG_LOCAL1 (17<<3)
==> (sc::<< 17 3)
Trying c2sc
#define LOG_LOCAL2 (18<<3)
==> (sc::<< 18 3)
Trying c2sc
#define LOG_LOCAL3 (19<<3)
==> (sc::<< 19 3)
Trying c2sc
#define LOG_LOCAL4 (20<<3)
==> (sc::<< 20 3)
Trying c2sc
#define LOG_LOCAL5 (21<<3)
==> (sc::<< 21 3)
Trying c2sc
#define LOG_LOCAL6 (22<<3)
==> (sc::<< 22 3)
Trying c2sc
#define LOG_LOCAL7 (23<<3)
==> (sc::<< 23 3)
Trying c2sc
#define LOG_NFACILITIES 24
==> 24
Trying c2sc
#define LOG_FACMASK 0x03f8
==> 1016
Trying c2sc
#define LOG_FAC(p) ( ( ( p ) & 0x03f8 ) >> 3 )
 1:(>> (bit-and csym::p 1016) 3)
[typename --- ]
[not typename --- p]
 2:(>> (cast csym::p (ptr 1016)) 3)
[typename --- p]
[not typename --- ]
Select number? 1
==> (sc::>> (sc::bit-and csym::p 1016) 3)
Trying c2sc
#define LOG_MASK(pri) ( 1 << ( pri ) )
==> (sc::<< 1 csym::pri)
Trying c2sc
#define LOG_UPTO(pri) ( ( 1 << ( ( pri ) + 1 ) ) - 1 )
 1:(- (<< 1 (+ csym::pri 1)) 1)
[typename --- ]
[not typename --- pri]
 2:(- (<< 1 (cast csym::pri (+ 1))) 1)
[typename --- pri]
[not typename --- ]
Select number? 1
==> (sc::- (sc::<< 1 (sc::+ csym::pri 1)) 1)
Trying c2sc
#define LOG_PID 0x01
==> 1
Trying c2sc
#define LOG_CONS 0x02
==> 2
Trying c2sc
#define LOG_ODELAY 0x04
==> 4
Trying c2sc
#define LOG_NDELAY 0x08
==> 8
Trying c2sc
#define LOG_NOWAIT 0x10
==> 16
Trying c2sc
#define LOG_PERROR 0x20
==> 32
Trying c2sc
#define _TAR_H 
==> <gave up...>
Trying c2sc
#define TMAGIC "ustar"
==> "ustar"
Trying c2sc
#define TMAGLEN 6
==> 6
Trying c2sc
#define TVERSION "00"
==> "00"
Trying c2sc
#define TVERSLEN 2
==> 2
Trying c2sc
#define REGTYPE '0'
==> #\0
Trying c2sc
#define AREGTYPE '\0'
==> #\Null
Trying c2sc
#define LNKTYPE '1'
==> #\1
Trying c2sc
#define SYMTYPE '2'
==> #\2
Trying c2sc
#define CHRTYPE '3'
==> #\3
Trying c2sc
#define BLKTYPE '4'
==> #\4
Trying c2sc
#define DIRTYPE '5'
==> #\5
Trying c2sc
#define FIFOTYPE '6'
==> #\6
Trying c2sc
#define CONTTYPE '7'
==> #\7
Trying c2sc
#define TSUID 04000
==> 2048
Trying c2sc
#define TSGID 02000
==> 1024
Trying c2sc
#define TSVTX 01000
==> 512
Trying c2sc
#define TUREAD 00400
==> 256
Trying c2sc
#define TUWRITE 00200
==> 128
Trying c2sc
#define TUEXEC 00100
==> 64
Trying c2sc
#define TGREAD 00040
==> 32
Trying c2sc
#define TGWRITE 00020
==> 16
Trying c2sc
#define TGEXEC 00010
==> 8
Trying c2sc
#define TOREAD 00004
==> 4
Trying c2sc
#define TOWRITE 00002
==> 2
Trying c2sc
#define TOEXEC 00001
==> 1
Trying c2sc
#define _NETINET_TCP_H_ 
==> <gave up...>
Trying c2sc
#define tcp6_seq tcp_seq
==> csym::tcp_seq
Trying c2sc
#define tcp6hdr tcphdr
==> csym::tcphdr
Trying c2sc
#define TH_FIN 0x01
==> 1
Trying c2sc
#define TH_SYN 0x02
==> 2
Trying c2sc
#define TH_RST 0x04
==> 4
Trying c2sc
#define TH_PUSH 0x08
==> 8
Trying c2sc
#define TH_ACK 0x10
==> 16
Trying c2sc
#define TH_URG 0x20
==> 32
Trying c2sc
#define TH_ECE 0x40
==> 64
Trying c2sc
#define TH_CWR 0x80
==> 128
Trying c2sc
#define TH_FLAGS (0x01 |0x02 |0x04 |0x10 |0x20 |0x40 |0x80 )
==> (sc::bit-or 1 2 4 16 32 64 128)
Trying c2sc
#define TCPOPT_EOL 0
==> 0
Trying c2sc
#define TCPOPT_NOP 1
==> 1
Trying c2sc
#define TCPOPT_MAXSEG 2
==> 2
Trying c2sc
#define TCPOLEN_MAXSEG 4
==> 4
Trying c2sc
#define TCPOPT_WINDOW 3
==> 3
Trying c2sc
#define TCPOLEN_WINDOW 3
==> 3
Trying c2sc
#define TCPOPT_SACK_PERMITTED 4
==> 4
Trying c2sc
#define TCPOLEN_SACK_PERMITTED 2
==> 2
Trying c2sc
#define TCPOPT_SACK 5
==> 5
Trying c2sc
#define TCPOLEN_SACK 8
==> 8
Trying c2sc
#define TCPOPT_TIMESTAMP 8
==> 8
Trying c2sc
#define TCPOLEN_TIMESTAMP 10
==> 10
Trying c2sc
#define TCPOLEN_TSTAMP_APPA (10 +2)
==> (sc::+ 10 2)
Trying c2sc
#define TCPOPT_TSTAMP_HDR (1 <<24|1 <<16|8 <<8|10 )
==> (sc::bit-or (sc::<< 1 24) (sc::<< 1 16) (sc::<< 8 8) 10)
Trying c2sc
#define MAX_TCPOPTLEN 40
==> 40
Trying c2sc
#define TCPOPT_CC 11
==> 11
Trying c2sc
#define TCPOPT_CCNEW 12
==> 12
Trying c2sc
#define TCPOPT_CCECHO 13
==> 13
Trying c2sc
#define TCPOLEN_CC 6
==> 6
Trying c2sc
#define TCPOLEN_CC_APPA (6 +2)
==> (sc::+ 6 2)
Trying c2sc
#define TCPOPT_CC_HDR(ccopt) ( 1 << 24 | 1 << 16 | ( ccopt ) << 8 | 6 )
==> (sc::bit-or (sc::<< 1 24) (sc::<< 1 16) (sc::<< csym::ccopt 8) 6)
Trying c2sc
#define TCPOPT_SIGNATURE 19
==> 19
Trying c2sc
#define TCPOLEN_SIGNATURE 18
==> 18
Trying c2sc
#define TCPOPT_SACK_PERMIT_HDR (1 <<24|1 <<16|4 <<8|2 )
==> (sc::bit-or (sc::<< 1 24) (sc::<< 1 16) (sc::<< 4 8) 2)
Trying c2sc
#define TCPOPT_SACK_HDR (1 <<24|1 <<16|5 <<8)
==> (sc::bit-or (sc::<< 1 24) (sc::<< 1 16) (sc::<< 5 8))
Trying c2sc
#define MAX_SACK_BLKS 6
==> 6
Trying c2sc
#define TCP_MAX_SACK 3
==> 3
Trying c2sc
#define TCP_MSS 512
==> 512
Trying c2sc
#define TCP_MINMSS 216
==> 216
Trying c2sc
#define TCP_MINMSSOVERLOAD 0
==> 0
Trying c2sc
#define TCP6_MSS 1024
==> 1024
Trying c2sc
#define TCP_MAXWIN 65535
==> 65535
Trying c2sc
#define TTCP_CLIENT_SND_WND 4096
==> 4096
Trying c2sc
#define TCP_MAX_WINSHIFT 14
==> 14
Trying c2sc
#define TCP_MAXBURST 4
==> 4
Trying c2sc
#define TCP_MAXHLEN (0xf<<2)
==> (sc::<< 15 2)
Trying c2sc
#define TCP_MAXOLEN ((0xf<<2) - sizeof(struct tcphdr))
==> (sc::- (sc::<< 15 2) (sc::sizeof (sc::struct csym::tcphdr)))
Trying c2sc
#define TCP_NODELAY 0x01
==> 1
Trying c2sc
#define TCP_MAXSEG 0x02
==> 2
Trying c2sc
#define TCP_NOPUSH 0x04
==> 4
Trying c2sc
#define TCP_NOOPT 0x08
==> 8
Trying c2sc
#define TCP_MD5SIG 0x10
==> 16
Trying c2sc
#define _SYS_TERMIOS_H_ 
==> <gave up...>
Trying c2sc
#define VEOF 0
==> 0
Trying c2sc
#define VEOL 1
==> 1
Trying c2sc
#define VEOL2 2
==> 2
Trying c2sc
#define VERASE 3
==> 3
Trying c2sc
#define VWERASE 4
==> 4
Trying c2sc
#define VKILL 5
==> 5
Trying c2sc
#define VREPRINT 6
==> 6
Trying c2sc
#define VERASE2 7
==> 7
Trying c2sc
#define VINTR 8
==> 8
Trying c2sc
#define VQUIT 9
==> 9
Trying c2sc
#define VSUSP 10
==> 10
Trying c2sc
#define VDSUSP 11
==> 11
Trying c2sc
#define VSTART 12
==> 12
Trying c2sc
#define VSTOP 13
==> 13
Trying c2sc
#define VLNEXT 14
==> 14
Trying c2sc
#define VDISCARD 15
==> 15
Trying c2sc
#define VMIN 16
==> 16
Trying c2sc
#define VTIME 17
==> 17
Trying c2sc
#define VSTATUS 18
==> 18
Trying c2sc
#define NCCS 20
==> 20
Trying c2sc
#define _POSIX_VDISABLE 0xff
==> 255
Trying c2sc
#define CCEQ(val,c) ( ( c ) == ( val ) ? ( val ) != 0xff : 0 )
==> (sc::if-exp (sc::== csym::c csym::val) (sc::!= csym::val 255) 0)
Trying c2sc
#define IGNBRK 0x00000001
==> 1
Trying c2sc
#define BRKINT 0x00000002
==> 2
Trying c2sc
#define IGNPAR 0x00000004
==> 4
Trying c2sc
#define PARMRK 0x00000008
==> 8
Trying c2sc
#define INPCK 0x00000010
==> 16
Trying c2sc
#define ISTRIP 0x00000020
==> 32
Trying c2sc
#define INLCR 0x00000040
==> 64
Trying c2sc
#define IGNCR 0x00000080
==> 128
Trying c2sc
#define ICRNL 0x00000100
==> 256
Trying c2sc
#define IXON 0x00000200
==> 512
Trying c2sc
#define IXOFF 0x00000400
==> 1024
Trying c2sc
#define IXANY 0x00000800
==> 2048
Trying c2sc
#define IMAXBEL 0x00002000
==> 8192
Trying c2sc
#define OPOST 0x00000001
==> 1
Trying c2sc
#define ONLCR 0x00000002
==> 2
Trying c2sc
#define OXTABS 0x00000004
==> 4
Trying c2sc
#define ONOEOT 0x00000008
==> 8
Trying c2sc
#define OCRNL 0x00000010
==> 16
Trying c2sc
#define ONOCR 0x00000020
==> 32
Trying c2sc
#define ONLRET 0x00000040
==> 64
Trying c2sc
#define CIGNORE 0x00000001
==> 1
Trying c2sc
#define CSIZE 0x00000300
==> 768
Trying c2sc
#define CS5 0x00000000
==> 0
Trying c2sc
#define CS6 0x00000100
==> 256
Trying c2sc
#define CS7 0x00000200
==> 512
Trying c2sc
#define CS8 0x00000300
==> 768
Trying c2sc
#define CSTOPB 0x00000400
==> 1024
Trying c2sc
#define CREAD 0x00000800
==> 2048
Trying c2sc
#define PARENB 0x00001000
==> 4096
Trying c2sc
#define PARODD 0x00002000
==> 8192
Trying c2sc
#define HUPCL 0x00004000
==> 16384
Trying c2sc
#define CLOCAL 0x00008000
==> 32768
Trying c2sc
#define CCTS_OFLOW 0x00010000
==> 65536
Trying c2sc
#define CRTSCTS (0x00010000 | 0x00020000 )
==> (sc::bit-or 65536 131072)
Trying c2sc
#define CRTS_IFLOW 0x00020000
==> 131072
Trying c2sc
#define CDTR_IFLOW 0x00040000
==> 262144
Trying c2sc
#define CDSR_OFLOW 0x00080000
==> 524288
Trying c2sc
#define CCAR_OFLOW 0x00100000
==> 1048576
Trying c2sc
#define MDMBUF 0x00100000
==> 1048576
Trying c2sc
#define ECHOKE 0x00000001
==> 1
Trying c2sc
#define ECHOE 0x00000002
==> 2
Trying c2sc
#define ECHOK 0x00000004
==> 4
Trying c2sc
#define ECHO 0x00000008
==> 8
Trying c2sc
#define ECHONL 0x00000010
==> 16
Trying c2sc
#define ECHOPRT 0x00000020
==> 32
Trying c2sc
#define ECHOCTL 0x00000040
==> 64
Trying c2sc
#define ISIG 0x00000080
==> 128
Trying c2sc
#define ICANON 0x00000100
==> 256
Trying c2sc
#define ALTWERASE 0x00000200
==> 512
Trying c2sc
#define IEXTEN 0x00000400
==> 1024
Trying c2sc
#define EXTPROC 0x00000800
==> 2048
Trying c2sc
#define TOSTOP 0x00400000
==> 4194304
Trying c2sc
#define FLUSHO 0x00800000
==> 8388608
Trying c2sc
#define NOKERNINFO 0x02000000
==> 33554432
Trying c2sc
#define PENDIN 0x20000000
==> 536870912
Trying c2sc
#define NOFLSH 0x80000000
==> 2147483648
Trying c2sc
#define TCSANOW 0
==> 0
Trying c2sc
#define TCSADRAIN 1
==> 1
Trying c2sc
#define TCSAFLUSH 2
==> 2
Trying c2sc
#define TCSASOFT 0x10
==> 16
Trying c2sc
#define B0 0
==> 0
Trying c2sc
#define B50 50
==> 50
Trying c2sc
#define B75 75
==> 75
Trying c2sc
#define B110 110
==> 110
Trying c2sc
#define B134 134
==> 134
Trying c2sc
#define B150 150
==> 150
Trying c2sc
#define B200 200
==> 200
Trying c2sc
#define B300 300
==> 300
Trying c2sc
#define B600 600
==> 600
Trying c2sc
#define B1200 1200
==> 1200
Trying c2sc
#define B1800 1800
==> 1800
Trying c2sc
#define B2400 2400
==> 2400
Trying c2sc
#define B4800 4800
==> 4800
Trying c2sc
#define B9600 9600
==> 9600
Trying c2sc
#define B19200 19200
==> 19200
Trying c2sc
#define B38400 38400
==> 38400
Trying c2sc
#define B7200 7200
==> 7200
Trying c2sc
#define B14400 14400
==> 14400
Trying c2sc
#define B28800 28800
==> 28800
Trying c2sc
#define B57600 57600
==> 57600
Trying c2sc
#define B76800 76800
==> 76800
Trying c2sc
#define B115200 115200
==> 115200
Trying c2sc
#define B230400 230400
==> 230400
Trying c2sc
#define B460800 460800
==> 460800
Trying c2sc
#define B921600 921600
==> 921600
Trying c2sc
#define EXTA 19200
==> 19200
Trying c2sc
#define EXTB 38400
==> 38400
Trying c2sc
#define TCIFLUSH 1
==> 1
Trying c2sc
#define TCOFLUSH 2
==> 2
Trying c2sc
#define TCIOFLUSH 3
==> 3
Trying c2sc
#define TCOOFF 1
==> 1
Trying c2sc
#define TCOON 2
==> 2
Trying c2sc
#define TCIOFF 3
==> 3
Trying c2sc
#define TCION 4
==> 4
Trying c2sc
#define _SYS_TTYCOM_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_IOCCOM_H_ 
==> <gave up...>
Trying c2sc
#define IOCPARM_MASK 0x1fff
==> 8191
Trying c2sc
#define IOCPARM_LEN(x) ( ( ( x ) >> 16 ) & 0x1fff )
==> (sc::bit-and (sc::>> csym::x 16) 8191)
Trying c2sc
#define IOCBASECMD(x) ( ( x ) & ~ ( 0x1fff << 16 ) )
 1:(bit-and csym::x (bit-not (<< 8191 16)))
[typename --- ]
[not typename --- x]
 2:(cast csym::x (ptr (bit-not (<< 8191 16))))
[typename --- x]
[not typename --- ]
Select number? 1
==> (sc::bit-and csym::x (sc::bit-not (sc::<< 8191 16)))
Trying c2sc
#define IOCGROUP(x) ( ( ( x ) >> 8 ) & 0xff )
==> (sc::bit-and (sc::>> csym::x 8) 255)
Trying c2sc
#define IOCPARM_MAX PAGE_SIZE
==> csym::|@page_size|
Trying c2sc
#define IOC_VOID 0x20000000
==> 536870912
Trying c2sc
#define IOC_OUT 0x40000000
==> 1073741824
Trying c2sc
#define IOC_IN 0x80000000
==> 2147483648
Trying c2sc
#define IOC_INOUT (0x80000000 |0x40000000 )
==> (sc::bit-or 2147483648 1073741824)
Trying c2sc
#define IOC_DIRMASK 0xe0000000
==> 3758096384
Trying c2sc
#define _IOC(inout,group,num,len) ( ( unsigned long ) ( inout | ( ( len & 0x1fff ) << 16 ) | ( ( group ) << 8 ) | ( num ) ) )
==> (sc::cast sc::unsigned-long
     (sc::bit-or csym::inout (sc::<< (sc::bit-and csym::len 8191) 16)
      (sc::<< csym::group 8) csym::num))
Trying c2sc
#define _IO(g,n) ( ( unsigned long ) ( 0x20000000 | ( ( 0 & 0x1fff ) << 16 ) | ( ( ( g ) ) << 8 ) | ( ( n ) ) ) )
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< csym::g 8)
      csym::n))
Trying c2sc
#define _IOR(g,n,t) ( ( unsigned long ) ( 0x40000000 | ( ( sizeof ( t ) & 0x1fff ) << 16 ) | ( ( ( g ) ) << 8 ) | ( ( n ) ) ) )
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof csym::t) 8191) 16)
      (sc::<< csym::g 8) csym::n))
Trying c2sc
#define _IOW(g,n,t) ( ( unsigned long ) ( 0x80000000 | ( ( sizeof ( t ) & 0x1fff ) << 16 ) | ( ( ( g ) ) << 8 ) | ( ( n ) ) ) )
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof csym::t) 8191) 16)
      (sc::<< csym::g 8) csym::n))
Trying c2sc
#define _IOWR(g,n,t) ( ( unsigned long ) ( ( 0x80000000 | 0x40000000 ) | ( ( sizeof ( t ) & 0x1fff ) << 16 ) | ( ( ( g ) ) << 8 ) | ( ( n ) ) ) )
==> (sc::cast sc::unsigned-long
     (sc::bit-or (sc::bit-or 2147483648 1073741824)
      (sc::<< (sc::bit-and (sc::sizeof csym::t) 8191) 16) (sc::<< csym::g 8)
      csym::n))
Trying c2sc
#define TIOCEXCL ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((13))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 13))
Trying c2sc
#define TIOCNXCL ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((14))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 14))
Trying c2sc
#define TIOCFLUSH ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((16))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 16))
Trying c2sc
#define TIOCGETA ((unsigned long)( 0x40000000 | ((sizeof(struct termios) & 0x1fff ) << 16) | ((('t')) << 8) | ((19))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824
      (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::termios)) 8191) 16)
      (sc::<< #\t 8) 19))
Trying c2sc
#define TIOCSETA ((unsigned long)( 0x80000000 | ((sizeof(struct termios) & 0x1fff ) << 16) | ((('t')) << 8) | ((20))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648
      (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::termios)) 8191) 16)
      (sc::<< #\t 8) 20))
Trying c2sc
#define TIOCSETAW ((unsigned long)( 0x80000000 | ((sizeof(struct termios) & 0x1fff ) << 16) | ((('t')) << 8) | ((21))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648
      (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::termios)) 8191) 16)
      (sc::<< #\t 8) 21))
Trying c2sc
#define TIOCSETAF ((unsigned long)( 0x80000000 | ((sizeof(struct termios) & 0x1fff ) << 16) | ((('t')) << 8) | ((22))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648
      (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::termios)) 8191) 16)
      (sc::<< #\t 8) 22))
Trying c2sc
#define TIOCGETD ((unsigned long)( 0x40000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((26))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 26))
Trying c2sc
#define TIOCSETD ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((27))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 27))
Trying c2sc
#define TIOCSBRK ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((123))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 123))
Trying c2sc
#define TIOCCBRK ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((122))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 122))
Trying c2sc
#define TIOCSDTR ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((121))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 121))
Trying c2sc
#define TIOCCDTR ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((120))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 120))
Trying c2sc
#define TIOCGPGRP ((unsigned long)( 0x40000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((119))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 119))
Trying c2sc
#define TIOCSPGRP ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((118))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 118))
Trying c2sc
#define TIOCOUTQ ((unsigned long)( 0x40000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((115))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 115))
Trying c2sc
#define TIOCSTI ((unsigned long)( 0x80000000 | ((sizeof(char) & 0x1fff ) << 16) | ((('t')) << 8) | ((114))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648
      (sc::<< (sc::bit-and (sc::sizeof sc::char) 8191) 16) (sc::<< #\t 8) 114))
Trying c2sc
#define TIOCNOTTY ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((113))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 113))
Trying c2sc
#define TIOCPKT ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((112))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 112))
Trying c2sc
#define TIOCPKT_DATA 0x00
==> 0
Trying c2sc
#define TIOCPKT_FLUSHREAD 0x01
==> 1
Trying c2sc
#define TIOCPKT_FLUSHWRITE 0x02
==> 2
Trying c2sc
#define TIOCPKT_STOP 0x04
==> 4
Trying c2sc
#define TIOCPKT_START 0x08
==> 8
Trying c2sc
#define TIOCPKT_NOSTOP 0x10
==> 16
Trying c2sc
#define TIOCPKT_DOSTOP 0x20
==> 32
Trying c2sc
#define TIOCPKT_IOCTL 0x40
==> 64
Trying c2sc
#define TIOCSTOP ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((111))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 111))
Trying c2sc
#define TIOCSTART ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((110))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 110))
Trying c2sc
#define TIOCMSET ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((109))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 109))
Trying c2sc
#define TIOCMBIS ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((108))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 108))
Trying c2sc
#define TIOCMBIC ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((107))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 107))
Trying c2sc
#define TIOCMGET ((unsigned long)( 0x40000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((106))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 106))
Trying c2sc
#define TIOCM_LE 0001
==> 1
Trying c2sc
#define TIOCM_DTR 0002
==> 2
Trying c2sc
#define TIOCM_RTS 0004
==> 4
Trying c2sc
#define TIOCM_ST 0010
==> 8
Trying c2sc
#define TIOCM_SR 0020
==> 16
Trying c2sc
#define TIOCM_CTS 0040
==> 32
Trying c2sc
#define TIOCM_DCD 0100
==> 64
Trying c2sc
#define TIOCM_RI 0200
==> 128
Trying c2sc
#define TIOCM_DSR 0400
==> 256
Trying c2sc
#define TIOCM_CD 0100
==> 64
Trying c2sc
#define TIOCM_CAR 0100
==> 64
Trying c2sc
#define TIOCM_RNG 0200
==> 128
Trying c2sc
#define TIOCGWINSZ ((unsigned long)( 0x40000000 | ((sizeof(struct winsize) & 0x1fff ) << 16) | ((('t')) << 8) | ((104))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824
      (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::winsize)) 8191) 16)
      (sc::<< #\t 8) 104))
Trying c2sc
#define TIOCSWINSZ ((unsigned long)( 0x80000000 | ((sizeof(struct winsize) & 0x1fff ) << 16) | ((('t')) << 8) | ((103))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648
      (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::winsize)) 8191) 16)
      (sc::<< #\t 8) 103))
Trying c2sc
#define TIOCUCNTL ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((102))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 102))
Trying c2sc
#define TIOCSTAT ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((101))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 101))
Trying c2sc
#define UIOCCMD(n) ( ( unsigned long ) ( 0x20000000 | ( ( 0 & 0x1fff ) << 16 ) | ( ( ( 'u' ) ) << 8 ) | ( ( n ) ) ) )
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\u 8)
      csym::n))
Trying c2sc
#define TIOCCONS ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((98))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 98))
Trying c2sc
#define TIOCSCTTY ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((97))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 97))
Trying c2sc
#define TIOCEXT ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((96))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 96))
Trying c2sc
#define TIOCSIG ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((95))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 95))
Trying c2sc
#define TIOCDRAIN ((unsigned long)( 0x20000000 | ((0 & 0x1fff ) << 16) | ((('t')) << 8) | ((94))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 94))
Trying c2sc
#define TIOCMSDTRWAIT ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((91))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 91))
Trying c2sc
#define TIOCMGDTRWAIT ((unsigned long)( 0x40000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((90))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 90))
Trying c2sc
#define TIOCTIMESTAMP ((unsigned long)( 0x40000000 | ((sizeof(struct timeval) & 0x1fff ) << 16) | ((('t')) << 8) | ((89))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824
      (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::timeval)) 8191) 16)
      (sc::<< #\t 8) 89))
Trying c2sc
#define TIOCSDRAINWAIT ((unsigned long)( 0x80000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((87))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 87))
Trying c2sc
#define TIOCGDRAINWAIT ((unsigned long)( 0x40000000 | ((sizeof(int) & 0x1fff ) << 16) | ((('t')) << 8) | ((86))))
==> (sc::cast sc::unsigned-long
     (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
      (sc::<< #\t 8) 86))
Trying c2sc
#define TTYDISC 0
==> 0
Trying c2sc
#define SLIPDISC 4
==> 4
Trying c2sc
#define PPPDISC 5
==> 5
Trying c2sc
#define NETGRAPHDISC 6
==> 6
Trying c2sc
#define H4DISC 7
==> 7
Trying c2sc
#define _SYS_TTYDEFAULTS_H_ 
==> <gave up...>
Trying c2sc
#define TTYDEF_IFLAG (0x00000002 | 0x00000100 | 0x00002000 | 0x00000200 | 0x00000800 )
==> (sc::bit-or 2 256 8192 512 2048)
Trying c2sc
#define TTYDEF_OFLAG (0x00000001 | 0x00000002 )
==> (sc::bit-or 1 2)
Trying c2sc
#define TTYDEF_LFLAG (0x00000008 | 0x00000100 | 0x00000080 | 0x00000400 | 0x00000002 |0x00000001 |0x00000040 )
==> (sc::bit-or 8 256 128 1024 2 1 64)
Trying c2sc
#define TTYDEF_CFLAG (0x00000800 | 0x00000300 | 0x00004000 )
==> (sc::bit-or 2048 768 16384)
Trying c2sc
#define TTYDEF_SPEED (9600 )
==> 9600
Trying c2sc
#define CTRL(x) ( x & 037 )
==> (sc::bit-and csym::x 31)
Trying c2sc
#define CEOF ('d'&037)
==> (sc::bit-and #\d 31)
Trying c2sc
#define CEOL 0xff
==> 255
Trying c2sc
#define CERASE 0177
==> 127
Trying c2sc
#define CERASE2 ('h'&037)
==> (sc::bit-and #\h 31)
Trying c2sc
#define CINTR ('c'&037)
==> (sc::bit-and #\c 31)
Trying c2sc
#define CSTATUS ('t'&037)
==> (sc::bit-and #\t 31)
Trying c2sc
#define CKILL ('u'&037)
==> (sc::bit-and #\u 31)
Trying c2sc
#define CMIN 1
==> 1
Trying c2sc
#define CQUIT 034
==> 28
Trying c2sc
#define CSUSP ('z'&037)
==> (sc::bit-and #\z 31)
Trying c2sc
#define CTIME 0
==> 0
Trying c2sc
#define CDSUSP ('y'&037)
==> (sc::bit-and #\y 31)
Trying c2sc
#define CSTART ('q'&037)
==> (sc::bit-and #\q 31)
Trying c2sc
#define CSTOP ('s'&037)
==> (sc::bit-and #\s 31)
Trying c2sc
#define CLNEXT ('v'&037)
==> (sc::bit-and #\v 31)
Trying c2sc
#define CDISCARD ('o'&037)
==> (sc::bit-and #\o 31)
Trying c2sc
#define CWERASE ('w'&037)
==> (sc::bit-and #\w 31)
Trying c2sc
#define CREPRINT ('r'&037)
==> (sc::bit-and #\r 31)
Trying c2sc
#define CEOT ('d'&037)
==> (sc::bit-and #\d 31)
Trying c2sc
#define CBRK 0xff
==> 255
Trying c2sc
#define CRPRNT ('r'&037)
==> (sc::bit-and #\r 31)
Trying c2sc
#define CFLUSH ('o'&037)
==> (sc::bit-and #\o 31)
Trying c2sc
#define _TGMATH_H_ 
==> <gave up...>
Trying c2sc
#define __tg_type(e,t) __builtin_types_compatible_p ( __typeof__ ( e ) , t )
==> (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e) csym::t)
Trying c2sc
#define __tg_type3(e1,e2,e3,t) ( __builtin_types_compatible_p ( __typeof__ ( e1 ) , t ) || __builtin_types_compatible_p ( __typeof__ ( e2 ) , t ) || __builtin_types_compatible_p ( __typeof__ ( e3 ) , t ) )
==> (sc::or
     (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e1) csym::t)
     (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e2) csym::t)
     (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e3) csym::t))
Trying c2sc
#define __tg_type_corr(e1,e2,e3,t) ( ( __builtin_types_compatible_p ( __typeof__ ( e1 ) , t ) || __builtin_types_compatible_p ( __typeof__ ( e2 ) , t ) || __builtin_types_compatible_p ( __typeof__ ( e3 ) , t ) ) || ( __builtin_types_compatible_p ( __typeof__ ( e1 ) , t ) || __builtin_types_compatible_p ( __typeof__ ( e2 ) , t ) || __builtin_types_compatible_p ( __typeof__ ( e3 ) , t ) ) )
==> (sc::or
     (sc::or
      (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e1) csym::t)
      (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e2) csym::t)
      (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e3) csym::t))
     (sc::or
      (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e1) csym::t)
      (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e2) csym::t)
      (csym::__builtin_types_compatible_p (csym::__typeof__ csym::e3) csym::t)))
Trying c2sc
#define __tg_integer(e1,e2,e3) ( ( ( __typeof__ ( e1 ) ) 1.5 == 1 ) || ( ( __typeof__ ( e2 ) ) 1.5 == 1 ) || ( ( __typeof__ ( e3 ) ) 1.5 == 1 ) )
==> <gave up...>
Trying c2sc
#define __tg_impl_simple(x,y,z,nil,fnf,fnl,va_arg) __builtin_choose_expr ( ( ( __builtin_types_compatible_p ( __typeof__ ( x ) , long double ) || __builtin_types_compatible_p ( __typeof__ ( y ) , long double ) || __builtin_types_compatible_p ( __typeof__ ( z ) , long double ) ) || ( __builtin_types_compatible_p ( __typeof__ ( x ) , long double ) || __builtin_types_compatible_p ( __typeof__ ( y ) , long double ) || __builtin_types_compatible_p ( __typeof__ ( z ) , long double ) ) ) , fnl ( va_arg ) , __builtin_choose_expr ( ( ( __builtin_types_compatible_p ( __typeof__ ( x ) , double ) || __builtin_types_compatible_p ( __typeof__ ( y ) , double ) || __builtin_types_compatible_p ( __typeof__ ( z ) , double ) ) || ( __builtin_types_compatible_p ( __typeof__ ( x ) , double ) || __builtin_types_compatible_p ( __typeof__ ( y ) , double ) || __builtin_types_compatible_p ( __typeof__ ( z ) , double ) ) ) || ( ( ( __typeof__ ( x ) ) 1.5 == 1 ) || ( ( __typeof__ ( y ) ) 1.5 == 1 ) || ( ( __typeof__ ( z ) ) 1.5 == 1 ) ) , ( va_arg ) , fnf ( va_arg ) ) )
==> <gave up...>
Trying c2sc
#define __tg_simple(x,nil) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define __tg_simple2(x,y,nil) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define __tg_simplev(x,nil,va_arg) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define __tg_full(x,nil) "<macro with ## operator>"
==> "<macro with ## operator>"
Trying c2sc
#define _SYS_TIMEB_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_TIMES_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_UCONTEXT_H_ 
==> <gave up...>
Trying c2sc
#define _MACHINE_UCONTEXT_H_ 
==> <gave up...>
Trying c2sc
#define _MC_FPFMT_NODEV 0x10000
==> 65536
Trying c2sc
#define _MC_FPFMT_387 0x10001
==> 65537
Trying c2sc
#define _MC_FPFMT_XMM 0x10002
==> 65538
Trying c2sc
#define _MC_FPOWNED_NONE 0x20000
==> 131072
Trying c2sc
#define _MC_FPOWNED_FPU 0x20001
==> 131073
Trying c2sc
#define _MC_FPOWNED_PCB 0x20002
==> 131074
Trying c2sc
#define UCF_SWAPPED 0x00000001
==> 1
Trying c2sc
#define _SYS_UIO_H_ 
==> <gave up...>
Trying c2sc
#define _ULIMIT_H_ 
==> <gave up...>
Trying c2sc
#define UL_GETFSIZE 1
==> 1
Trying c2sc
#define UL_SETFSIZE 2
==> 2
Trying c2sc
#define _SYS_UN_H_ 
==> <gave up...>
Trying c2sc
#define LOCAL_PEERCRED 0x001
==> 1
Trying c2sc
#define SUN_LEN(su) ( sizeof ( * ( su ) ) - sizeof ( ( su ) -> sun_path ) + strlen ( ( su ) -> sun_path ) )
==> (sc::+
     (sc::- (sc::sizeof (sc::mref csym::su))
      (sc::sizeof (sc::fref (sc::mref csym::su) csym::sun_path)))
     (csym::strlen (sc::fref (sc::mref csym::su) csym::sun_path)))
Trying c2sc
#define _UNISTD_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_UNISTD_H_ 
==> <gave up...>
Trying c2sc
#define _POSIX_ADVISORY_INFO -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_ASYNCHRONOUS_IO 0
==> 0
Trying c2sc
#define _POSIX_CHOWN_RESTRICTED 1
==> 1
Trying c2sc
#define _POSIX_CLOCK_SELECTION -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_CPUTIME -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_FSYNC 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_IPV6 0
==> 0
Trying c2sc
#define _POSIX_JOB_CONTROL 1
==> 1
Trying c2sc
#define _POSIX_MAPPED_FILES 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_MEMLOCK -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_MEMLOCK_RANGE 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_MEMORY_PROTECTION 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_MESSAGE_PASSING -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_MONOTONIC_CLOCK -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_NO_TRUNC 1
==> 1
Trying c2sc
#define _POSIX_PRIORITIZED_IO -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_PRIORITY_SCHEDULING 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_RAW_SOCKETS 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_REALTIME_SIGNALS -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_SEMAPHORES -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_SHARED_MEMORY_OBJECTS 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_SPORADIC_SERVER -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_SYNCHRONIZED_IO -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_TIMEOUTS -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_TYPED_MEMORY_OBJECTS -1
==> (sc::- 1)
Trying c2sc
#define _XOPEN_SHM 1
==> 1
Trying c2sc
#define _XOPEN_STREAMS -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_VERSION 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define F_OK 0
==> 0
Trying c2sc
#define X_OK 0x01
==> 1
Trying c2sc
#define W_OK 0x02
==> 2
Trying c2sc
#define R_OK 0x04
==> 4
Trying c2sc
#define L_SET 0
==> 0
Trying c2sc
#define L_INCR 1
==> 1
Trying c2sc
#define L_XTND 2
==> 2
Trying c2sc
#define _PC_LINK_MAX 1
==> 1
Trying c2sc
#define _PC_MAX_CANON 2
==> 2
Trying c2sc
#define _PC_MAX_INPUT 3
==> 3
Trying c2sc
#define _PC_NAME_MAX 4
==> 4
Trying c2sc
#define _PC_PATH_MAX 5
==> 5
Trying c2sc
#define _PC_PIPE_BUF 6
==> 6
Trying c2sc
#define _PC_CHOWN_RESTRICTED 7
==> 7
Trying c2sc
#define _PC_NO_TRUNC 8
==> 8
Trying c2sc
#define _PC_VDISABLE 9
==> 9
Trying c2sc
#define _PC_ASYNC_IO 53
==> 53
Trying c2sc
#define _PC_PRIO_IO 54
==> 54
Trying c2sc
#define _PC_SYNC_IO 55
==> 55
Trying c2sc
#define _PC_ALLOC_SIZE_MIN 10
==> 10
Trying c2sc
#define _PC_FILESIZEBITS 12
==> 12
Trying c2sc
#define _PC_REC_INCR_XFER_SIZE 14
==> 14
Trying c2sc
#define _PC_REC_MAX_XFER_SIZE 15
==> 15
Trying c2sc
#define _PC_REC_MIN_XFER_SIZE 16
==> 16
Trying c2sc
#define _PC_REC_XFER_ALIGN 17
==> 17
Trying c2sc
#define _PC_SYMLINK_MAX 18
==> 18
Trying c2sc
#define _PC_ACL_EXTENDED 59
==> 59
Trying c2sc
#define _PC_ACL_PATH_MAX 60
==> 60
Trying c2sc
#define _PC_CAP_PRESENT 61
==> 61
Trying c2sc
#define _PC_INF_PRESENT 62
==> 62
Trying c2sc
#define _PC_MAC_PRESENT 63
==> 63
Trying c2sc
#define RFNAMEG (1<<0)
==> (sc::<< 1 0)
Trying c2sc
#define RFENVG (1<<1)
==> (sc::<< 1 1)
Trying c2sc
#define RFFDG (1<<2)
==> (sc::<< 1 2)
Trying c2sc
#define RFNOTEG (1<<3)
==> (sc::<< 1 3)
Trying c2sc
#define RFPROC (1<<4)
==> (sc::<< 1 4)
Trying c2sc
#define RFMEM (1<<5)
==> (sc::<< 1 5)
Trying c2sc
#define RFNOWAIT (1<<6)
==> (sc::<< 1 6)
Trying c2sc
#define RFCNAMEG (1<<10)
==> (sc::<< 1 10)
Trying c2sc
#define RFCENVG (1<<11)
==> (sc::<< 1 11)
Trying c2sc
#define RFCFDG (1<<12)
==> (sc::<< 1 12)
Trying c2sc
#define RFTHREAD (1<<13)
==> (sc::<< 1 13)
Trying c2sc
#define RFSIGSHARE (1<<14)
==> (sc::<< 1 14)
Trying c2sc
#define RFLINUXTHPN (1<<16)
==> (sc::<< 1 16)
Trying c2sc
#define RFSTOPPED (1<<17)
==> (sc::<< 1 17)
Trying c2sc
#define RFHIGHPID (1<<18)
==> (sc::<< 1 18)
Trying c2sc
#define RFPPWAIT (1<<31)
==> (sc::<< 1 31)
Trying c2sc
#define RFKERNELONLY ((1<<17) | (1<<18) | (1<<31) )
==> (sc::bit-or (sc::<< 1 17) (sc::<< 1 18) (sc::<< 1 31))
Trying c2sc
#define STDIN_FILENO 0
==> 0
Trying c2sc
#define STDOUT_FILENO 1
==> 1
Trying c2sc
#define STDERR_FILENO 2
==> 2
Trying c2sc
#define F_ULOCK 0
==> 0
Trying c2sc
#define F_LOCK 1
==> 1
Trying c2sc
#define F_TLOCK 2
==> 2
Trying c2sc
#define F_TEST 3
==> 3
Trying c2sc
#define _POSIX_BARRIERS -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_READER_WRITER_LOCKS 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_REGEXP 1
==> 1
Trying c2sc
#define _POSIX_SHELL 1
==> 1
Trying c2sc
#define _POSIX_SPAWN -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_SPIN_LOCKS -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_THREAD_ATTR_STACKADDR 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_THREAD_ATTR_STACKSIZE 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_THREAD_CPUTIME -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_THREAD_PRIO_INHERIT 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_THREAD_PRIO_PROTECT 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_THREAD_PRIORITY_SCHEDULING 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_THREAD_PROCESS_SHARED -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_THREAD_SAFE_FUNCTIONS -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_THREAD_SPORADIC_SERVER -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_THREADS 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX_TRACE -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_TRACE_EVENT_FILTER -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_TRACE_INHERIT -1
==> (sc::- 1)
Trying c2sc
#define _POSIX_TRACE_LOG -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_C_BIND 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX2_C_DEV -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_CHAR_TERM 1
==> 1
Trying c2sc
#define _POSIX2_FORT_DEV -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_FORT_RUN 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _POSIX2_LOCALEDEF -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_PBS -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_PBS_ACCOUNTING -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_PBS_CHECKPOINT -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_PBS_LOCATE -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_PBS_MESSAGE -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_PBS_TRACK -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_SW_DEV -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_UPE 200112L
==> (sc::cast sc::long 200112)
Trying c2sc
#define _V6_ILP32_OFF32 -1
==> (sc::- 1)
Trying c2sc
#define _V6_ILP32_OFFBIG 0
==> 0
Trying c2sc
#define _V6_LP64_OFF64 0
==> 0
Trying c2sc
#define _V6_LPBIG_OFFBIG -1
==> (sc::- 1)
Trying c2sc
#define _XOPEN_CRYPT -1
==> (sc::- 1)
Trying c2sc
#define _XOPEN_ENH_I18N -1
==> (sc::- 1)
Trying c2sc
#define _XOPEN_LEGACY -1
==> (sc::- 1)
Trying c2sc
#define _XOPEN_REALTIME -1
==> (sc::- 1)
Trying c2sc
#define _XOPEN_REALTIME_THREADS -1
==> (sc::- 1)
Trying c2sc
#define _XOPEN_UNIX -1
==> (sc::- 1)
Trying c2sc
#define _POSIX2_VERSION 199212L
==> (sc::cast sc::long 199212)
Trying c2sc
#define _SC_ARG_MAX 1
==> 1
Trying c2sc
#define _SC_CHILD_MAX 2
==> 2
Trying c2sc
#define _SC_CLK_TCK 3
==> 3
Trying c2sc
#define _SC_NGROUPS_MAX 4
==> 4
Trying c2sc
#define _SC_OPEN_MAX 5
==> 5
Trying c2sc
#define _SC_JOB_CONTROL 6
==> 6
Trying c2sc
#define _SC_SAVED_IDS 7
==> 7
Trying c2sc
#define _SC_VERSION 8
==> 8
Trying c2sc
#define _SC_BC_BASE_MAX 9
==> 9
Trying c2sc
#define _SC_BC_DIM_MAX 10
==> 10
Trying c2sc
#define _SC_BC_SCALE_MAX 11
==> 11
Trying c2sc
#define _SC_BC_STRING_MAX 12
==> 12
Trying c2sc
#define _SC_COLL_WEIGHTS_MAX 13
==> 13
Trying c2sc
#define _SC_EXPR_NEST_MAX 14
==> 14
Trying c2sc
#define _SC_LINE_MAX 15
==> 15
Trying c2sc
#define _SC_RE_DUP_MAX 16
==> 16
Trying c2sc
#define _SC_2_VERSION 17
==> 17
Trying c2sc
#define _SC_2_C_BIND 18
==> 18
Trying c2sc
#define _SC_2_C_DEV 19
==> 19
Trying c2sc
#define _SC_2_CHAR_TERM 20
==> 20
Trying c2sc
#define _SC_2_FORT_DEV 21
==> 21
Trying c2sc
#define _SC_2_FORT_RUN 22
==> 22
Trying c2sc
#define _SC_2_LOCALEDEF 23
==> 23
Trying c2sc
#define _SC_2_SW_DEV 24
==> 24
Trying c2sc
#define _SC_2_UPE 25
==> 25
Trying c2sc
#define _SC_STREAM_MAX 26
==> 26
Trying c2sc
#define _SC_TZNAME_MAX 27
==> 27
Trying c2sc
#define _SC_ASYNCHRONOUS_IO 28
==> 28
Trying c2sc
#define _SC_MAPPED_FILES 29
==> 29
Trying c2sc
#define _SC_MEMLOCK 30
==> 30
Trying c2sc
#define _SC_MEMLOCK_RANGE 31
==> 31
Trying c2sc
#define _SC_MEMORY_PROTECTION 32
==> 32
Trying c2sc
#define _SC_MESSAGE_PASSING 33
==> 33
Trying c2sc
#define _SC_PRIORITIZED_IO 34
==> 34
Trying c2sc
#define _SC_PRIORITY_SCHEDULING 35
==> 35
Trying c2sc
#define _SC_REALTIME_SIGNALS 36
==> 36
Trying c2sc
#define _SC_SEMAPHORES 37
==> 37
Trying c2sc
#define _SC_FSYNC 38
==> 38
Trying c2sc
#define _SC_SHARED_MEMORY_OBJECTS 39
==> 39
Trying c2sc
#define _SC_SYNCHRONIZED_IO 40
==> 40
Trying c2sc
#define _SC_TIMERS 41
==> 41
Trying c2sc
#define _SC_AIO_LISTIO_MAX 42
==> 42
Trying c2sc
#define _SC_AIO_MAX 43
==> 43
Trying c2sc
#define _SC_AIO_PRIO_DELTA_MAX 44
==> 44
Trying c2sc
#define _SC_DELAYTIMER_MAX 45
==> 45
Trying c2sc
#define _SC_MQ_OPEN_MAX 46
==> 46
Trying c2sc
#define _SC_PAGESIZE 47
==> 47
Trying c2sc
#define _SC_RTSIG_MAX 48
==> 48
Trying c2sc
#define _SC_SEM_NSEMS_MAX 49
==> 49
Trying c2sc
#define _SC_SEM_VALUE_MAX 50
==> 50
Trying c2sc
#define _SC_SIGQUEUE_MAX 51
==> 51
Trying c2sc
#define _SC_TIMER_MAX 52
==> 52
Trying c2sc
#define _SC_2_PBS 59
==> 59
Trying c2sc
#define _SC_2_PBS_ACCOUNTING 60
==> 60
Trying c2sc
#define _SC_2_PBS_CHECKPOINT 61
==> 61
Trying c2sc
#define _SC_2_PBS_LOCATE 62
==> 62
Trying c2sc
#define _SC_2_PBS_MESSAGE 63
==> 63
Trying c2sc
#define _SC_2_PBS_TRACK 64
==> 64
Trying c2sc
#define _SC_ADVISORY_INFO 65
==> 65
Trying c2sc
#define _SC_BARRIERS 66
==> 66
Trying c2sc
#define _SC_CLOCK_SELECTION 67
==> 67
Trying c2sc
#define _SC_CPUTIME 68
==> 68
Trying c2sc
#define _SC_FILE_LOCKING 69
==> 69
Trying c2sc
#define _SC_GETGR_R_SIZE_MAX 70
==> 70
Trying c2sc
#define _SC_GETPW_R_SIZE_MAX 71
==> 71
Trying c2sc
#define _SC_HOST_NAME_MAX 72
==> 72
Trying c2sc
#define _SC_LOGIN_NAME_MAX 73
==> 73
Trying c2sc
#define _SC_MONOTONIC_CLOCK 74
==> 74
Trying c2sc
#define _SC_MQ_PRIO_MAX 75
==> 75
Trying c2sc
#define _SC_READER_WRITER_LOCKS 76
==> 76
Trying c2sc
#define _SC_REGEXP 77
==> 77
Trying c2sc
#define _SC_SHELL 78
==> 78
Trying c2sc
#define _SC_SPAWN 79
==> 79
Trying c2sc
#define _SC_SPIN_LOCKS 80
==> 80
Trying c2sc
#define _SC_SPORADIC_SERVER 81
==> 81
Trying c2sc
#define _SC_THREAD_ATTR_STACKADDR 82
==> 82
Trying c2sc
#define _SC_THREAD_ATTR_STACKSIZE 83
==> 83
Trying c2sc
#define _SC_THREAD_CPUTIME 84
==> 84
Trying c2sc
#define _SC_THREAD_DESTRUCTOR_ITERATIONS 85
==> 85
Trying c2sc
#define _SC_THREAD_KEYS_MAX 86
==> 86
Trying c2sc
#define _SC_THREAD_PRIO_INHERIT 87
==> 87
Trying c2sc
#define _SC_THREAD_PRIO_PROTECT 88
==> 88
Trying c2sc
#define _SC_THREAD_PRIORITY_SCHEDULING 89
==> 89
Trying c2sc
#define _SC_THREAD_PROCESS_SHARED 90
==> 90
Trying c2sc
#define _SC_THREAD_SAFE_FUNCTIONS 91
==> 91
Trying c2sc
#define _SC_THREAD_SPORADIC_SERVER 92
==> 92
Trying c2sc
#define _SC_THREAD_STACK_MIN 93
==> 93
Trying c2sc
#define _SC_THREAD_THREADS_MAX 94
==> 94
Trying c2sc
#define _SC_TIMEOUTS 95
==> 95
Trying c2sc
#define _SC_THREADS 96
==> 96
Trying c2sc
#define _SC_TRACE 97
==> 97
Trying c2sc
#define _SC_TRACE_EVENT_FILTER 98
==> 98
Trying c2sc
#define _SC_TRACE_INHERIT 99
==> 99
Trying c2sc
#define _SC_TRACE_LOG 100
==> 100
Trying c2sc
#define _SC_TTY_NAME_MAX 101
==> 101
Trying c2sc
#define _SC_TYPED_MEMORY_OBJECTS 102
==> 102
Trying c2sc
#define _SC_V6_ILP32_OFF32 103
==> 103
Trying c2sc
#define _SC_V6_ILP32_OFFBIG 104
==> 104
Trying c2sc
#define _SC_V6_LP64_OFF64 105
==> 105
Trying c2sc
#define _SC_V6_LPBIG_OFFBIG 106
==> 106
Trying c2sc
#define _SC_IPV6 118
==> 118
Trying c2sc
#define _SC_RAW_SOCKETS 119
==> 119
Trying c2sc
#define _SC_SYMLOOP_MAX 120
==> 120
Trying c2sc
#define _SC_ATEXIT_MAX 107
==> 107
Trying c2sc
#define _SC_IOV_MAX 56
==> 56
Trying c2sc
#define _SC_PAGE_SIZE 47
==> 47
Trying c2sc
#define _SC_XOPEN_CRYPT 108
==> 108
Trying c2sc
#define _SC_XOPEN_ENH_I18N 109
==> 109
Trying c2sc
#define _SC_XOPEN_LEGACY 110
==> 110
Trying c2sc
#define _SC_XOPEN_REALTIME 111
==> 111
Trying c2sc
#define _SC_XOPEN_REALTIME_THREADS 112
==> 112
Trying c2sc
#define _SC_XOPEN_SHM 113
==> 113
Trying c2sc
#define _SC_XOPEN_STREAMS 114
==> 114
Trying c2sc
#define _SC_XOPEN_UNIX 115
==> 115
Trying c2sc
#define _SC_XOPEN_VERSION 116
==> 116
Trying c2sc
#define _SC_XOPEN_XCU_VERSION 117
==> 117
Trying c2sc
#define _SC_NPROCESSORS_CONF 57
==> 57
Trying c2sc
#define _SC_NPROCESSORS_ONLN 58
==> 58
Trying c2sc
#define _CS_PATH 1
==> 1
Trying c2sc
#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS 2
==> 2
Trying c2sc
#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS 3
==> 3
Trying c2sc
#define _CS_POSIX_V6_ILP32_OFF32_LIBS 4
==> 4
Trying c2sc
#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS 5
==> 5
Trying c2sc
#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS 6
==> 6
Trying c2sc
#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS 7
==> 7
Trying c2sc
#define _CS_POSIX_V6_LP64_OFF64_CFLAGS 8
==> 8
Trying c2sc
#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS 9
==> 9
Trying c2sc
#define _CS_POSIX_V6_LP64_OFF64_LIBS 10
==> 10
Trying c2sc
#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS 11
==> 11
Trying c2sc
#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS 12
==> 12
Trying c2sc
#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS 13
==> 13
Trying c2sc
#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS 14
==> 14
Trying c2sc
#define _GETOPT_DECLARED 
==> <gave up...>
Trying c2sc
#define _OPTRESET_DECLARED 
==> <gave up...>
Trying c2sc
#define _UTIME_H_ 
==> <gave up...>
Trying c2sc
#define _SYS_UTSNAME_H 
==> <gave up...>
Trying c2sc
#define SYS_NMLN 256
==> 256
Trying c2sc
#define _SYS_WAIT_H_ 
==> <gave up...>
Trying c2sc
#define _W_INT(w) ( * ( int * ) & ( w ) )
==> (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::w)))
Trying c2sc
#define WCOREFLAG 0200
==> 128
Trying c2sc
#define _WSTATUS(x) ( ( * ( int * ) & ( x ) ) & 0177 )
==> (sc::bit-and (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x))) 127)
Trying c2sc
#define _WSTOPPED 0177
==> 127
Trying c2sc
#define WIFSTOPPED(x) ( ( ( * ( int * ) & ( x ) ) & 0177 ) == 0177 )
==> (sc::==
     (sc::bit-and (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x)))
      127)
     127)
Trying c2sc
#define WSTOPSIG(x) ( ( * ( int * ) & ( x ) ) >> 8 )
==> (sc::>> (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x))) 8)
Trying c2sc
#define WIFSIGNALED(x) ( ( ( * ( int * ) & ( x ) ) & 0177 ) != 0177 && ( ( * ( int * ) & ( x ) ) & 0177 ) != 0 )
==> (sc::and
     (sc::!=
      (sc::bit-and (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x)))
       127)
      127)
     (sc::!=
      (sc::bit-and (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x)))
       127)
      0))
Trying c2sc
#define WTERMSIG(x) ( ( ( * ( int * ) & ( x ) ) & 0177 ) )
==> (sc::bit-and (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x))) 127)
Trying c2sc
#define WIFEXITED(x) ( ( ( * ( int * ) & ( x ) ) & 0177 ) == 0 )
==> (sc::==
     (sc::bit-and (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x)))
      127)
     0)
Trying c2sc
#define WEXITSTATUS(x) ( ( * ( int * ) & ( x ) ) >> 8 )
==> (sc::>> (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x))) 8)
Trying c2sc
#define WIFCONTINUED(x) ( x == 0x13 )
==> (sc::== csym::x 19)
Trying c2sc
#define WCOREDUMP(x) ( ( * ( int * ) & ( x ) ) & 0200 )
==> (sc::bit-and (sc::mref (sc::cast (sc::ptr sc::int) (sc::ptr csym::x))) 128)
Trying c2sc
#define W_EXITCODE(ret,sig) ( ( ret ) << 8 | ( sig ) )
==> (sc::bit-or (sc::<< csym::ret 8) csym::sig)
Trying c2sc
#define W_STOPCODE(sig) ( ( sig ) << 8 | 0177 )
==> (sc::bit-or (sc::<< csym::sig 8) 127)
Trying c2sc
#define WNOHANG 1
==> 1
Trying c2sc
#define WUNTRACED 2
==> 2
Trying c2sc
#define WCONTINUED 4
==> 4
Trying c2sc
#define WLINUXCLONE 0x80000000
==> 2147483648
Trying c2sc
#define WAIT_ANY (-1)
==> (sc::- 1)
Trying c2sc
#define WAIT_MYPGRP 0
==> 0
Trying c2sc
#define _WCHAR_H_ 
==> <gave up...>
Trying c2sc
#define _MBSTATE_T_DECLARED 
==> <gave up...>
Trying c2sc
#define _WINT_T_DECLARED 
==> <gave up...>
Trying c2sc
#define WEOF ((wint_t)-1)
 1:(- csym::wint_t 1)
[typename --- ]
[not typename --- wint_t]
 2:(cast csym::wint_t (- 1))
[typename --- wint_t]
[not typename --- ]
Select number? 2
==> (sc::cast csym::wint_t (sc::- 1))
Trying c2sc
#define getwc(fp) fgetwc ( fp )
==> (csym::fgetwc csym::fp)
Trying c2sc
#define getwchar() fgetwc ( __stdinp )
==> (csym::fgetwc csym::__stdinp)
Trying c2sc
#define putwc(wc,fp) fputwc ( wc , fp )
==> (csym::fputwc csym::wc csym::fp)
Trying c2sc
#define putwchar(wc) fputwc ( wc , __stdoutp )
==> (csym::fputwc csym::wc csym::__stdoutp)
Trying c2sc
#define wcwidth(_c) __wcwidth ( _c )
==> (csym::__wcwidth csym::_c)
Trying c2sc
#define _WCTYPE_H_ 
==> <gave up...>
Trying c2sc
#define _WCTRANS_T 
==> <gave up...>
Trying c2sc
#define _WCTYPE_T 
==> <gave up...>
Trying c2sc
#define iswalnum(wc) __istype ( ( wc ) , 0x00000100L | 0x00000400L )
==> (csym::__istype csym::wc
     (sc::bit-or (sc::cast sc::long 256) (sc::cast sc::long 1024)))
Trying c2sc
#define iswalpha(wc) __istype ( ( wc ) , 0x00000100L )
==> (csym::__istype csym::wc (sc::cast sc::long 256))
Trying c2sc
#define iswblank(wc) __istype ( ( wc ) , 0x00020000L )
==> (csym::__istype csym::wc (sc::cast sc::long 131072))
Trying c2sc
#define iswcntrl(wc) __istype ( ( wc ) , 0x00000200L )
==> (csym::__istype csym::wc (sc::cast sc::long 512))
Trying c2sc
#define iswctype(wc,charclass) __istype ( ( wc ) , ( charclass ) )
==> (csym::__istype csym::wc csym::charclass)
Trying c2sc
#define iswdigit(wc) __isctype ( ( wc ) , 0x00000400L )
==> (csym::__isctype csym::wc (sc::cast sc::long 1024))
Trying c2sc
#define iswgraph(wc) __istype ( ( wc ) , 0x00000800L )
==> (csym::__istype csym::wc (sc::cast sc::long 2048))
Trying c2sc
#define iswlower(wc) __istype ( ( wc ) , 0x00001000L )
==> (csym::__istype csym::wc (sc::cast sc::long 4096))
Trying c2sc
#define iswprint(wc) __istype ( ( wc ) , 0x00040000L )
==> (csym::__istype csym::wc (sc::cast sc::long 262144))
Trying c2sc
#define iswpunct(wc) __istype ( ( wc ) , 0x00002000L )
==> (csym::__istype csym::wc (sc::cast sc::long 8192))
Trying c2sc
#define iswspace(wc) __istype ( ( wc ) , 0x00004000L )
==> (csym::__istype csym::wc (sc::cast sc::long 16384))
Trying c2sc
#define iswupper(wc) __istype ( ( wc ) , 0x00008000L )
==> (csym::__istype csym::wc (sc::cast sc::long 32768))
Trying c2sc
#define iswxdigit(wc) __isctype ( ( wc ) , 0x00010000L )
==> (csym::__isctype csym::wc (sc::cast sc::long 65536))
Trying c2sc
#define towlower(wc) __tolower ( wc )
==> (csym::__tolower csym::wc)
Trying c2sc
#define towupper(wc) __toupper ( wc )
==> (csym::__toupper csym::wc)
Trying c2sc
#define iswascii(wc) ( ( ( wc ) & ~ 0x7F ) == 0 )
 1:(== (bit-and csym::wc (bit-not 127)) 0)
[typename --- ]
[not typename --- wc]
 2:(== (cast csym::wc (ptr (bit-not 127))) 0)
[typename --- wc]
[not typename --- ]
Select number? 1
==> (sc::== (sc::bit-and csym::wc (sc::bit-not 127)) 0)
Trying c2sc
#define iswhexnumber(wc) __istype ( ( wc ) , 0x00010000L )
==> (csym::__istype csym::wc (sc::cast sc::long 65536))
Trying c2sc
#define iswideogram(wc) __istype ( ( wc ) , 0x00080000L )
==> (csym::__istype csym::wc (sc::cast sc::long 524288))
Trying c2sc
#define iswnumber(wc) __istype ( ( wc ) , 0x00000400L )
==> (csym::__istype csym::wc (sc::cast sc::long 1024))
Trying c2sc
#define iswphonogram(wc) __istype ( ( wc ) , 0x00200000L )
==> (csym::__istype csym::wc (sc::cast sc::long 2097152))
Trying c2sc
#define iswrune(wc) __istype ( ( wc ) , 0xFFFFFF00L )
==> (csym::__istype csym::wc (sc::cast sc::long 4294967040))
Trying c2sc
#define iswspecial(wc) __istype ( ( wc ) , 0x00100000L )
==> (csym::__istype csym::wc (sc::cast sc::long 1048576))
Trying c2sc
#define _WORDEXP_H_ 
==> <gave up...>
Trying c2sc
#define WRDE_APPEND 0x1
==> 1
Trying c2sc
#define WRDE_DOOFFS 0x2
==> 2
Trying c2sc
#define WRDE_NOCMD 0x4
==> 4
Trying c2sc
#define WRDE_REUSE 0x8
==> 8
Trying c2sc
#define WRDE_SHOWERR 0x10
==> 16
Trying c2sc
#define WRDE_UNDEF 0x20
==> 32
Trying c2sc
#define WRDE_BADCHAR 1
==> 1
Trying c2sc
#define WRDE_BADVAL 2
==> 2
Trying c2sc
#define WRDE_CMDSUB 3
==> 3
Trying c2sc
#define WRDE_NOSPACE 4
==> 4
Trying c2sc
#define WRDE_NOSYS 5
==> 5
Trying c2sc
#define WRDE_SYNTAX 6
==> 6
(sc::decl (csym::wordfree) (sc::fn sc::void (sc::ptr csym::wordexp_t)))
((sc::%line 1 "posix-out/ALL.h") (sc::%line 1 "posix-out/aio.h")
 (sc::%line 1 "/usr/include/sys/time.h")
 (sc::%line 1 "/usr/include/sys/_timeval.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/machine/_types.h")
 (sc::%line 45 "/usr/include/machine/_types.h")
 (sc::deftype csym::__int8_t sc::signed-char)
 (sc::deftype csym::__uint8_t sc::unsigned-char)
 (sc::deftype csym::__int16_t sc::short)
 (sc::deftype csym::__uint16_t sc::unsigned-short)
 (sc::deftype csym::__int32_t sc::int)
 (sc::deftype csym::__uint32_t sc::unsigned-int)
 (sc::deftype csym::__int64_t sc::int)
 (sc::deftype csym::__uint64_t sc::unsigned-int)
 (sc::%line 70 "/usr/include/machine/_types.h")
 (sc::deftype csym::__clock_t sc::unsigned-long)
 (sc::deftype csym::__cpumask_t sc::unsigned-int)
 (sc::deftype csym::__critical_t csym::__int32_t)
 (sc::deftype csym::__double_t sc::double)
 (sc::deftype csym::__float_t sc::double)
 (sc::deftype csym::__intfptr_t csym::__int32_t)
 (sc::deftype csym::__intmax_t csym::__int64_t)
 (sc::deftype csym::__intptr_t csym::__int32_t)
 (sc::deftype csym::__int_fast8_t csym::__int32_t)
 (sc::deftype csym::__int_fast16_t csym::__int32_t)
 (sc::deftype csym::__int_fast32_t csym::__int32_t)
 (sc::deftype csym::__int_fast64_t csym::__int64_t)
 (sc::deftype csym::__int_least8_t csym::__int8_t)
 (sc::deftype csym::__int_least16_t csym::__int16_t)
 (sc::deftype csym::__int_least32_t csym::__int32_t)
 (sc::deftype csym::__int_least64_t csym::__int64_t)
 (sc::deftype csym::__ptrdiff_t csym::__int32_t)
 (sc::deftype csym::__register_t csym::__int32_t)
 (sc::deftype csym::__segsz_t csym::__int32_t)
 (sc::deftype csym::__size_t csym::__uint32_t)
 (sc::deftype csym::__ssize_t csym::__int32_t)
 (sc::deftype csym::__time_t csym::__int32_t)
 (sc::deftype csym::__uintfptr_t csym::__uint32_t)
 (sc::deftype csym::__uintmax_t csym::__uint64_t)
 (sc::deftype csym::__uintptr_t csym::__uint32_t)
 (sc::deftype csym::__uint_fast8_t csym::__uint32_t)
 (sc::deftype csym::__uint_fast16_t csym::__uint32_t)
 (sc::deftype csym::__uint_fast32_t csym::__uint32_t)
 (sc::deftype csym::__uint_fast64_t csym::__uint64_t)
 (sc::deftype csym::__uint_least8_t csym::__uint8_t)
 (sc::deftype csym::__uint_least16_t csym::__uint16_t)
 (sc::deftype csym::__uint_least32_t csym::__uint32_t)
 (sc::deftype csym::__uint_least64_t csym::__uint64_t)
 (sc::deftype csym::__u_register_t csym::__uint32_t)
 (sc::deftype csym::__vm_offset_t csym::__uint32_t)
 (sc::deftype csym::__vm_ooffset_t csym::__int64_t)
 (sc::deftype csym::__vm_paddr_t csym::__uint32_t)
 (sc::deftype csym::__vm_pindex_t csym::__uint64_t)
 (sc::deftype csym::__vm_size_t csym::__uint32_t)
 (sc::%line 118 "/usr/include/machine/_types.h")
 (sc::deftype csym::__va_list csym::__builtin_va_list)
 (sc::%line 124 "/usr/include/machine/_types.h")
 (sc::deftype csym::__gnuc_va_list csym::__va_list)
 (sc::%line 38 "/usr/include/sys/_types.h")
 (sc::deftype csym::__clockid_t csym::__int32_t)
 (sc::deftype csym::__fflags_t csym::__uint32_t)
 (sc::deftype csym::__fsblkcnt_t csym::__uint64_t)
 (sc::deftype csym::__fsfilcnt_t csym::__uint64_t)
 (sc::deftype csym::__gid_t csym::__uint32_t)
 (sc::deftype csym::__id_t csym::__int64_t)
 (sc::deftype csym::__ino_t csym::__uint32_t)
 (sc::deftype csym::__key_t sc::long)
 (sc::deftype csym::__lwpid_t csym::__int32_t)
 (sc::deftype csym::__mode_t csym::__uint16_t)
 (sc::deftype csym::__nl_item sc::int)
 (sc::deftype csym::__nlink_t csym::__uint16_t)
 (sc::deftype csym::__off_t csym::__int64_t)
 (sc::deftype csym::__pid_t csym::__int32_t)
 (sc::deftype csym::__rlim_t csym::__int64_t)
 (sc::deftype csym::__sa_family_t csym::__uint8_t)
 (sc::deftype csym::__socklen_t csym::__uint32_t)
 (sc::deftype csym::__suseconds_t sc::long)
 (sc::deftype csym::__timer_t csym::__int32_t)
 (sc::deftype csym::__uid_t csym::__uint32_t)
 (sc::deftype csym::__useconds_t sc::unsigned-int)
 (sc::%line 78 "/usr/include/sys/_types.h")
 (sc::deftype csym::__ct_rune_t sc::int)
 (sc::deftype csym::__rune_t csym::__ct_rune_t)
 (sc::deftype csym::__wchar_t csym::__ct_rune_t)
 (sc::deftype csym::__wint_t csym::__ct_rune_t)
 (sc::deftype csym::__dev_t csym::__uint32_t)
 (sc::deftype csym::__fixpt_t csym::__uint32_t)
 (sc::%line 91 "/usr/include/sys/_types.h")
 (sc::def (sc::union csym::unnamed0)
  (sc::decl csym::__mbstate8 (sc::array sc::char 128))
  (sc::decl csym::|_MBSTATE@l| csym::__int64_t))
 (sc::deftype csym::__mbstate_t (sc::union csym::unnamed0))
 (sc::%line 35 "/usr/include/sys/_timeval.h")
 (sc::deftype csym::suseconds_t csym::__suseconds_t)
 (sc::deftype c2sc::$abstract csym::__time_t)
 (sc::%line 47 "/usr/include/sys/_timeval.h")
 (sc::def (sc::struct csym::timeval) (sc::decl csym::tv_sec sc::long)
  (sc::decl csym::tv_usec csym::suseconds_t))
 (sc::%line 1 "/usr/include/sys/types.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/machine/endian.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 152 "/usr/include/machine/endian.h")
 (sc::static-def (csym::__bswap64 csym::_x)
  (sc::fn csym::__uint64_t csym::__uint64_t)
  (sc::return
   (sc::bit-or (sc::>> csym::_x 56) (sc::bit-and (sc::>> csym::_x 40) 65280)
    (sc::bit-and (sc::>> csym::_x 24) 16711680)
    (sc::bit-and (sc::>> csym::_x 8) 4278190080)
    (sc::bit-and (sc::<< csym::_x 8)
     (sc::<< (sc::cast csym::__uint64_t 255) 32))
    (sc::bit-and (sc::<< csym::_x 24)
     (sc::<< (sc::cast csym::__uint64_t 255) 40))
    (sc::bit-and (sc::<< csym::_x 40)
     (sc::<< (sc::cast csym::__uint64_t 255) 48))
    (sc::<< csym::_x 56))))
 (sc::static-def (csym::__bswap32 csym::_x)
  (sc::fn csym::__uint32_t csym::__uint32_t)
  (sc::register-def csym::|__@x| csym::__uint32_t csym::_x)
  (sc::return csym::|__@x|))
 (sc::static-def (csym::__bswap16 csym::_x)
  (sc::fn csym::__uint16_t csym::__uint16_t)
  (sc::register-def csym::|__@x| csym::__uint16_t csym::_x)
  (sc::return csym::|__@x|))
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 48 "/usr/include/sys/types.h")
 (sc::deftype csym::u_char sc::unsigned-char)
 (sc::deftype csym::u_short sc::unsigned-short)
 (sc::deftype csym::u_int sc::unsigned-int)
 (sc::deftype csym::u_long sc::unsigned-long)
 (sc::deftype csym::ushort sc::unsigned-short)
 (sc::deftype csym::uint sc::unsigned-int)
 (sc::%line 62 "/usr/include/sys/types.h")
 (sc::deftype csym::int8_t csym::__int8_t)
 (sc::deftype csym::int16_t csym::__int16_t)
 (sc::deftype csym::int32_t csym::__int32_t)
 (sc::deftype csym::int64_t csym::__int64_t)
 (sc::deftype csym::uint8_t csym::__uint8_t)
 (sc::deftype csym::uint16_t csym::__uint16_t)
 (sc::deftype csym::uint32_t csym::__uint32_t)
 (sc::deftype csym::uint64_t csym::__uint64_t)
 (sc::deftype csym::intptr_t csym::__intptr_t)
 (sc::deftype csym::uintptr_t csym::__uintptr_t)
 (sc::deftype csym::u_int8_t csym::__uint8_t)
 (sc::deftype csym::u_int16_t csym::__uint16_t)
 (sc::deftype csym::u_int32_t csym::__uint32_t)
 (sc::deftype csym::u_int64_t csym::__uint64_t)
 (sc::deftype csym::u_quad_t csym::__uint64_t)
 (sc::deftype csym::quad_t csym::__int64_t)
 (sc::deftype csym::qaddr_t (sc::ptr csym::quad_t))
 (sc::deftype csym::caddr_t (sc::ptr sc::char))
 (sc::deftype csym::c_caddr_t (sc::ptr (sc::const sc::char)))
 (sc::deftype csym::v_caddr_t (sc::ptr (sc::volatile sc::char)))
 (sc::deftype csym::clock_t csym::__clock_t)
 (sc::deftype csym::clockid_t csym::__clockid_t)
 (sc::deftype csym::critical_t csym::__critical_t)
 (sc::deftype csym::daddr_t csym::__int64_t)
 (sc::deftype csym::dev_t csym::__dev_t)
 (sc::deftype csym::fflags_t csym::__fflags_t)
 (sc::deftype csym::fixpt_t csym::__fixpt_t)
 (sc::deftype csym::fsblkcnt_t csym::__fsblkcnt_t)
 (sc::deftype csym::fsfilcnt_t csym::__fsfilcnt_t)
 (sc::deftype csym::gid_t csym::__gid_t)
 (sc::deftype csym::in_addr_t csym::__uint32_t)
 (sc::deftype csym::in_port_t csym::__uint16_t)
 (sc::deftype csym::id_t csym::__id_t) (sc::deftype csym::ino_t csym::__ino_t)
 (sc::deftype csym::key_t csym::__key_t)
 (sc::deftype csym::lwpid_t csym::__lwpid_t)
 (sc::deftype csym::mode_t csym::__mode_t)
 (sc::deftype csym::nlink_t csym::__nlink_t)
 (sc::deftype csym::off_t csym::__off_t)
 (sc::deftype c2sc::$abstract csym::__pid_t)
 (sc::deftype csym::register_t csym::__register_t)
 (sc::deftype csym::rlim_t csym::__rlim_t)
 (sc::deftype csym::segsz_t csym::__segsz_t)
 (sc::deftype csym::size_t csym::__size_t)
 (sc::deftype csym::ssize_t csym::__ssize_t)
 (sc::%line 236 "/usr/include/sys/types.h")
 (sc::deftype csym::timer_t csym::__timer_t)
 (sc::deftype csym::u_register_t csym::__u_register_t)
 (sc::deftype csym::uid_t csym::__uid_t)
 (sc::deftype csym::useconds_t csym::__useconds_t)
 (sc::deftype csym::vm_offset_t csym::__vm_offset_t)
 (sc::deftype csym::vm_ooffset_t csym::__vm_ooffset_t)
 (sc::deftype csym::vm_paddr_t csym::__vm_paddr_t)
 (sc::deftype csym::vm_pindex_t csym::__vm_pindex_t)
 (sc::deftype csym::vm_size_t csym::__vm_size_t)
 (sc::%line 1 "/usr/include/sys/select.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/_sigset.h")
 (sc::%line 51 "/usr/include/sys/_sigset.h")
 (sc::def (sc::struct csym::__sigset)
  (sc::decl csym::__bits (sc::array csym::__uint32_t 4)))
 (sc::deftype csym::__sigset_t (sc::struct csym::__sigset))
 (sc::%line 1 "/usr/include/sys/_timeval.h")
 (sc::%line 1 "/usr/include/sys/timespec.h")
 (sc::%line 46 "/usr/include/sys/timespec.h")
 (sc::def (sc::struct csym::timespec) (sc::decl csym::tv_sec sc::double)
  (sc::decl csym::tv_nsec sc::long))
 (sc::%line 42 "/usr/include/sys/select.h")
 (sc::deftype csym::__fd_mask sc::unsigned-long)
 (sc::deftype csym::fd_mask csym::__fd_mask)
 (sc::deftype csym::sigset_t csym::__sigset_t)
 (sc::%line 71 "/usr/include/sys/select.h")
 (sc::def (sc::struct csym::fd_set)
  (sc::decl csym::__fds_bits
   (sc::array csym::__fd_mask
    (sc::/
     (sc::+ (sc::cast sc::unsigned-int 1024)
      (sc::- (sc::* (sc::sizeof csym::__fd_mask) 8) 1))
     (sc::* (sc::sizeof csym::__fd_mask) 8)))))
 (sc::deftype csym::fd_set (sc::struct csym::fd_set))
 (sc::%line 97 "/usr/include/sys/select.h")
 (sc::decl (csym::pselect)
  (sc::fn sc::int sc::int (sc::ptr csym::fd_set) (sc::ptr csym::fd_set)
   (sc::ptr csym::fd_set) (sc::ptr (sc::const (sc::struct csym::timespec)))
   (sc::ptr (sc::const csym::sigset_t))))
 (sc::decl (csym::select)
  (sc::fn sc::int sc::int (sc::ptr csym::fd_set) (sc::ptr csym::fd_set)
   (sc::ptr csym::fd_set) (sc::ptr (sc::struct csym::timeval))))
 (sc::%line 307 "/usr/include/sys/types.h")
 (sc::decl (csym::ftruncate) (sc::fn sc::int sc::int csym::off_t))
 (sc::decl (csym::lseek) (sc::fn csym::off_t sc::int csym::off_t sc::int))
 (sc::decl (csym::mmap)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void) csym::size_t sc::int sc::int
   sc::int csym::off_t))
 (sc::decl (csym::truncate)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::off_t))
 (sc::%line 1 "/usr/include/sys/timespec.h")
 (sc::%line 40 "/usr/include/sys/time.h")
 (sc::def (sc::struct csym::timezone) (sc::decl csym::tz_minuteswest sc::int)
  (sc::decl csym::tz_dsttime sc::int))
 (sc::def (sc::struct csym::bintime) (sc::decl csym::sec sc::double)
  (sc::decl csym::frac csym::uint64_t))
 (sc::static-def (csym::bintime_addx csym::bt csym::x)
  (sc::fn sc::void (sc::ptr (sc::struct csym::bintime)) csym::uint64_t)
  (sc::decl csym::u csym::uint64_t)
  (sc::= csym::u (sc::fref (sc::mref csym::bt) csym::frac))
  (sc::+= (sc::fref (sc::mref csym::bt) csym::frac) csym::x)
  (sc::if (sc::> csym::u (sc::fref (sc::mref csym::bt) csym::frac))
   (sc::inc (sc::fref (sc::mref csym::bt) csym::sec))))
 (sc::static-def (csym::bintime_add csym::bt csym::bt2)
  (sc::fn sc::void (sc::ptr (sc::struct csym::bintime))
   (sc::ptr (sc::const (sc::struct csym::bintime))))
  (sc::decl csym::u csym::uint64_t)
  (sc::= csym::u (sc::fref (sc::mref csym::bt) csym::frac))
  (sc::+= (sc::fref (sc::mref csym::bt) csym::frac)
   (sc::fref (sc::mref csym::bt2) csym::frac))
  (sc::if (sc::> csym::u (sc::fref (sc::mref csym::bt) csym::frac))
   (sc::inc (sc::fref (sc::mref csym::bt) csym::sec)))
  (sc::+= (sc::fref (sc::mref csym::bt) csym::sec)
   (sc::fref (sc::mref csym::bt2) csym::sec)))
 (sc::static-def (csym::bintime_sub csym::bt csym::bt2)
  (sc::fn sc::void (sc::ptr (sc::struct csym::bintime))
   (sc::ptr (sc::const (sc::struct csym::bintime))))
  (sc::decl csym::u csym::uint64_t)
  (sc::= csym::u (sc::fref (sc::mref csym::bt) csym::frac))
  (sc::-= (sc::fref (sc::mref csym::bt) csym::frac)
   (sc::fref (sc::mref csym::bt2) csym::frac))
  (sc::if (sc::< csym::u (sc::fref (sc::mref csym::bt) csym::frac))
   (sc::dec (sc::fref (sc::mref csym::bt) csym::sec)))
  (sc::-= (sc::fref (sc::mref csym::bt) csym::sec)
   (sc::fref (sc::mref csym::bt2) csym::sec)))
 (sc::%line 107 "/usr/include/sys/time.h")
 (sc::static-def (csym::bintime2timespec csym::bt csym::ts)
  (sc::fn sc::void (sc::ptr (sc::const (sc::struct csym::bintime)))
   (sc::ptr (sc::struct csym::timespec)))
  (sc::= (sc::fref (sc::mref csym::ts) csym::tv_sec)
   (sc::fref (sc::mref csym::bt) csym::sec))
  (sc::= (sc::fref (sc::mref csym::ts) csym::tv_nsec)
   (sc::>>
    (sc::* (sc::cast csym::uint64_t 1000000000)
     (sc::cast csym::uint32_t
      (sc::>> (sc::fref (sc::mref csym::bt) csym::frac) 32)))
    32)))
 (sc::static-def (csym::timespec2bintime csym::ts csym::bt)
  (sc::fn sc::void (sc::ptr (sc::const (sc::struct csym::timespec)))
   (sc::ptr (sc::struct csym::bintime)))
  (sc::= (sc::fref (sc::mref csym::bt) csym::sec)
   (sc::fref (sc::mref csym::ts) csym::tv_sec))
  (sc::= (sc::fref (sc::mref csym::bt) csym::frac)
   (sc::* (sc::fref (sc::mref csym::ts) csym::tv_nsec)
    (sc::cast csym::uint64_t (sc::cast sc::long-long 18446744073)))))
 (sc::static-def (csym::bintime2timeval csym::bt csym::tv)
  (sc::fn sc::void (sc::ptr (sc::const (sc::struct csym::bintime)))
   (sc::ptr (sc::struct csym::timeval)))
  (sc::= (sc::fref (sc::mref csym::tv) csym::tv_sec)
   (sc::fref (sc::mref csym::bt) csym::sec))
  (sc::= (sc::fref (sc::mref csym::tv) csym::tv_usec)
   (sc::>>
    (sc::* (sc::cast csym::uint64_t 1000000)
     (sc::cast csym::uint32_t
      (sc::>> (sc::fref (sc::mref csym::bt) csym::frac) 32)))
    32)))
 (sc::static-def (csym::timeval2bintime csym::tv csym::bt)
  (sc::fn sc::void (sc::ptr (sc::const (sc::struct csym::timeval)))
   (sc::ptr (sc::struct csym::bintime)))
  (sc::= (sc::fref (sc::mref csym::bt) csym::sec)
   (sc::fref (sc::mref csym::tv) csym::tv_sec))
  (sc::= (sc::fref (sc::mref csym::bt) csym::frac)
   (sc::* (sc::fref (sc::mref csym::tv) csym::tv_usec)
    (sc::cast csym::uint64_t (sc::cast sc::long-long 18446744073709)))))
 (sc::%line 219 "/usr/include/sys/time.h")
 (sc::def (sc::struct csym::itimerval)
  (sc::decl csym::it_interval (sc::struct csym::timeval))
  (sc::decl csym::it_value (sc::struct csym::timeval)))
 (sc::%line 227 "/usr/include/sys/time.h")
 (sc::def (sc::struct csym::clockinfo) (sc::decl csym::hz sc::int)
  (sc::decl csym::tick sc::int) (sc::decl csym::spare sc::int)
  (sc::decl csym::stathz sc::int) (sc::decl csym::profhz sc::int))
 (sc::%line 1 "/usr/include/time.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_null.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/timespec.h")
 (sc::%line 95 "/usr/include/time.h")
 (sc::def (sc::struct csym::tm) (sc::decl csym::tm_sec sc::int)
  (sc::decl csym::tm_min sc::int) (sc::decl csym::tm_hour sc::int)
  (sc::decl csym::tm_mday sc::int) (sc::decl csym::tm_mon sc::int)
  (sc::decl csym::tm_year sc::int) (sc::decl csym::tm_wday sc::int)
  (sc::decl csym::tm_yday sc::int) (sc::decl csym::tm_isdst sc::int)
  (sc::decl csym::tm_gmtoff sc::long)
  (sc::decl csym::tm_zone (sc::ptr sc::char)))
 (sc::extern-decl csym::tzname (sc::array (sc::ptr sc::char)))
 (sc::decl (csym::asctime)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const (sc::struct csym::tm)))))
 (sc::decl (csym::clock) (sc::fn csym::clock_t sc::void))
 (sc::decl (csym::ctime)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::double))))
 (sc::decl (csym::difftime) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::gmtime)
  (sc::fn (sc::ptr (sc::struct csym::tm)) (sc::ptr (sc::const sc::double))))
 (sc::decl (csym::localtime)
  (sc::fn (sc::ptr (sc::struct csym::tm)) (sc::ptr (sc::const sc::double))))
 (sc::decl (csym::mktime) (sc::fn sc::double (sc::ptr (sc::struct csym::tm))))
 (sc::decl (csym::strftime)
  (sc::fn csym::size_t (sc::ptr sc::char) csym::size_t
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const (sc::struct csym::tm)))))
 (sc::decl (csym::time) (sc::fn sc::double (sc::ptr sc::double)))
 (sc::decl (csym::tzset) (sc::fn sc::void sc::void))
 (sc::decl (csym::clock_getres)
  (sc::fn sc::int csym::clockid_t (sc::ptr (sc::struct csym::timespec))))
 (sc::decl (csym::clock_gettime)
  (sc::fn sc::int csym::clockid_t (sc::ptr (sc::struct csym::timespec))))
 (sc::decl (csym::clock_settime)
  (sc::fn sc::int csym::clockid_t
   (sc::ptr (sc::const (sc::struct csym::timespec)))))
 (sc::decl (csym::nanosleep)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::timespec)))
   (sc::ptr (sc::struct csym::timespec))))
 (sc::decl (csym::asctime_r)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const (sc::struct csym::tm)))
   (sc::ptr sc::char)))
 (sc::decl (csym::ctime_r)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::double))
   (sc::ptr sc::char)))
 (sc::decl (csym::gmtime_r)
  (sc::fn (sc::ptr (sc::struct csym::tm)) (sc::ptr (sc::const sc::double))
   (sc::ptr (sc::struct csym::tm))))
 (sc::decl (csym::localtime_r)
  (sc::fn (sc::ptr (sc::struct csym::tm)) (sc::ptr (sc::const sc::double))
   (sc::ptr (sc::struct csym::tm))))
 (sc::decl (csym::strptime)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::struct csym::tm))))
 (sc::decl (csym::timezone) (sc::fn (sc::ptr sc::char) sc::int sc::int))
 (sc::decl (csym::tzsetwall) (sc::fn sc::void sc::void))
 (sc::decl (csym::timelocal)
  (sc::fn sc::double (sc::const (sc::ptr (sc::struct csym::tm)))))
 (sc::decl (csym::timegm)
  (sc::fn sc::double (sc::const (sc::ptr (sc::struct csym::tm)))))
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 305 "/usr/include/sys/time.h")
 (sc::decl (csym::adjtime)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::timeval)))
   (sc::ptr (sc::struct csym::timeval))))
 (sc::decl (csym::futimes)
  (sc::fn sc::int sc::int (sc::ptr (sc::const (sc::struct csym::timeval)))))
 (sc::decl (csym::getitimer)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::itimerval))))
 (sc::decl (csym::gettimeofday)
  (sc::fn sc::int (sc::ptr (sc::struct csym::timeval))
   (sc::ptr (sc::struct csym::timezone))))
 (sc::decl (csym::lutimes)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::struct csym::timeval)))))
 (sc::decl (csym::setitimer)
  (sc::fn sc::int sc::int (sc::ptr (sc::const (sc::struct csym::itimerval)))
   (sc::ptr (sc::struct csym::itimerval))))
 (sc::decl (csym::settimeofday)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::timeval)))
   (sc::ptr (sc::const (sc::struct csym::timezone)))))
 (sc::decl (csym::utimes)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::struct csym::timeval)))))
 (sc::%line 1 "/usr/include/sys/types.h")
 (sc::%line 1 "/usr/include/sys/signal.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/_sigset.h")
 (sc::%line 1 "/usr/include/machine/signal.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_sigset.h")
 (sc::%line 43 "/usr/include/machine/signal.h")
 (sc::deftype csym::sig_atomic_t sc::int)
 (sc::%line 1 "/usr/include/machine/trap.h")
 (sc::%line 96 "/usr/include/machine/signal.h")
 (sc::def (sc::struct csym::sigcontext)
  (sc::decl csym::sc_mask (sc::struct csym::__sigset))
  (sc::decl csym::sc_onstack sc::int) (sc::decl csym::sc_gs sc::int)
  (sc::decl csym::sc_fs sc::int) (sc::decl csym::sc_es sc::int)
  (sc::decl csym::sc_ds sc::int) (sc::decl csym::sc_edi sc::int)
  (sc::decl csym::sc_esi sc::int) (sc::decl csym::sc_ebp sc::int)
  (sc::decl csym::sc_isp sc::int) (sc::decl csym::sc_ebx sc::int)
  (sc::decl csym::sc_edx sc::int) (sc::decl csym::sc_ecx sc::int)
  (sc::decl csym::sc_eax sc::int) (sc::decl csym::sc_trapno sc::int)
  (sc::decl csym::sc_err sc::int) (sc::decl csym::sc_eip sc::int)
  (sc::decl csym::sc_cs sc::int) (sc::decl csym::sc_efl sc::int)
  (sc::decl csym::sc_esp sc::int) (sc::decl csym::sc_ss sc::int)
  (sc::decl csym::sc_len sc::int) (sc::decl csym::sc_fpformat sc::int)
  (sc::decl csym::sc_ownedfp sc::int)
  (sc::decl csym::sc_spare1 (sc::array sc::int 1))
  (sc::decl csym::sc_fpstate (sc::array sc::int 128))
  (sc::decl csym::sc_spare2 (sc::array sc::int 8)))
 (sc::%line 123 "/usr/include/machine/signal.h")
 (sc::%line 140 "/usr/include/sys/signal.h")
 (sc::deftype (csym::__sighandler_t) (sc::fn sc::void sc::int))
 (sc::%line 150 "/usr/include/sys/signal.h")
 (sc::def (sc::union csym::sigval) (sc::decl csym::sigval_int sc::int)
  (sc::decl csym::sigval_ptr (sc::ptr sc::void)))
 (sc::def (sc::struct csym::sigevent) (sc::decl csym::sigev_notify sc::int)
  (sc::def (sc::union csym::unnamed1) (sc::decl csym::__sigev_signo sc::int)
   (sc::decl csym::__sigev_notify_kqueue sc::int))
  (sc::decl csym::__sigev_u (sc::union csym::unnamed1))
  (sc::decl csym::sigev_value (sc::union csym::sigval)))
 (sc::%line 168 "/usr/include/sys/signal.h")
 (sc::%line 185 "/usr/include/sys/signal.h")
 (sc::def (sc::struct csym::__siginfo) (sc::decl csym::si_signo sc::int)
  (sc::decl csym::si_errno sc::int) (sc::decl csym::si_code sc::int)
  (sc::decl csym::si_pid csym::__pid_t) (sc::decl csym::si_uid csym::__uid_t)
  (sc::decl csym::si_status sc::int)
  (sc::decl csym::si_addr (sc::ptr sc::void))
  (sc::decl csym::si_value (sc::union csym::sigval))
  (sc::decl csym::si_band sc::long)
  (sc::decl csym::__spare__ (sc::array sc::int 7)))
 (sc::deftype csym::siginfo_t (sc::struct csym::__siginfo))
 (sc::%line 194 "/usr/include/sys/signal.h")
 (sc::%line 211 "/usr/include/sys/signal.h")
 (sc::def (sc::struct csym::sigaction)
  (sc::def (sc::union csym::unnamed2)
   (sc::decl csym::__sa_handler (sc::ptr (sc::fn sc::void sc::int)))
   (sc::decl csym::__sa_sigaction
    (sc::ptr
     (sc::fn sc::void sc::int (sc::ptr (sc::struct csym::__siginfo))
      (sc::ptr sc::void)))))
  (sc::decl csym::__sigaction_u (sc::union csym::unnamed2))
  (sc::decl csym::sa_flags sc::int) (sc::decl csym::sa_mask csym::sigset_t))
 (sc::%line 257 "/usr/include/sys/signal.h")
 (sc::deftype csym::sig_t (sc::ptr csym::__sighandler_t))
 (sc::deftype (csym::__siginfohandler_t)
  (sc::fn sc::void sc::int (sc::ptr (sc::struct csym::__siginfo))
   (sc::ptr sc::void)))
 (sc::%line 266 "/usr/include/sys/signal.h")
 (sc::def (sc::struct csym::sigaltstack)
  (sc::decl csym::ss_sp (sc::ptr sc::char))
  (sc::decl csym::ss_size csym::__size_t) (sc::decl csym::ss_flags sc::int))
 (sc::deftype csym::stack_t (sc::struct csym::sigaltstack))
 (sc::%line 270 "/usr/include/sys/signal.h")
 (sc::%line 285 "/usr/include/sys/signal.h")
 (sc::def (sc::struct csym::sigvec)
  (sc::decl csym::sv_handler (sc::ptr csym::__sighandler_t))
  (sc::decl csym::sv_mask sc::int) (sc::decl csym::sv_flags sc::int))
 (sc::%line 312 "/usr/include/sys/signal.h")
 (sc::def (sc::struct csym::sigstack) (sc::decl csym::ss_sp (sc::ptr sc::char))
  (sc::decl csym::ss_onstack sc::int))
 (sc::%line 344 "/usr/include/sys/signal.h")
 (sc::decl (csym::signal)
  (sc::fn (sc::ptr csym::__sighandler_t) sc::int
   (sc::ptr csym::__sighandler_t)))
 (sc::%line 55 "posix-out/aio.h")
 (sc::def (sc::struct csym::__aiocb_private) (sc::decl csym::status sc::long)
  (sc::decl csym::error sc::long)
  (sc::decl csym::kernelinfo (sc::ptr sc::void)))
 (sc::%line 64 "posix-out/aio.h")
 (sc::def (sc::struct csym::aiocb) (sc::decl csym::aio_fildes sc::int)
  (sc::decl csym::aio_offset csym::off_t)
  (sc::decl csym::aio_buf (sc::ptr (sc::volatile sc::void)))
  (sc::decl csym::aio_nbytes csym::size_t)
  (sc::decl csym::aio_sigevent (sc::struct csym::sigevent))
  (sc::decl csym::aio_lio_opcode sc::int) (sc::decl csym::aio_reqprio sc::int)
  (sc::decl csym::_aiocb_private (sc::struct csym::__aiocb_private)))
 (sc::deftype csym::aiocb_t (sc::struct csym::aiocb))
 (sc::%line 81 "posix-out/aio.h")
 (sc::decl (csym::aio_read)
  (sc::fn sc::int (sc::ptr (sc::struct csym::aiocb))))
 (sc::%line 86 "posix-out/aio.h")
 (sc::decl (csym::aio_write)
  (sc::fn sc::int (sc::ptr (sc::struct csym::aiocb))))
 (sc::%line 94 "posix-out/aio.h")
 (sc::decl (csym::lio_listio)
  (sc::fn sc::int sc::int
   (sc::array (sc::const (sc::ptr (sc::struct csym::aiocb)))) sc::int
   (sc::ptr (sc::struct csym::sigevent))))
 (sc::%line 101 "posix-out/aio.h")
 (sc::decl (csym::aio_error)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::aiocb)))))
 (sc::%line 109 "posix-out/aio.h")
 (sc::decl (csym::aio_return)
  (sc::fn csym::ssize_t (sc::ptr (sc::struct csym::aiocb))))
 (sc::%line 114 "posix-out/aio.h")
 (sc::decl (csym::aio_cancel)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::aiocb))))
 (sc::%line 119 "posix-out/aio.h")
 (sc::decl (csym::aio_suspend)
  (sc::fn sc::int
   (sc::array (sc::const (sc::ptr (sc::const (sc::struct csym::aiocb)))))
   sc::int (sc::ptr (sc::const (sc::struct csym::timespec)))))
 (sc::decl (csym::aio_waitcomplete)
  (sc::fn sc::int (sc::ptr (sc::ptr (sc::struct csym::aiocb)))
   (sc::ptr (sc::struct csym::timespec))))
 (sc::%line 1 "posix-out/assert.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 62 "posix-out/assert.h")
 (sc::decl (csym::__assert)
  (sc::fn sc::void (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char)) sc::int (sc::ptr (sc::const sc::char))))
 (sc::%line 1 "posix-out/complex.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 44 "posix-out/complex.h")
 (sc::decl (csym::cabs) (sc::fn sc::double sc::double))
 (sc::decl (csym::cabsf) (sc::fn sc::float sc::float))
 (sc::decl (csym::cimag) (sc::fn sc::double sc::double))
 (sc::decl (csym::cimagf) (sc::fn sc::float sc::float))
 (sc::decl (csym::cimagl) (sc::fn sc::long-double sc::long-double))
 (sc::decl (csym::conj) (sc::fn sc::double sc::double))
 (sc::decl (csym::conjf) (sc::fn sc::float sc::float))
 (sc::decl (csym::conjl) (sc::fn sc::long-double sc::long-double))
 (sc::decl (csym::creal) (sc::fn sc::double sc::double))
 (sc::decl (csym::crealf) (sc::fn sc::float sc::float))
 (sc::decl (csym::creall) (sc::fn sc::long-double sc::long-double))
 (sc::%line 1 "posix-out/cpio.h") (sc::%line 1 "posix-out/ctype.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/_ctype.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 74 "/usr/include/_ctype.h")
 (sc::decl (csym::___runetype) (sc::fn sc::unsigned-long csym::__ct_rune_t))
 (sc::decl (csym::___tolower) (sc::fn csym::__ct_rune_t csym::__ct_rune_t))
 (sc::decl (csym::___toupper) (sc::fn csym::__ct_rune_t csym::__ct_rune_t))
 (sc::%line 1 "/usr/include/runetype.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 52 "/usr/include/runetype.h")
 (sc::def (sc::struct csym::unnamed3) (sc::decl csym::__min csym::__rune_t)
  (sc::decl csym::__max csym::__rune_t) (sc::decl csym::__map csym::__rune_t)
  (sc::decl csym::__types (sc::ptr sc::unsigned-long)))
 (sc::deftype csym::|_@r@UNE@e@NTRY| (sc::struct csym::unnamed3))
 (sc::def (sc::struct csym::unnamed4) (sc::decl csym::__nranges sc::int)
  (sc::decl csym::__ranges (sc::ptr csym::|_@r@UNE@e@NTRY|)))
 (sc::deftype csym::|_@r@UNE@r@ANGE| (sc::struct csym::unnamed4))
 (sc::def (sc::struct csym::unnamed5)
  (sc::decl csym::__magic (sc::array sc::char 8))
  (sc::decl csym::__encoding (sc::array sc::char 32))
  (sc::decl csym::__sgetrune
   (sc::ptr
    (sc::fn csym::__rune_t (sc::ptr (sc::const sc::char)) csym::__size_t
     (sc::ptr (sc::ptr (sc::const sc::char))))))
  (sc::decl csym::__sputrune
   (sc::ptr
    (sc::fn sc::int csym::__rune_t (sc::ptr sc::char) csym::__size_t
     (sc::ptr (sc::ptr sc::char)))))
  (sc::decl csym::__invalid_rune csym::__rune_t)
  (sc::decl csym::__runetype (sc::array sc::unsigned-long (sc::<< 1 8)))
  (sc::decl csym::__maplower (sc::array csym::__rune_t (sc::<< 1 8)))
  (sc::decl csym::__mapupper (sc::array csym::__rune_t (sc::<< 1 8)))
  (sc::decl csym::__runetype_ext csym::|_@r@UNE@r@ANGE|)
  (sc::decl csym::__maplower_ext csym::|_@r@UNE@r@ANGE|)
  (sc::decl csym::__mapupper_ext csym::|_@r@UNE@r@ANGE|)
  (sc::decl csym::__variable (sc::ptr sc::void))
  (sc::decl csym::__variable_len sc::int))
 (sc::deftype csym::|_@r@UNE@l@OCALE| (sc::struct csym::unnamed5))
 (sc::%line 81 "/usr/include/runetype.h")
 (sc::extern-decl csym::|_@d@EFAULT@r@UNE@l@OCALE| csym::|_@r@UNE@l@OCALE|)
 (sc::extern-decl csym::|_@c@URRENT@r@UNE@l@OCALE|
  (sc::ptr csym::|_@r@UNE@l@OCALE|))
 (sc::%line 98 "/usr/include/_ctype.h")
 (sc::static-def (csym::__maskrune csym::_c csym::_f)
  (sc::fn sc::int csym::__ct_rune_t sc::unsigned-long)
  (sc::return
   (sc::bit-and
    (sc::if-exp (sc::or (sc::< csym::_c 0) (sc::>= csym::_c (sc::<< 1 8)))
     (csym::___runetype csym::_c)
     (sc::aref
      (sc::fref (sc::mref csym::|_@c@URRENT@r@UNE@l@OCALE|) csym::__runetype)
      csym::_c))
    csym::_f)))
 (sc::static-def (csym::__istype csym::_c csym::_f)
  (sc::fn sc::int csym::__ct_rune_t sc::unsigned-long)
  (sc::return (sc::not (sc::not (csym::__maskrune csym::_c csym::_f)))))
 (sc::static-def (csym::__isctype csym::_c csym::_f)
  (sc::fn sc::int csym::__ct_rune_t sc::unsigned-long)
  (sc::return
   (sc::if-exp (sc::or (sc::< csym::_c 0) (sc::>= csym::_c (sc::<< 1 8))) 0
    (sc::not
     (sc::not
      (sc::bit-and
       (sc::aref (sc::fref csym::|_@d@EFAULT@r@UNE@l@OCALE| csym::__runetype)
        csym::_c)
       csym::_f))))))
 (sc::static-def (csym::__toupper csym::_c)
  (sc::fn csym::__ct_rune_t csym::__ct_rune_t)
  (sc::return
   (sc::if-exp (sc::or (sc::< csym::_c 0) (sc::>= csym::_c (sc::<< 1 8)))
    (csym::___toupper csym::_c)
    (sc::aref
     (sc::fref (sc::mref csym::|_@c@URRENT@r@UNE@l@OCALE|) csym::__mapupper)
     csym::_c))))
 (sc::static-def (csym::__tolower csym::_c)
  (sc::fn csym::__ct_rune_t csym::__ct_rune_t)
  (sc::return
   (sc::if-exp (sc::or (sc::< csym::_c 0) (sc::>= csym::_c (sc::<< 1 8)))
    (csym::___tolower csym::_c)
    (sc::aref
     (sc::fref (sc::mref csym::|_@c@URRENT@r@UNE@l@OCALE|) csym::__maplower)
     csym::_c))))
 (sc::static-def (csym::__wcwidth csym::_c) (sc::fn sc::int csym::__ct_rune_t)
  (sc::decl csym::_x sc::unsigned-int)
  (sc::if (sc::== csym::_c 0) (sc::return 0))
  (sc::= csym::_x
   (sc::cast sc::unsigned-int
    (csym::__maskrune csym::_c
     (sc::bit-or (sc::cast sc::long 3758096384) (sc::cast sc::long 262144)))))
  (sc::if (sc::!= (sc::bit-and csym::_x (sc::cast sc::long 3758096384)) 0)
   (sc::return
    (sc::>> (sc::bit-and csym::_x (sc::cast sc::long 3758096384)) 30)))
  (sc::return
   (sc::if-exp (sc::!= (sc::bit-and csym::_x (sc::cast sc::long 262144)) 0) 1
    (sc::- 1))))
 (sc::%line 52 "posix-out/ctype.h")
 (sc::decl (csym::isalnum) (sc::fn sc::int sc::int))
 (sc::decl (csym::isalpha) (sc::fn sc::int sc::int))
 (sc::decl (csym::iscntrl) (sc::fn sc::int sc::int))
 (sc::decl (csym::isdigit) (sc::fn sc::int sc::int))
 (sc::decl (csym::isgraph) (sc::fn sc::int sc::int))
 (sc::decl (csym::islower) (sc::fn sc::int sc::int))
 (sc::decl (csym::isprint) (sc::fn sc::int sc::int))
 (sc::decl (csym::ispunct) (sc::fn sc::int sc::int))
 (sc::decl (csym::isspace) (sc::fn sc::int sc::int))
 (sc::decl (csym::isupper) (sc::fn sc::int sc::int))
 (sc::decl (csym::isxdigit) (sc::fn sc::int sc::int))
 (sc::decl (csym::tolower) (sc::fn sc::int sc::int))
 (sc::decl (csym::toupper) (sc::fn sc::int sc::int))
 (sc::decl (csym::_tolower) (sc::fn sc::int sc::int))
 (sc::decl (csym::_toupper) (sc::fn sc::int sc::int))
 (sc::decl (csym::isascii) (sc::fn sc::int sc::int))
 (sc::decl (csym::toascii) (sc::fn sc::int sc::int))
 (sc::decl (csym::isblank) (sc::fn sc::int sc::int))
 (sc::decl (csym::digittoint) (sc::fn sc::int sc::int))
 (sc::decl (csym::ishexnumber) (sc::fn sc::int sc::int))
 (sc::decl (csym::isideogram) (sc::fn sc::int sc::int))
 (sc::decl (csym::isnumber) (sc::fn sc::int sc::int))
 (sc::decl (csym::isphonogram) (sc::fn sc::int sc::int))
 (sc::decl (csym::isrune) (sc::fn sc::int sc::int))
 (sc::decl (csym::isspecial) (sc::fn sc::int sc::int))
 (sc::%line 1 "posix-out/dirent.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/dirent.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 50 "/usr/include/sys/dirent.h")
 (sc::def (sc::struct csym::dirent) (sc::decl csym::d_fileno csym::__uint32_t)
  (sc::decl csym::d_reclen csym::__uint16_t)
  (sc::decl csym::d_type csym::__uint8_t)
  (sc::decl csym::d_namlen csym::__uint8_t)
  (sc::decl csym::d_name (sc::array sc::char (sc::+ 255 1))))
 (sc::%line 61 "/usr/include/sys/dirent.h")
 (sc::%line 1 "/usr/include/sys/_null.h") (sc::%line 62 "posix-out/dirent.h")
 (sc::def (sc::struct csym::_dirdesc) (sc::decl csym::dd_fd sc::int)
  (sc::decl csym::dd_loc sc::long) (sc::decl csym::dd_size sc::long)
  (sc::decl csym::dd_buf (sc::ptr sc::char)) (sc::decl csym::dd_len sc::int)
  (sc::decl csym::dd_seek sc::long) (sc::decl csym::dd_rewind sc::long)
  (sc::decl csym::dd_flags sc::int) (sc::decl csym::dd_lock (sc::ptr sc::void))
  (sc::decl csym::dd_td (sc::ptr (sc::struct csym::_telldir))))
 (sc::deftype csym::|@dir| (sc::struct csym::_dirdesc))
 (sc::%line 94 "posix-out/dirent.h")
 (sc::decl (csym::__opendir2)
  (sc::fn (sc::ptr csym::|@dir|) (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::alphasort)
  (sc::fn sc::int (sc::ptr (sc::const sc::void))
   (sc::ptr (sc::const sc::void))))
 (sc::decl (csym::getdents)
  (sc::fn sc::int sc::int (sc::ptr sc::char) sc::int))
 (sc::decl (csym::getdirentries)
  (sc::fn sc::int sc::int (sc::ptr sc::char) sc::int (sc::ptr sc::long)))
 (sc::decl (csym::opendir)
  (sc::fn (sc::ptr csym::|@dir|) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::readdir)
  (sc::fn (sc::ptr (sc::struct csym::dirent)) (sc::ptr csym::|@dir|)))
 (sc::decl (csym::readdir_r)
  (sc::fn sc::int (sc::ptr csym::|@dir|) (sc::ptr (sc::struct csym::dirent))
   (sc::ptr (sc::ptr (sc::struct csym::dirent)))))
 (sc::decl (csym::rewinddir) (sc::fn sc::void (sc::ptr csym::|@dir|)))
 (sc::decl (csym::scandir)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr (sc::ptr (sc::struct csym::dirent))))
   (sc::ptr (sc::fn sc::int (sc::ptr (sc::struct csym::dirent))))
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::seekdir) (sc::fn sc::void (sc::ptr csym::|@dir|) sc::long))
 (sc::decl (csym::telldir) (sc::fn sc::long (sc::ptr csym::|@dir|)))
 (sc::decl (csym::closedir) (sc::fn sc::int (sc::ptr csym::|@dir|)))
 (sc::%line 1 "posix-out/dlfcn.h") (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 77 "posix-out/dlfcn.h")
 (sc::def (sc::struct csym::dl_info)
  (sc::decl csym::dli_fname (sc::ptr (sc::const sc::char)))
  (sc::decl csym::dli_fbase (sc::ptr sc::void))
  (sc::decl csym::dli_sname (sc::ptr (sc::const sc::char)))
  (sc::decl csym::dli_saddr (sc::ptr sc::void)))
 (sc::deftype csym::|@d@L_INFO| (sc::struct csym::dl_info))
 (sc::%line 93 "posix-out/dlfcn.h")
 (sc::def (sc::struct csym::__dlfunc_arg)
  (sc::decl csym::__dlfunc_dummy sc::int))
 (sc::deftype csym::dlfunc_t
  (sc::ptr (sc::fn sc::void (sc::struct csym::__dlfunc_arg))))
 (sc::%line 102 "posix-out/dlfcn.h")
 (sc::def (sc::struct csym::dl_serpath)
  (sc::decl csym::dls_name (sc::ptr sc::char))
  (sc::decl csym::dls_flags sc::unsigned-int))
 (sc::deftype csym::|@d@L_SERPATH| (sc::struct csym::dl_serpath))
 (sc::def (sc::struct csym::dl_serinfo) (sc::decl csym::dls_size csym::size_t)
  (sc::decl csym::dls_cnt sc::unsigned-int)
  (sc::decl csym::dls_serpath (sc::array csym::|@d@L_SERPATH| 1)))
 (sc::deftype csym::|@d@L_SERINFO| (sc::struct csym::dl_serinfo))
 (sc::decl (csym::dlclose) (sc::fn sc::int (sc::ptr sc::void)))
 (sc::decl (csym::dlerror) (sc::fn (sc::ptr (sc::const sc::char)) sc::void))
 (sc::decl (csym::dlopen)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::dlsym)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void)
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::dladdr)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) (sc::ptr csym::|@d@L_INFO|)))
 (sc::decl (csym::dlfunc)
  (sc::fn csym::dlfunc_t (sc::ptr sc::void) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::dlinfo)
  (sc::fn sc::int (sc::ptr sc::void) sc::int (sc::ptr sc::void)))
 (sc::decl
  (csym::dllockinit csym::_context csym::_lock_create csym::_rlock_acquire
   csym::_wlock_acquire csym::_lock_release csym::_lock_destroy
   csym::_context_destroy)
  (sc::fn sc::void (sc::ptr sc::void)
   (sc::ptr (sc::fn (sc::ptr sc::void) (sc::ptr sc::void)))
   (sc::ptr (sc::fn sc::void (sc::ptr sc::void)))
   (sc::ptr (sc::fn sc::void (sc::ptr sc::void)))
   (sc::ptr (sc::fn sc::void (sc::ptr sc::void)))
   (sc::ptr (sc::fn sc::void (sc::ptr sc::void)))
   (sc::ptr (sc::fn sc::void (sc::ptr sc::void)))))
 (sc::%line 1 "posix-out/errno.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 43 "posix-out/errno.h")
 (sc::decl (csym::__error) (sc::fn (sc::ptr sc::int) sc::void))
 (sc::%line 1 "posix-out/fcntl.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 197 "posix-out/fcntl.h")
 (sc::def (sc::struct csym::flock) (sc::decl csym::l_start csym::off_t)
  (sc::decl csym::l_len csym::off_t) (sc::decl csym::l_pid sc::long)
  (sc::decl csym::l_type sc::short) (sc::decl csym::l_whence sc::short))
 (sc::%line 219 "posix-out/fcntl.h")
 (sc::decl (csym::open)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int sc::va-arg))
 (sc::decl (csym::creat)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::mode_t))
 (sc::decl (csym::fcntl) (sc::fn sc::int sc::int sc::int sc::va-arg))
 (sc::decl (csym::flock) (sc::fn sc::int sc::int sc::int))
 (sc::%line 1 "posix-out/fenv.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 35 "posix-out/fenv.h")
 (sc::def (sc::struct csym::unnamed6)
  (sc::decl csym::__control csym::__uint32_t)
  (sc::decl csym::__status csym::__uint32_t)
  (sc::decl csym::__tag csym::__uint32_t)
  (sc::decl csym::__other (sc::array sc::char 16)))
 (sc::deftype csym::fenv_t (sc::struct csym::unnamed6))
 (sc::deftype csym::fexcept_t csym::__uint16_t)
 (sc::%line 62 "posix-out/fenv.h")
 (sc::extern-decl csym::__fe_dfl_env (sc::const csym::fenv_t))
 (sc::static-def (csym::feclearexcept csym::__excepts) (sc::fn sc::int sc::int)
  (sc::decl csym::__env csym::fenv_t)
  (sc::if (sc::== csym::__excepts (sc::bit-or 4 2 32 1 8 16)) (sc::begin)
   (sc::begin list nil
    (sc::bit-and= (sc::fref csym::__env csym::__status)
     (sc::bit-not csym::__excepts))))
  (sc::return 0))
 (sc::static-def (csym::fegetexceptflag csym::__flagp csym::__excepts)
  (sc::fn sc::int (sc::ptr csym::fexcept_t) sc::int)
  (sc::decl csym::__status sc::int) list nil
  (sc::= (sc::mref csym::__flagp) (sc::bit-and csym::__status csym::__excepts))
  (sc::return 0))
 (sc::static-def (csym::fesetexceptflag csym::__flagp csym::__excepts)
  (sc::fn sc::int (sc::ptr (sc::const csym::fexcept_t)) sc::int)
  (sc::decl csym::__env csym::fenv_t) list nil
  (sc::bit-and= (sc::fref csym::__env csym::__status)
   (sc::bit-not csym::__excepts))
  (sc::bit-or= (sc::fref csym::__env csym::__status)
   (sc::bit-and (sc::mref csym::__flagp) csym::__excepts))
  (sc::return 0))
 (sc::static-def (csym::feraiseexcept csym::__excepts) (sc::fn sc::int sc::int)
  (sc::def csym::__ex csym::fexcept_t csym::__excepts)
  (csym::fesetexceptflag (sc::ptr csym::__ex) csym::__excepts) (sc::return 0))
 (sc::static-def (csym::fetestexcept csym::__excepts) (sc::fn sc::int sc::int)
  (sc::decl csym::__status sc::int) list nil
  (sc::return (sc::bit-and csym::__status csym::__excepts)))
 (sc::static-def (csym::fegetround) (sc::fn sc::int sc::void)
  (sc::decl csym::__control sc::int) list nil
  (sc::return (sc::bit-and csym::__control (sc::bit-or 0 1024 2048 3072))))
 (sc::static-def (csym::fesetround csym::__round) (sc::fn sc::int sc::int)
  (sc::decl csym::__control sc::int)
  (sc::if
   (sc::bit-and csym::__round (sc::bit-not (sc::bit-or 0 1024 2048 3072)))
   (sc::return (sc::- 1)))
  list nil
  (sc::bit-and= csym::__control (sc::bit-not (sc::bit-or 0 1024 2048 3072)))
  (sc::bit-or= csym::__control csym::__round) (sc::return 0))
 (sc::static-def (csym::fegetenv csym::__envp)
  (sc::fn sc::int (sc::ptr csym::fenv_t)) (sc::decl csym::__control sc::int)
  (sc::%line 164 "posix-out/fenv.h") list nil list nil (sc::return 0))
 (sc::static-def (csym::feholdexcept csym::__envp)
  (sc::fn sc::int (sc::ptr csym::fenv_t)) list nil (sc::return 0))
 (sc::static-def (csym::fesetenv csym::__envp)
  (sc::fn sc::int (sc::ptr (sc::const csym::fenv_t))) (sc::return 0))
 (sc::static-def (csym::feupdateenv csym::__envp)
  (sc::fn sc::int (sc::ptr (sc::const csym::fenv_t)))
  (sc::decl csym::__status sc::int) list nil
  (csym::feraiseexcept (sc::bit-and csym::__status (sc::bit-or 4 2 32 1 8 16)))
  (sc::return 0))
 (sc::static-def (csym::fesetmask csym::__mask) (sc::fn sc::int sc::int)
  (sc::decl csym::__control sc::int) list nil
  (sc::= csym::__mask
   (sc::bit-and (sc::bit-or csym::__control (sc::bit-or 4 2 32 1 8 16))
    (sc::bit-not csym::__mask)))
  (sc::return
   (sc::bit-and (sc::bit-not csym::__control) (sc::bit-or 4 2 32 1 8 16))))
 (sc::static-def (csym::fegetmask) (sc::fn sc::int sc::void)
  (sc::decl csym::__control sc::int) list nil
  (sc::return
   (sc::bit-and (sc::bit-not csym::__control) (sc::bit-or 4 2 32 1 8 16))))
 (sc::%line 1 "posix-out/float.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 38 "posix-out/float.h")
 (sc::extern-decl (csym::__flt_rounds) (sc::fn sc::int sc::void))
 (sc::%line 1 "posix-out/fmtmsg.h") (sc::%line 70 "posix-out/fmtmsg.h")
 (sc::decl (csym::fmtmsg)
  (sc::fn sc::int sc::long (sc::ptr (sc::const sc::char)) sc::int
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::%line 1 "posix-out/fnmatch.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 59 "posix-out/fnmatch.h")
 (sc::decl (csym::fnmatch)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   sc::int))
 (sc::%line 1 "posix-out/ftw.h") (sc::%line 1 "/usr/include/sys/types.h")
 (sc::%line 1 "/usr/include/sys/stat.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/time.h")
 (sc::%line 104 "/usr/include/sys/stat.h")
 (sc::def (sc::struct csym::ostat) (sc::decl csym::st_dev csym::__uint16_t)
  (sc::decl csym::st_ino csym::ino_t) (sc::decl csym::st_mode csym::mode_t)
  (sc::decl csym::st_nlink csym::nlink_t)
  (sc::decl csym::st_uid csym::__uint16_t)
  (sc::decl csym::st_gid csym::__uint16_t)
  (sc::decl csym::st_rdev csym::__uint16_t)
  (sc::decl csym::st_size csym::__int32_t)
  (sc::decl csym::st_atimespec (sc::struct csym::timespec))
  (sc::decl csym::st_mtimespec (sc::struct csym::timespec))
  (sc::decl csym::st_ctimespec (sc::struct csym::timespec))
  (sc::decl csym::st_blksize csym::__int32_t)
  (sc::decl csym::st_blocks csym::__int32_t)
  (sc::decl csym::st_flags csym::fflags_t)
  (sc::decl csym::st_gen csym::__uint32_t))
 (sc::def (sc::struct csym::stat) (sc::decl csym::st_dev csym::__dev_t)
  (sc::decl csym::st_ino csym::ino_t) (sc::decl csym::st_mode csym::mode_t)
  (sc::decl csym::st_nlink csym::nlink_t) (sc::decl csym::st_uid csym::uid_t)
  (sc::decl csym::st_gid csym::gid_t) (sc::decl csym::st_rdev csym::__dev_t)
  (sc::decl csym::st_atimespec (sc::struct csym::timespec))
  (sc::decl csym::st_mtimespec (sc::struct csym::timespec))
  (sc::decl csym::st_ctimespec (sc::struct csym::timespec))
  (sc::decl csym::st_size csym::off_t)
  (sc::decl csym::st_blocks csym::__int64_t)
  (sc::decl csym::st_blksize csym::__uint32_t)
  (sc::decl csym::st_flags csym::fflags_t)
  (sc::decl csym::st_gen csym::__uint32_t)
  (sc::decl csym::st_lspare csym::__int32_t)
  (sc::decl csym::st_birthtimespec (sc::struct csym::timespec))
  (sc::decl csym::xxx sc::unsigned-int) :bit
  (sc::* (sc::/ 8 2)
   (sc::- 16 (sc::cast sc::int (sc::sizeof (sc::struct csym::timespec)))))
  (sc::decl csym::yyy sc::unsigned-int) :bit
  (sc::* (sc::/ 8 2)
   (sc::- 16 (sc::cast sc::int (sc::sizeof (sc::struct csym::timespec))))))
 (sc::%line 143 "/usr/include/sys/stat.h")
 (sc::%line 159 "/usr/include/sys/stat.h")
 (sc::%line 167 "/usr/include/sys/stat.h")
 (sc::def (sc::struct csym::nstat) (sc::decl csym::st_dev csym::__dev_t)
  (sc::decl csym::st_ino csym::ino_t) (sc::decl csym::st_mode csym::__uint32_t)
  (sc::decl csym::st_nlink csym::__uint32_t)
  (sc::decl csym::st_uid csym::uid_t) (sc::decl csym::st_gid csym::gid_t)
  (sc::decl csym::st_rdev csym::__dev_t)
  (sc::decl csym::st_atimespec (sc::struct csym::timespec))
  (sc::decl csym::st_mtimespec (sc::struct csym::timespec))
  (sc::decl csym::st_ctimespec (sc::struct csym::timespec))
  (sc::decl csym::st_size csym::off_t)
  (sc::decl csym::st_blocks csym::__int64_t)
  (sc::decl csym::st_blksize csym::__uint32_t)
  (sc::decl csym::st_flags csym::fflags_t)
  (sc::decl csym::st_gen csym::__uint32_t)
  (sc::decl csym::st_birthtimespec (sc::struct csym::timespec))
  (sc::decl csym::xxx sc::unsigned-int) :bit
  (sc::* (sc::/ 8 2)
   (sc::- 16 (sc::cast sc::int (sc::sizeof (sc::struct csym::timespec)))))
  (sc::decl csym::yyy sc::unsigned-int) :bit
  (sc::* (sc::/ 8 2)
   (sc::- 16 (sc::cast sc::int (sc::sizeof (sc::struct csym::timespec))))))
 (sc::%line 190 "/usr/include/sys/stat.h")
 (sc::%line 300 "/usr/include/sys/stat.h")
 (sc::decl (csym::chflags)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::unsigned-long))
 (sc::decl (csym::chmod)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::mode_t))
 (sc::decl (csym::fchflags) (sc::fn sc::int sc::int sc::unsigned-long))
 (sc::decl (csym::fchmod) (sc::fn sc::int sc::int csym::mode_t))
 (sc::decl (csym::fstat)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::stat))))
 (sc::decl (csym::lchflags)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::lchmod)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::mode_t))
 (sc::decl (csym::lstat)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::struct csym::stat))))
 (sc::decl (csym::mkdir)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::mode_t))
 (sc::decl (csym::mkfifo)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::mode_t))
 (sc::decl (csym::stat)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::struct csym::stat))))
 (sc::decl (csym::umask) (sc::fn csym::mode_t csym::mode_t))
 (sc::%line 51 "posix-out/ftw.h")
 (sc::def (sc::struct csym::|@ftw|) (sc::decl csym::base sc::int)
  (sc::decl csym::level sc::int))
 (sc::decl (csym::ftw)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::char))
     (sc::ptr (sc::const (sc::struct csym::stat))) sc::int))
   sc::int))
 (sc::decl (csym::nftw)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::char))
     (sc::ptr (sc::const (sc::struct csym::stat))) sc::int
     (sc::ptr (sc::struct csym::|@ftw|))))
   sc::int sc::int))
 (sc::%line 1 "posix-out/glob.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 45 "posix-out/glob.h")
 (sc::def (sc::struct csym::unnamed7) (sc::decl csym::gl_pathc sc::int)
  (sc::decl csym::gl_matchc sc::int) (sc::decl csym::gl_offs sc::int)
  (sc::decl csym::gl_flags sc::int)
  (sc::decl csym::gl_pathv (sc::ptr (sc::ptr sc::char)))
  (sc::decl csym::gl_errfunc
   (sc::ptr (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int)))
  (sc::decl csym::gl_closedir (sc::ptr (sc::fn sc::void (sc::ptr sc::void))))
  (sc::decl csym::gl_readdir
   (sc::ptr (sc::fn (sc::ptr (sc::struct csym::dirent)) (sc::ptr sc::void))))
  (sc::decl csym::gl_opendir
   (sc::ptr (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::char)))))
  (sc::decl csym::gl_lstat
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::char))
     (sc::ptr (sc::struct csym::stat)))))
  (sc::decl csym::gl_stat
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::char))
     (sc::ptr (sc::struct csym::stat))))))
 (sc::deftype csym::glob_t (sc::struct csym::unnamed7))
 (sc::%line 60 "posix-out/glob.h") (sc::%line 98 "posix-out/glob.h")
 (sc::decl (csym::glob)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int
   (sc::ptr (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int))
   (sc::ptr csym::glob_t)))
 (sc::decl (csym::globfree) (sc::fn sc::void (sc::ptr csym::glob_t)))
 (sc::%line 1 "posix-out/grp.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 60 "posix-out/grp.h")
 (sc::def (sc::struct csym::group) (sc::decl csym::gr_name (sc::ptr sc::char))
  (sc::decl csym::gr_passwd (sc::ptr sc::char))
  (sc::decl csym::gr_gid csym::gid_t)
  (sc::decl csym::gr_mem (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::endgrent) (sc::fn sc::void sc::void))
 (sc::decl (csym::getgrent)
  (sc::fn (sc::ptr (sc::struct csym::group)) sc::void))
 (sc::decl (csym::getgrgid)
  (sc::fn (sc::ptr (sc::struct csym::group)) csym::gid_t))
 (sc::decl (csym::getgrnam)
  (sc::fn (sc::ptr (sc::struct csym::group)) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::group_from_gid)
  (sc::fn (sc::ptr (sc::const sc::char)) csym::gid_t sc::int))
 (sc::decl (csym::setgrent) (sc::fn sc::int sc::void))
 (sc::decl (csym::getgrgid_r)
  (sc::fn sc::int csym::gid_t (sc::ptr (sc::struct csym::group))
   (sc::ptr sc::char) csym::size_t
   (sc::ptr (sc::ptr (sc::struct csym::group)))))
 (sc::decl (csym::getgrnam_r)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::struct csym::group)) (sc::ptr sc::char) csym::size_t
   (sc::ptr (sc::ptr (sc::struct csym::group)))))
 (sc::decl (csym::getgrent_r)
  (sc::fn sc::int (sc::ptr (sc::struct csym::group)) (sc::ptr sc::char)
   csym::size_t (sc::ptr (sc::ptr (sc::struct csym::group)))))
 (sc::decl (csym::setgroupent) (sc::fn sc::int sc::int))
 (sc::%line 1 "posix-out/if.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/time.h") (sc::%line 51 "posix-out/if.h")
 (sc::%line 69 "posix-out/if.h")
 (sc::def (sc::struct csym::if_clonereq) (sc::decl csym::ifcr_total sc::int)
  (sc::decl csym::ifcr_count sc::int)
  (sc::decl csym::ifcr_buffer (sc::ptr sc::char)))
 (sc::%line 79 "posix-out/if.h")
 (sc::def (sc::struct csym::if_data) (sc::decl csym::ifi_type csym::u_char)
  (sc::decl csym::ifi_physical csym::u_char)
  (sc::decl csym::ifi_addrlen csym::u_char)
  (sc::decl csym::ifi_hdrlen csym::u_char)
  (sc::decl csym::ifi_link_state csym::u_char)
  (sc::decl csym::ifi_recvquota csym::u_char)
  (sc::decl csym::ifi_xmitquota csym::u_char)
  (sc::decl csym::ifi_datalen csym::u_char)
  (sc::decl csym::ifi_mtu csym::u_long)
  (sc::decl csym::ifi_metric csym::u_long)
  (sc::decl csym::ifi_baudrate csym::u_long)
  (sc::decl csym::ifi_ipackets csym::u_long)
  (sc::decl csym::ifi_ierrors csym::u_long)
  (sc::decl csym::ifi_opackets csym::u_long)
  (sc::decl csym::ifi_oerrors csym::u_long)
  (sc::decl csym::ifi_collisions csym::u_long)
  (sc::decl csym::ifi_ibytes csym::u_long)
  (sc::decl csym::ifi_obytes csym::u_long)
  (sc::decl csym::ifi_imcasts csym::u_long)
  (sc::decl csym::ifi_omcasts csym::u_long)
  (sc::decl csym::ifi_iqdrops csym::u_long)
  (sc::decl csym::ifi_noproto csym::u_long)
  (sc::decl csym::ifi_hwassist csym::u_long)
  (sc::decl csym::ifi_epoch sc::double)
  (sc::decl csym::ifi_lastchange (sc::struct csym::timeval)))
 (sc::%line 109 "posix-out/if.h") (sc::%line 174 "posix-out/if.h")
 (sc::def (sc::struct csym::if_msghdr)
  (sc::decl csym::ifm_msglen csym::u_short)
  (sc::decl csym::ifm_version csym::u_char)
  (sc::decl csym::ifm_type csym::u_char) (sc::decl csym::ifm_addrs sc::int)
  (sc::decl csym::ifm_flags sc::int) (sc::decl csym::ifm_index csym::u_short)
  (sc::decl csym::ifm_data (sc::struct csym::if_data)))
 (sc::%line 188 "posix-out/if.h")
 (sc::def (sc::struct csym::ifa_msghdr)
  (sc::decl csym::ifam_msglen csym::u_short)
  (sc::decl csym::ifam_version csym::u_char)
  (sc::decl csym::ifam_type csym::u_char) (sc::decl csym::ifam_addrs sc::int)
  (sc::decl csym::ifam_flags sc::int) (sc::decl csym::ifam_index csym::u_short)
  (sc::decl csym::ifam_metric sc::int))
 (sc::%line 202 "posix-out/if.h")
 (sc::def (sc::struct csym::ifma_msghdr)
  (sc::decl csym::ifmam_msglen csym::u_short)
  (sc::decl csym::ifmam_version csym::u_char)
  (sc::decl csym::ifmam_type csym::u_char) (sc::decl csym::ifmam_addrs sc::int)
  (sc::decl csym::ifmam_flags sc::int)
  (sc::decl csym::ifmam_index csym::u_short))
 (sc::%line 214 "posix-out/if.h")
 (sc::def (sc::struct csym::if_announcemsghdr)
  (sc::decl csym::ifan_msglen csym::u_short)
  (sc::decl csym::ifan_version csym::u_char)
  (sc::decl csym::ifan_type csym::u_char)
  (sc::decl csym::ifan_index csym::u_short)
  (sc::decl csym::ifan_name (sc::array sc::char 16))
  (sc::decl csym::ifan_what csym::u_short))
 (sc::%line 232 "posix-out/if.h")
 (sc::def (sc::struct csym::ifreq)
  (sc::decl csym::ifr_name (sc::array sc::char 16))
  (sc::def (sc::union csym::unnamed8)
   (sc::decl csym::ifru_addr (sc::struct csym::sockaddr))
   (sc::decl csym::ifru_dstaddr (sc::struct csym::sockaddr))
   (sc::decl csym::ifru_broadaddr (sc::struct csym::sockaddr))
   (sc::decl csym::ifru_flags (sc::array sc::short 2))
   (sc::decl csym::ifru_index sc::short) (sc::decl csym::ifru_metric sc::int)
   (sc::decl csym::ifru_mtu sc::int) (sc::decl csym::ifru_phys sc::int)
   (sc::decl csym::ifru_media sc::int) (sc::decl csym::ifru_data csym::caddr_t)
   (sc::decl csym::ifru_cap (sc::array sc::int 2)))
  (sc::decl csym::ifr_ifru (sc::union csym::unnamed8)))
 (sc::%line 260 "posix-out/if.h") (sc::%line 267 "posix-out/if.h")
 (sc::def (sc::struct csym::ifaliasreq)
  (sc::decl csym::ifra_name (sc::array sc::char 16))
  (sc::decl csym::ifra_addr (sc::struct csym::sockaddr))
  (sc::decl csym::ifra_broadaddr (sc::struct csym::sockaddr))
  (sc::decl csym::ifra_mask (sc::struct csym::sockaddr)))
 (sc::def (sc::struct csym::ifmediareq)
  (sc::decl csym::ifm_name (sc::array sc::char 16))
  (sc::decl csym::ifm_current sc::int) (sc::decl csym::ifm_mask sc::int)
  (sc::decl csym::ifm_status sc::int) (sc::decl csym::ifm_active sc::int)
  (sc::decl csym::ifm_count sc::int)
  (sc::decl csym::ifm_ulist (sc::ptr sc::int)))
 (sc::%line 292 "posix-out/if.h")
 (sc::def (sc::struct csym::ifstat)
  (sc::decl csym::ifs_name (sc::array sc::char 16))
  (sc::decl csym::ascii (sc::array sc::char (sc::+ 800 1))))
 (sc::%line 303 "posix-out/if.h")
 (sc::def (sc::struct csym::ifconf) (sc::decl csym::ifc_len sc::int)
  (sc::def (sc::union csym::unnamed9) (sc::decl csym::ifcu_buf csym::caddr_t)
   (sc::decl csym::ifcu_req (sc::ptr (sc::struct csym::ifreq))))
  (sc::decl csym::ifc_ifcu (sc::union csym::unnamed9)))
 (sc::%line 317 "posix-out/if.h")
 (sc::def (sc::struct csym::if_laddrreq)
  (sc::decl csym::iflr_name (sc::array sc::char 16))
  (sc::decl csym::flags csym::u_int) (sc::decl csym::prefixlen csym::u_int)
  (sc::decl csym::addr (sc::struct csym::sockaddr_storage))
  (sc::decl csym::dstaddr (sc::struct csym::sockaddr_storage)))
 (sc::%line 336 "posix-out/if.h")
 (sc::def (sc::struct csym::if_nameindex)
  (sc::decl csym::if_index sc::unsigned-int)
  (sc::decl csym::if_name (sc::ptr sc::char)))
 (sc::decl (csym::if_freenameindex)
  (sc::fn sc::void (sc::ptr (sc::struct csym::if_nameindex))))
 (sc::decl (csym::if_indextoname)
  (sc::fn (sc::ptr sc::char) sc::unsigned-int (sc::ptr sc::char)))
 (sc::decl (csym::if_nameindex)
  (sc::fn (sc::ptr (sc::struct csym::if_nameindex)) sc::void))
 (sc::decl (csym::if_nametoindex)
  (sc::fn sc::unsigned-int (sc::ptr (sc::const sc::char))))
 (sc::%line 1 "posix-out/in.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/machine/endian.h") (sc::%line 75 "posix-out/in.h")
 (sc::deftype csym::sa_family_t csym::__sa_family_t)
 (sc::def (sc::struct csym::in_addr) (sc::decl csym::s_addr csym::in_addr_t))
 (sc::def (sc::struct csym::sockaddr_in) (sc::decl csym::sin_len csym::uint8_t)
  (sc::decl csym::sin_family csym::sa_family_t)
  (sc::decl csym::sin_port csym::in_port_t)
  (sc::decl csym::sin_addr (sc::struct csym::in_addr))
  (sc::decl csym::sin_zero (sc::array sc::char 8)))
 (sc::decl (csym::htonl) (sc::fn csym::uint32_t csym::uint32_t))
 (sc::decl (csym::htons) (sc::fn csym::uint16_t csym::uint16_t))
 (sc::decl (csym::ntohl) (sc::fn csym::uint32_t csym::uint32_t))
 (sc::decl (csym::ntohs) (sc::fn csym::uint16_t csym::uint16_t))
 (sc::%line 421 "posix-out/in.h")
 (sc::def (sc::struct csym::ip_mreq)
  (sc::decl csym::imr_multiaddr (sc::struct csym::in_addr))
  (sc::decl csym::imr_interface (sc::struct csym::in_addr)))
 (sc::%line 1 "/usr/include/netinet6/in6.h")
 (sc::%line 117 "/usr/include/netinet6/in6.h")
 (sc::def (sc::struct csym::in6_addr)
  (sc::def (sc::union csym::unnamed10)
   (sc::decl csym::__u6_addr8 (sc::array csym::uint8_t 16))
   (sc::decl csym::__u6_addr16 (sc::array csym::uint16_t 8))
   (sc::decl csym::__u6_addr32 (sc::array csym::uint32_t 4)))
  (sc::decl csym::__u6_addr (sc::union csym::unnamed10)))
 (sc::%line 145 "/usr/include/netinet6/in6.h")
 (sc::def (sc::struct csym::sockaddr_in6)
  (sc::decl csym::sin6_len csym::uint8_t)
  (sc::decl csym::sin6_family csym::sa_family_t)
  (sc::decl csym::sin6_port csym::in_port_t)
  (sc::decl csym::sin6_flowinfo csym::uint32_t)
  (sc::decl csym::sin6_addr (sc::struct csym::in6_addr))
  (sc::decl csym::sin6_scope_id csym::uint32_t))
 (sc::%line 228 "/usr/include/netinet6/in6.h")
 (sc::extern-decl csym::in6addr_any (sc::const (sc::struct csym::in6_addr)))
 (sc::extern-decl csym::in6addr_loopback
  (sc::const (sc::struct csym::in6_addr)))
 (sc::extern-decl csym::in6addr_nodelocal_allnodes
  (sc::const (sc::struct csym::in6_addr)))
 (sc::extern-decl csym::in6addr_linklocal_allnodes
  (sc::const (sc::struct csym::in6_addr)))
 (sc::extern-decl csym::in6addr_linklocal_allrouters
  (sc::const (sc::struct csym::in6_addr)))
 (sc::%line 396 "/usr/include/netinet6/in6.h")
 (sc::def (sc::struct csym::route_in6)
  (sc::decl csym::ro_rt (sc::ptr (sc::struct csym::rtentry)))
  (sc::decl csym::ro_dst (sc::struct csym::sockaddr_in6)))
 (sc::%line 513 "/usr/include/netinet6/in6.h")
 (sc::def (sc::struct csym::ipv6_mreq)
  (sc::decl csym::ipv6mr_multiaddr (sc::struct csym::in6_addr))
  (sc::decl csym::ipv6mr_interface sc::unsigned-int))
 (sc::%line 521 "/usr/include/netinet6/in6.h")
 (sc::def (sc::struct csym::in6_pktinfo)
  (sc::decl csym::ipi6_addr (sc::struct csym::in6_addr))
  (sc::decl csym::ipi6_ifindex sc::unsigned-int))
 (sc::%line 529 "/usr/include/netinet6/in6.h")
 (sc::def (sc::struct csym::ip6_mtuinfo)
  (sc::decl csym::ip6m_addr (sc::struct csym::sockaddr_in6))
  (sc::decl csym::ip6m_mtu csym::uint32_t))
 (sc::%line 641 "/usr/include/netinet6/in6.h")
 (sc::deftype csym::socklen_t csym::__socklen_t)
 (sc::extern-decl (csym::inet6_option_space) (sc::fn sc::int sc::int))
 (sc::extern-decl (csym::inet6_option_init)
  (sc::fn sc::int (sc::ptr sc::void)
   (sc::ptr (sc::ptr (sc::struct csym::cmsghdr))) sc::int))
 (sc::extern-decl (csym::inet6_option_append)
  (sc::fn sc::int (sc::ptr (sc::struct csym::cmsghdr))
   (sc::ptr (sc::const csym::uint8_t)) sc::int sc::int))
 (sc::%line 654 "/usr/include/netinet6/in6.h")
 (sc::extern-decl (csym::inet6_option_alloc)
  (sc::fn (sc::ptr csym::uint8_t) (sc::ptr (sc::struct csym::cmsghdr)) sc::int
   sc::int sc::int))
 (sc::extern-decl (csym::inet6_option_next)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::cmsghdr)))
   (sc::ptr (sc::ptr csym::uint8_t))))
 (sc::extern-decl (csym::inet6_option_find)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::cmsghdr)))
   (sc::ptr (sc::ptr csym::uint8_t)) sc::int))
 (sc::extern-decl (csym::inet6_rthdr_space)
  (sc::fn csym::size_t sc::int sc::int))
 (sc::extern-decl (csym::inet6_rthdr_init)
  (sc::fn (sc::ptr (sc::struct csym::cmsghdr)) (sc::ptr sc::void) sc::int))
 (sc::extern-decl (csym::inet6_rthdr_add)
  (sc::fn sc::int (sc::ptr (sc::struct csym::cmsghdr))
   (sc::ptr (sc::const (sc::struct csym::in6_addr))) sc::unsigned-int))
 (sc::%line 662 "/usr/include/netinet6/in6.h")
 (sc::extern-decl (csym::inet6_rthdr_lasthop)
  (sc::fn sc::int (sc::ptr (sc::struct csym::cmsghdr)) sc::unsigned-int))
 (sc::%line 666 "/usr/include/netinet6/in6.h")
 (sc::extern-decl (csym::inet6_rthdr_segments)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::cmsghdr)))))
 (sc::extern-decl (csym::inet6_rthdr_getaddr)
  (sc::fn (sc::ptr (sc::struct csym::in6_addr))
   (sc::ptr (sc::struct csym::cmsghdr)) sc::int))
 (sc::extern-decl (csym::inet6_rthdr_getflags)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::cmsghdr))) sc::int))
 (sc::extern-decl (csym::inet6_opt_init)
  (sc::fn sc::int (sc::ptr sc::void) csym::socklen_t))
 (sc::extern-decl (csym::inet6_opt_append)
  (sc::fn sc::int (sc::ptr sc::void) csym::socklen_t sc::int csym::uint8_t
   csym::socklen_t csym::uint8_t (sc::ptr (sc::ptr sc::void))))
 (sc::%line 673 "/usr/include/netinet6/in6.h")
 (sc::extern-decl (csym::inet6_opt_finish)
  (sc::fn sc::int (sc::ptr sc::void) csym::socklen_t sc::int))
 (sc::extern-decl (csym::inet6_opt_set_val)
  (sc::fn sc::int (sc::ptr sc::void) sc::int (sc::ptr sc::void)
   csym::socklen_t))
 (sc::extern-decl (csym::inet6_opt_next)
  (sc::fn sc::int (sc::ptr sc::void) csym::socklen_t sc::int
   (sc::ptr csym::uint8_t) (sc::ptr csym::socklen_t)
   (sc::ptr (sc::ptr sc::void))))
 (sc::%line 678 "/usr/include/netinet6/in6.h")
 (sc::extern-decl (csym::inet6_opt_find)
  (sc::fn sc::int (sc::ptr sc::void) csym::socklen_t sc::int csym::uint8_t
   (sc::ptr csym::socklen_t) (sc::ptr (sc::ptr sc::void))))
 (sc::%line 680 "/usr/include/netinet6/in6.h")
 (sc::extern-decl (csym::inet6_opt_get_val)
  (sc::fn sc::int (sc::ptr sc::void) sc::int (sc::ptr sc::void)
   csym::socklen_t))
 (sc::extern-decl (csym::inet6_rth_space)
  (sc::fn csym::socklen_t sc::int sc::int))
 (sc::extern-decl (csym::inet6_rth_init)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void) csym::socklen_t sc::int
   sc::int))
 (sc::extern-decl (csym::inet6_rth_add)
  (sc::fn sc::int (sc::ptr sc::void)
   (sc::ptr (sc::const (sc::struct csym::in6_addr)))))
 (sc::extern-decl (csym::inet6_rth_reverse)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) (sc::ptr sc::void)))
 (sc::extern-decl (csym::inet6_rth_segments)
  (sc::fn sc::int (sc::ptr (sc::const sc::void))))
 (sc::extern-decl (csym::inet6_rth_getaddr)
  (sc::fn (sc::ptr (sc::struct csym::in6_addr)) (sc::ptr (sc::const sc::void))
   sc::int))
 (sc::%line 1 "posix-out/inet.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/machine/endian.h")
 (sc::%line 131 "posix-out/inet.h") (sc::%line 140 "posix-out/inet.h")
 (sc::decl (csym::__inet_addr)
  (sc::fn csym::in_addr_t (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::__inet_ntoa)
  (sc::fn (sc::ptr sc::char) (sc::struct csym::in_addr)))
 (sc::decl (csym::__inet_ntop)
  (sc::fn (sc::ptr (sc::const sc::char)) sc::int (sc::ptr (sc::const sc::void))
   (sc::ptr sc::char) csym::socklen_t))
 (sc::decl (csym::__inet_pton)
  (sc::fn sc::int sc::int (sc::ptr (sc::const sc::char)) (sc::ptr sc::void)))
 (sc::decl (csym::ascii2addr)
  (sc::fn sc::int sc::int (sc::ptr (sc::const sc::char)) (sc::ptr sc::void)))
 (sc::decl (csym::addr2ascii)
  (sc::fn (sc::ptr sc::char) sc::int (sc::ptr (sc::const sc::void)) sc::int
   (sc::ptr sc::char)))
 (sc::decl (csym::__inet_aton)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::struct csym::in_addr))))
 (sc::decl (csym::__inet_lnaof)
  (sc::fn csym::in_addr_t (sc::struct csym::in_addr)))
 (sc::decl (csym::__inet_makeaddr)
  (sc::fn (sc::struct csym::in_addr) csym::in_addr_t csym::in_addr_t))
 (sc::decl (csym::__inet_neta)
  (sc::fn (sc::ptr sc::char) csym::in_addr_t (sc::ptr sc::char) csym::size_t))
 (sc::decl (csym::__inet_netof)
  (sc::fn csym::in_addr_t (sc::struct csym::in_addr)))
 (sc::decl (csym::__inet_network)
  (sc::fn csym::in_addr_t (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::__inet_net_ntop)
  (sc::fn (sc::ptr sc::char) sc::int (sc::ptr (sc::const sc::void)) sc::int
   (sc::ptr sc::char) csym::size_t))
 (sc::decl (csym::__inet_net_pton)
  (sc::fn sc::int sc::int (sc::ptr (sc::const sc::char)) (sc::ptr sc::void)
   csym::size_t))
 (sc::decl (csym::__inet_nsap_addr)
  (sc::fn sc::unsigned-int (sc::ptr (sc::const sc::char))
   (sc::ptr sc::unsigned-char) sc::int))
 (sc::decl (csym::__inet_nsap_ntoa)
  (sc::fn (sc::ptr sc::char) sc::int (sc::ptr (sc::const sc::unsigned-char))
   (sc::ptr sc::char)))
 (sc::%line 1 "posix-out/inttypes.h")
 (sc::%line 1 "/usr/include/machine/_inttypes.h")
 (sc::%line 1 "/usr/include/sys/stdint.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/machine/_stdint.h")
 (sc::%line 77 "/usr/include/sys/stdint.h")
 (sc::deftype csym::int_least8_t csym::__int_least8_t)
 (sc::deftype csym::int_least16_t csym::__int_least16_t)
 (sc::deftype csym::int_least32_t csym::__int_least32_t)
 (sc::deftype csym::int_least64_t csym::__int_least64_t)
 (sc::deftype csym::uint_least8_t csym::__uint_least8_t)
 (sc::deftype csym::uint_least16_t csym::__uint_least16_t)
 (sc::deftype csym::uint_least32_t csym::__uint_least32_t)
 (sc::deftype csym::uint_least64_t csym::__uint_least64_t)
 (sc::deftype csym::int_fast8_t csym::__int_fast8_t)
 (sc::deftype csym::int_fast16_t csym::__int_fast16_t)
 (sc::deftype csym::int_fast32_t csym::__int_fast32_t)
 (sc::deftype csym::int_fast64_t csym::__int_fast64_t)
 (sc::deftype csym::uint_fast8_t csym::__uint_fast8_t)
 (sc::deftype csym::uint_fast16_t csym::__uint_fast16_t)
 (sc::deftype csym::uint_fast32_t csym::__uint_fast32_t)
 (sc::deftype csym::uint_fast64_t csym::__uint_fast64_t)
 (sc::deftype csym::intmax_t csym::__intmax_t)
 (sc::deftype csym::uintmax_t csym::__uintmax_t)
 (sc::%line 35 "posix-out/inttypes.h")
 (sc::def (sc::struct csym::unnamed11) (sc::decl csym::quot csym::intmax_t)
  (sc::decl csym::rem csym::intmax_t))
 (sc::deftype csym::imaxdiv_t (sc::struct csym::unnamed11))
 (sc::decl (csym::imaxabs) (sc::fn csym::intmax_t csym::intmax_t))
 (sc::decl (csym::imaxdiv)
  (sc::fn csym::imaxdiv_t csym::intmax_t csym::intmax_t))
 (sc::decl (csym::strtoimax)
  (sc::fn csym::intmax_t (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char)) sc::int))
 (sc::decl (csym::strtoumax)
  (sc::fn csym::uintmax_t (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char)) sc::int))
 (sc::decl (csym::wcstoimax)
  (sc::fn csym::intmax_t (sc::ptr (sc::const csym::__wchar_t))
   (sc::ptr (sc::ptr csym::__wchar_t)) sc::int))
 (sc::decl (csym::wcstoumax)
  (sc::fn csym::uintmax_t (sc::ptr (sc::const csym::__wchar_t))
   (sc::ptr (sc::ptr csym::__wchar_t)) sc::int))
 (sc::%line 1 "posix-out/ipc.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 75 "posix-out/ipc.h")
 (sc::def (sc::struct csym::ipc_perm) (sc::decl csym::cuid sc::unsigned-short)
  (sc::decl csym::cgid sc::unsigned-short)
  (sc::decl csym::uid sc::unsigned-short)
  (sc::decl csym::gid sc::unsigned-short)
  (sc::decl csym::mode sc::unsigned-short)
  (sc::decl csym::seq sc::unsigned-short) (sc::decl csym::key csym::key_t))
 (sc::%line 122 "posix-out/ipc.h")
 (sc::decl (csym::ftok)
  (sc::fn csym::key_t (sc::ptr (sc::const sc::char)) sc::int))
 (sc::%line 1 "posix-out/iso646.h") (sc::%line 1 "posix-out/langinfo.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 36 "posix-out/langinfo.h")
 (sc::deftype csym::nl_item csym::__nl_item)
 (sc::%line 117 "posix-out/langinfo.h")
 (sc::decl (csym::nl_langinfo) (sc::fn (sc::ptr sc::char) csym::nl_item))
 (sc::%line 1 "posix-out/libgen.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 36 "posix-out/libgen.h")
 (sc::decl (csym::basename)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::dirname)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))))
 (sc::%line 47 "posix-out/libgen.h") (sc::%line 1 "posix-out/limits.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/limits.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/machine/_limits.h")
 (sc::%line 1 "/usr/include/sys/syslimits.h")
 (sc::%line 1 "posix-out/locale.h") (sc::%line 1 "/usr/include/sys/_null.h")
 (sc::%line 42 "posix-out/locale.h")
 (sc::def (sc::struct csym::lconv)
  (sc::decl csym::decimal_point (sc::ptr sc::char))
  (sc::decl csym::thousands_sep (sc::ptr sc::char))
  (sc::decl csym::grouping (sc::ptr sc::char))
  (sc::decl csym::int_curr_symbol (sc::ptr sc::char))
  (sc::decl csym::currency_symbol (sc::ptr sc::char))
  (sc::decl csym::mon_decimal_point (sc::ptr sc::char))
  (sc::decl csym::mon_thousands_sep (sc::ptr sc::char))
  (sc::decl csym::mon_grouping (sc::ptr sc::char))
  (sc::decl csym::positive_sign (sc::ptr sc::char))
  (sc::decl csym::negative_sign (sc::ptr sc::char))
  (sc::decl csym::int_frac_digits sc::char)
  (sc::decl csym::frac_digits sc::char) (sc::decl csym::p_cs_precedes sc::char)
  (sc::decl csym::p_sep_by_space sc::char)
  (sc::decl csym::n_cs_precedes sc::char)
  (sc::decl csym::n_sep_by_space sc::char)
  (sc::decl csym::p_sign_posn sc::char) (sc::decl csym::n_sign_posn sc::char)
  (sc::decl csym::int_p_cs_precedes sc::char)
  (sc::decl csym::int_n_cs_precedes sc::char)
  (sc::decl csym::int_p_sep_by_space sc::char)
  (sc::decl csym::int_n_sep_by_space sc::char)
  (sc::decl csym::int_p_sign_posn sc::char)
  (sc::decl csym::int_n_sign_posn sc::char))
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 81 "posix-out/locale.h")
 (sc::decl (csym::localeconv)
  (sc::fn (sc::ptr (sc::struct csym::lconv)) sc::void))
 (sc::decl (csym::setlocale)
  (sc::fn (sc::ptr sc::char) sc::int (sc::ptr (sc::const sc::char))))
 (sc::%line 1 "posix-out/math.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/machine/_limits.h")
 (sc::%line 27 "posix-out/math.h")
 (sc::extern-decl csym::__infinity
  (sc::const
   (sc::union csym::__infinity_un
    (sc::decl csym::__uc (sc::array sc::unsigned-char 8))
    (sc::decl csym::__ud sc::double))))
 (sc::extern-decl csym::__nan
  (sc::const
   (sc::union csym::__nan_un
    (sc::decl csym::__uc (sc::array sc::unsigned-char (sc::sizeof sc::float)))
    (sc::decl csym::__uf sc::float))))
 (sc::%line 121 "posix-out/math.h")
 (sc::deftype csym::double_t csym::__double_t)
 (sc::deftype csym::float_t csym::__float_t) (sc::%line 144 "posix-out/math.h")
 (sc::extern-decl csym::signgam sc::int)
 (sc::def (sc::enum csym::fdversion)
  ((csym::fdlibm_ieee (sc::- 1)) csym::fdlibm_svid csym::fdlibm_xopen
   csym::fdlibm_posix))
 (sc::%line 160 "posix-out/math.h") (sc::def (sc::enum csym::fdversion) nil)
 (sc::extern-decl csym::_fdlib_version (sc::enum csym::fdversion))
 (sc::%line 170 "posix-out/math.h")
 (sc::def (sc::struct csym::exception) (sc::decl csym::type sc::int)
  (sc::decl csym::name (sc::ptr sc::char)) (sc::decl csym::arg1 sc::double)
  (sc::decl csym::arg2 sc::double) (sc::decl csym::retval sc::double))
 (sc::%line 204 "posix-out/math.h") (sc::%line 208 "posix-out/math.h")
 (sc::decl (csym::__fpclassifyd) (sc::fn sc::int sc::double))
 (sc::decl (csym::__fpclassifyf) (sc::fn sc::int sc::float))
 (sc::decl (csym::__fpclassifyl) (sc::fn sc::int sc::long-double))
 (sc::decl (csym::__isfinitef) (sc::fn sc::int sc::float))
 (sc::decl (csym::__isfinite) (sc::fn sc::int sc::double))
 (sc::decl (csym::__isfinitel) (sc::fn sc::int sc::long-double))
 (sc::decl (csym::__isinff) (sc::fn sc::int sc::float))
 (sc::decl (csym::__isinfl) (sc::fn sc::int sc::long-double))
 (sc::decl (csym::__isnanl) (sc::fn sc::int sc::long-double))
 (sc::decl (csym::__isnormalf) (sc::fn sc::int sc::float))
 (sc::decl (csym::__isnormal) (sc::fn sc::int sc::double))
 (sc::decl (csym::__isnormall) (sc::fn sc::int sc::long-double))
 (sc::decl (csym::__signbit) (sc::fn sc::int sc::double))
 (sc::decl (csym::__signbitf) (sc::fn sc::int sc::float))
 (sc::decl (csym::__signbitl) (sc::fn sc::int sc::long-double))
 (sc::decl (csym::acos) (sc::fn sc::double sc::double))
 (sc::decl (csym::asin) (sc::fn sc::double sc::double))
 (sc::decl (csym::atan) (sc::fn sc::double sc::double))
 (sc::decl (csym::atan2) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::cos) (sc::fn sc::double sc::double))
 (sc::decl (csym::sin) (sc::fn sc::double sc::double))
 (sc::decl (csym::tan) (sc::fn sc::double sc::double))
 (sc::decl (csym::cosh) (sc::fn sc::double sc::double))
 (sc::decl (csym::sinh) (sc::fn sc::double sc::double))
 (sc::decl (csym::tanh) (sc::fn sc::double sc::double))
 (sc::decl (csym::exp) (sc::fn sc::double sc::double))
 (sc::decl (csym::frexp) (sc::fn sc::double sc::double (sc::ptr sc::int)))
 (sc::decl (csym::ldexp) (sc::fn sc::double sc::double sc::int))
 (sc::decl (csym::log) (sc::fn sc::double sc::double))
 (sc::decl (csym::log10) (sc::fn sc::double sc::double))
 (sc::decl (csym::modf) (sc::fn sc::double sc::double (sc::ptr sc::double)))
 (sc::decl (csym::pow) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::sqrt) (sc::fn sc::double sc::double))
 (sc::decl (csym::ceil) (sc::fn sc::double sc::double))
 (sc::decl (csym::fabs) (sc::fn sc::double sc::double))
 (sc::decl (csym::floor) (sc::fn sc::double sc::double))
 (sc::decl (csym::fmod) (sc::fn sc::double sc::double sc::double))
 (sc::%line 256 "posix-out/math.h")
 (sc::decl (csym::acosh) (sc::fn sc::double sc::double))
 (sc::decl (csym::asinh) (sc::fn sc::double sc::double))
 (sc::decl (csym::atanh) (sc::fn sc::double sc::double))
 (sc::decl (csym::cbrt) (sc::fn sc::double sc::double))
 (sc::decl (csym::erf) (sc::fn sc::double sc::double))
 (sc::decl (csym::erfc) (sc::fn sc::double sc::double))
 (sc::decl (csym::expm1) (sc::fn sc::double sc::double))
 (sc::decl (csym::hypot) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::ilogb) (sc::fn sc::int sc::double))
 (sc::decl (csym::isinf) (sc::fn sc::int sc::double))
 (sc::decl (csym::isnan) (sc::fn sc::int sc::double))
 (sc::decl (csym::lgamma) (sc::fn sc::double sc::double))
 (sc::decl (csym::log1p) (sc::fn sc::double sc::double))
 (sc::decl (csym::logb) (sc::fn sc::double sc::double))
 (sc::decl (csym::nextafter) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::remainder) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::rint) (sc::fn sc::double sc::double))
 (sc::decl (csym::j0) (sc::fn sc::double sc::double))
 (sc::decl (csym::j1) (sc::fn sc::double sc::double))
 (sc::decl (csym::jn) (sc::fn sc::double sc::int sc::double))
 (sc::decl (csym::scalb) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::y0) (sc::fn sc::double sc::double))
 (sc::decl (csym::y1) (sc::fn sc::double sc::double))
 (sc::decl (csym::yn) (sc::fn sc::double sc::int sc::double))
 (sc::decl (csym::gamma) (sc::fn sc::double sc::double))
 (sc::decl (csym::copysign) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::fdim) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::fmax) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::fmin) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::nearbyint) (sc::fn sc::double sc::double))
 (sc::decl (csym::round) (sc::fn sc::double sc::double))
 (sc::decl (csym::scalbln) (sc::fn sc::double sc::double sc::long))
 (sc::decl (csym::scalbn) (sc::fn sc::double sc::double sc::int))
 (sc::decl (csym::tgamma) (sc::fn sc::double sc::double))
 (sc::decl (csym::trunc) (sc::fn sc::double sc::double))
 (sc::%line 306 "posix-out/math.h")
 (sc::decl (csym::drem) (sc::fn sc::double sc::double sc::double))
 (sc::decl (csym::finite) (sc::fn sc::int sc::double))
 (sc::decl (csym::isnanf) (sc::fn sc::int sc::float))
 (sc::%line 314 "posix-out/math.h")
 (sc::decl (csym::gamma_r) (sc::fn sc::double sc::double (sc::ptr sc::int)))
 (sc::decl (csym::lgamma_r) (sc::fn sc::double sc::double (sc::ptr sc::int)))
 (sc::%line 320 "posix-out/math.h")
 (sc::decl (csym::significand) (sc::fn sc::double sc::double))
 (sc::decl (csym::matherr)
  (sc::fn sc::int (sc::ptr (sc::struct csym::exception))))
 (sc::decl (csym::acosf) (sc::fn sc::float sc::float))
 (sc::decl (csym::asinf) (sc::fn sc::float sc::float))
 (sc::decl (csym::atanf) (sc::fn sc::float sc::float))
 (sc::decl (csym::atan2f) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::cosf) (sc::fn sc::float sc::float))
 (sc::decl (csym::sinf) (sc::fn sc::float sc::float))
 (sc::decl (csym::tanf) (sc::fn sc::float sc::float))
 (sc::decl (csym::coshf) (sc::fn sc::float sc::float))
 (sc::decl (csym::sinhf) (sc::fn sc::float sc::float))
 (sc::decl (csym::tanhf) (sc::fn sc::float sc::float))
 (sc::decl (csym::expf) (sc::fn sc::float sc::float))
 (sc::decl (csym::expm1f) (sc::fn sc::float sc::float))
 (sc::decl (csym::frexpf) (sc::fn sc::float sc::float (sc::ptr sc::int)))
 (sc::decl (csym::ilogbf) (sc::fn sc::int sc::float))
 (sc::decl (csym::ldexpf) (sc::fn sc::float sc::float sc::int))
 (sc::decl (csym::log10f) (sc::fn sc::float sc::float))
 (sc::decl (csym::log1pf) (sc::fn sc::float sc::float))
 (sc::decl (csym::logf) (sc::fn sc::float sc::float))
 (sc::decl (csym::modff) (sc::fn sc::float sc::float (sc::ptr sc::float)))
 (sc::decl (csym::powf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::sqrtf) (sc::fn sc::float sc::float))
 (sc::decl (csym::ceilf) (sc::fn sc::float sc::float))
 (sc::decl (csym::fabsf) (sc::fn sc::float sc::float))
 (sc::decl (csym::floorf) (sc::fn sc::float sc::float))
 (sc::decl (csym::fmodf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::roundf) (sc::fn sc::float sc::float))
 (sc::decl (csym::erff) (sc::fn sc::float sc::float))
 (sc::decl (csym::erfcf) (sc::fn sc::float sc::float))
 (sc::decl (csym::hypotf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::lgammaf) (sc::fn sc::float sc::float))
 (sc::decl (csym::acoshf) (sc::fn sc::float sc::float))
 (sc::decl (csym::asinhf) (sc::fn sc::float sc::float))
 (sc::decl (csym::atanhf) (sc::fn sc::float sc::float))
 (sc::decl (csym::cbrtf) (sc::fn sc::float sc::float))
 (sc::decl (csym::logbf) (sc::fn sc::float sc::float))
 (sc::decl (csym::copysignf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::nearbyintf) (sc::fn sc::float sc::float))
 (sc::decl (csym::nextafterf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::remainderf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::rintf) (sc::fn sc::float sc::float))
 (sc::decl (csym::scalblnf) (sc::fn sc::float sc::float sc::long))
 (sc::decl (csym::scalbnf) (sc::fn sc::float sc::float sc::int))
 (sc::decl (csym::truncf) (sc::fn sc::float sc::float))
 (sc::decl (csym::fdimf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::fmaxf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::fminf) (sc::fn sc::float sc::float sc::float))
 (sc::%line 388 "posix-out/math.h")
 (sc::decl (csym::dremf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::finitef) (sc::fn sc::int sc::float))
 (sc::decl (csym::gammaf) (sc::fn sc::float sc::float))
 (sc::decl (csym::j0f) (sc::fn sc::float sc::float))
 (sc::decl (csym::j1f) (sc::fn sc::float sc::float))
 (sc::decl (csym::jnf) (sc::fn sc::float sc::int sc::float))
 (sc::decl (csym::scalbf) (sc::fn sc::float sc::float sc::float))
 (sc::decl (csym::y0f) (sc::fn sc::float sc::float))
 (sc::decl (csym::y1f) (sc::fn sc::float sc::float))
 (sc::decl (csym::ynf) (sc::fn sc::float sc::int sc::float))
 (sc::%line 404 "posix-out/math.h")
 (sc::decl (csym::gammaf_r) (sc::fn sc::float sc::float (sc::ptr sc::int)))
 (sc::decl (csym::lgammaf_r) (sc::fn sc::float sc::float (sc::ptr sc::int)))
 (sc::%line 410 "posix-out/math.h")
 (sc::decl (csym::significandf) (sc::fn sc::float sc::float))
 (sc::%line 428 "posix-out/math.h")
 (sc::decl (csym::copysignl)
  (sc::fn sc::long-double sc::long-double sc::long-double))
 (sc::%line 438 "posix-out/math.h")
 (sc::decl (csym::fabsl) (sc::fn sc::long-double sc::long-double))
 (sc::decl (csym::fdiml)
  (sc::fn sc::long-double sc::long-double sc::long-double))
 (sc::%line 444 "posix-out/math.h")
 (sc::decl (csym::fmaxl)
  (sc::fn sc::long-double sc::long-double sc::long-double))
 (sc::decl (csym::fminl)
  (sc::fn sc::long-double sc::long-double sc::long-double))
 (sc::%line 486 "posix-out/math.h") (sc::%line 1 "posix-out/mman.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 164 "posix-out/mman.h")
 (sc::%line 170 "posix-out/mman.h")
 (sc::decl (csym::madvise)
  (sc::fn sc::int (sc::ptr sc::void) csym::size_t sc::int))
 (sc::decl (csym::mincore)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) csym::size_t
   (sc::ptr sc::char)))
 (sc::decl (csym::minherit)
  (sc::fn sc::int (sc::ptr sc::void) csym::size_t sc::int))
 (sc::decl (csym::mlock)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) csym::size_t))
 (sc::%line 179 "posix-out/mman.h")
 (sc::decl (csym::mprotect)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) csym::size_t sc::int))
 (sc::decl (csym::msync)
  (sc::fn sc::int (sc::ptr sc::void) csym::size_t sc::int))
 (sc::decl (csym::munlock)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) csym::size_t))
 (sc::decl (csym::munmap) (sc::fn sc::int (sc::ptr sc::void) csym::size_t))
 (sc::decl (csym::posix_madvise)
  (sc::fn sc::int (sc::ptr sc::void) csym::size_t sc::int))
 (sc::decl (csym::mlockall) (sc::fn sc::int sc::int))
 (sc::decl (csym::munlockall) (sc::fn sc::int sc::void))
 (sc::decl (csym::shm_open)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int csym::mode_t))
 (sc::decl (csym::shm_unlink) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::%line 1 "posix-out/monetary.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 45 "posix-out/monetary.h")
 (sc::decl (csym::strfmon)
  (sc::fn csym::ssize_t (sc::ptr sc::char) csym::size_t
   (sc::ptr (sc::const sc::char)) sc::va-arg))
 (sc::%line 1 "posix-out/msg.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/ipc.h") (sc::%line 37 "posix-out/msg.h")
 (sc::deftype csym::msglen_t sc::unsigned-long)
 (sc::deftype csym::msgqnum_t sc::unsigned-long)
 (sc::%line 66 "posix-out/msg.h")
 (sc::def (sc::struct csym::msqid_ds)
  (sc::decl csym::msg_perm (sc::struct csym::ipc_perm))
  (sc::decl csym::msg_first (sc::ptr (sc::struct csym::msg)))
  (sc::decl csym::msg_last (sc::ptr (sc::struct csym::msg)))
  (sc::decl csym::msg_cbytes csym::msglen_t)
  (sc::decl csym::msg_qnum csym::msgqnum_t)
  (sc::decl csym::msg_qbytes csym::msglen_t)
  (sc::decl csym::msg_lspid sc::long) (sc::decl csym::msg_lrpid sc::long)
  (sc::decl csym::msg_stime sc::double) (sc::decl csym::msg_pad1 sc::long)
  (sc::decl csym::msg_rtime sc::double) (sc::decl csym::msg_pad2 sc::long)
  (sc::decl csym::msg_ctime sc::double) (sc::decl csym::msg_pad3 sc::long)
  (sc::decl csym::msg_pad4 (sc::array sc::long 4)))
 (sc::%line 95 "posix-out/msg.h")
 (sc::def (sc::struct csym::mymsg) (sc::decl csym::mtype sc::long)
  (sc::decl csym::mtext (sc::array sc::char 1)))
 (sc::%line 125 "posix-out/msg.h")
 (sc::decl (csym::msgctl)
  (sc::fn sc::int sc::int sc::int (sc::ptr (sc::struct csym::msqid_ds))))
 (sc::decl (csym::msgget) (sc::fn sc::int csym::key_t sc::int))
 (sc::decl (csym::msgrcv)
  (sc::fn sc::int sc::int (sc::ptr sc::void) csym::size_t sc::long sc::int))
 (sc::decl (csym::msgsnd)
  (sc::fn sc::int sc::int (sc::ptr (sc::const sc::void)) csym::size_t sc::int))
 (sc::decl (csym::msgsys) (sc::fn sc::int sc::int sc::va-arg))
 (sc::%line 1 "posix-out/ndbm.h") (sc::%line 1 "/usr/include/db.h")
 (sc::%line 1 "/usr/include/sys/types.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 1 "/usr/include/limits.h")
 (sc::%line 50 "/usr/include/db.h") (sc::deftype csym::pgno_t csym::u_int32_t)
 (sc::deftype csym::indx_t csym::u_int16_t)
 (sc::deftype csym::recno_t csym::u_int32_t)
 (sc::def (sc::struct csym::unnamed12) (sc::decl csym::data (sc::ptr sc::void))
  (sc::decl csym::size csym::size_t))
 (sc::deftype csym::|@dbt| (sc::struct csym::unnamed12))
 (sc::%line 75 "/usr/include/db.h")
 (sc::def (sc::enum csym::unnamed13)
  (csym::|@db_btree| csym::|@db_hash| csym::|@db_recno|))
 (sc::deftype csym::|@dbtype| (sc::enum csym::unnamed13))
 (sc::%line 101 "/usr/include/db.h")
 (sc::def (sc::struct csym::__db) (sc::decl csym::type csym::|@dbtype|)
  (sc::decl csym::close
   (sc::ptr (sc::fn sc::int (sc::ptr (sc::struct csym::__db)))))
  (sc::decl csym::del
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::__db)))
     (sc::ptr (sc::const csym::|@dbt|)) csym::u_int)))
  (sc::decl csym::get
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::__db)))
     (sc::ptr (sc::const csym::|@dbt|)) (sc::ptr csym::|@dbt|) csym::u_int)))
  (sc::decl csym::put
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::__db)))
     (sc::ptr csym::|@dbt|) (sc::ptr (sc::const csym::|@dbt|)) csym::u_int)))
  (sc::decl csym::seq
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::__db)))
     (sc::ptr csym::|@dbt|) (sc::ptr csym::|@dbt|) csym::u_int)))
  (sc::decl csym::sync
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::__db)))
     csym::u_int)))
  (sc::decl csym::internal (sc::ptr sc::void))
  (sc::decl csym::fd
   (sc::ptr (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::__db)))))))
 (sc::deftype csym::|@db| (sc::struct csym::__db))
 (sc::def (sc::struct csym::unnamed14) (sc::decl csym::flags csym::u_long)
  (sc::decl csym::cachesize csym::u_int) (sc::decl csym::maxkeypage sc::int)
  (sc::decl csym::minkeypage sc::int) (sc::decl csym::psize csym::u_int)
  (sc::decl csym::compare
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const csym::|@dbt|))
     (sc::ptr (sc::const csym::|@dbt|)))))
  (sc::decl csym::prefix
   (sc::ptr
    (sc::fn csym::size_t (sc::ptr (sc::const csym::|@dbt|))
     (sc::ptr (sc::const csym::|@dbt|)))))
  (sc::decl csym::lorder sc::int))
 (sc::deftype csym::|@btreeinfo| (sc::struct csym::unnamed14))
 (sc::def (sc::struct csym::unnamed15) (sc::decl csym::bsize csym::u_int)
  (sc::decl csym::ffactor csym::u_int) (sc::decl csym::nelem csym::u_int)
  (sc::decl csym::cachesize csym::u_int)
  (sc::decl csym::hash
   (sc::ptr
    (sc::fn csym::u_int32_t (sc::ptr (sc::const sc::void)) csym::size_t)))
  (sc::decl csym::lorder sc::int))
 (sc::deftype csym::|@hashinfo| (sc::struct csym::unnamed15))
 (sc::def (sc::struct csym::unnamed16) (sc::decl csym::flags csym::u_long)
  (sc::decl csym::cachesize csym::u_int) (sc::decl csym::psize csym::u_int)
  (sc::decl csym::lorder sc::int) (sc::decl csym::reclen csym::size_t)
  (sc::decl csym::bval csym::u_char)
  (sc::decl csym::bfname (sc::ptr sc::char)))
 (sc::deftype csym::|@recnoinfo| (sc::struct csym::unnamed16))
 (sc::%line 209 "/usr/include/db.h")
 (sc::decl (csym::dbopen)
  (sc::fn (sc::ptr csym::|@db|) (sc::ptr (sc::const sc::char)) sc::int sc::int
   csym::|@dbtype| (sc::ptr (sc::const sc::void))))
 (sc::%line 218 "/usr/include/db.h") (sc::%line 58 "posix-out/ndbm.h")
 (sc::def (sc::struct csym::unnamed17) (sc::decl csym::dptr (sc::ptr sc::char))
  (sc::decl csym::dsize sc::int))
 (sc::deftype csym::datum (sc::struct csym::unnamed17))
 (sc::deftype csym::|@dbm| csym::|@db|)
 (sc::decl (csym::dbm_clearerr) (sc::fn sc::int (sc::ptr csym::|@dbm|)))
 (sc::decl (csym::dbm_close) (sc::fn sc::void (sc::ptr csym::|@dbm|)))
 (sc::decl (csym::dbm_delete)
  (sc::fn sc::int (sc::ptr csym::|@dbm|) csym::datum))
 (sc::decl (csym::dbm_error) (sc::fn sc::int (sc::ptr csym::|@dbm|)))
 (sc::decl (csym::dbm_fetch)
  (sc::fn csym::datum (sc::ptr csym::|@dbm|) csym::datum))
 (sc::decl (csym::dbm_firstkey) (sc::fn csym::datum (sc::ptr csym::|@dbm|)))
 (sc::decl (csym::dbm_forder)
  (sc::fn sc::long (sc::ptr csym::|@dbm|) csym::datum))
 (sc::decl (csym::dbm_nextkey) (sc::fn csym::datum (sc::ptr csym::|@dbm|)))
 (sc::decl (csym::dbm_open)
  (sc::fn (sc::ptr csym::|@dbm|) (sc::ptr (sc::const sc::char)) sc::int
   sc::int))
 (sc::decl (csym::dbm_store)
  (sc::fn sc::int (sc::ptr csym::|@dbm|) csym::datum csym::datum sc::int))
 (sc::decl (csym::dbm_dirfno) (sc::fn sc::int (sc::ptr csym::|@dbm|)))
 (sc::%line 1 "posix-out/netdb.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 92 "posix-out/netdb.h")
 (sc::def (sc::struct csym::hostent) (sc::decl csym::h_name (sc::ptr sc::char))
  (sc::decl csym::h_aliases (sc::ptr (sc::ptr sc::char)))
  (sc::decl csym::h_addrtype sc::int) (sc::decl csym::h_length sc::int)
  (sc::decl csym::h_addr_list (sc::ptr (sc::ptr sc::char))))
 (sc::%line 105 "posix-out/netdb.h")
 (sc::def (sc::struct csym::netent) (sc::decl csym::n_name (sc::ptr sc::char))
  (sc::decl csym::n_aliases (sc::ptr (sc::ptr sc::char)))
  (sc::decl csym::n_addrtype sc::int) (sc::decl csym::n_net sc::unsigned-long))
 (sc::def (sc::struct csym::servent) (sc::decl csym::s_name (sc::ptr sc::char))
  (sc::decl csym::s_aliases (sc::ptr (sc::ptr sc::char)))
  (sc::decl csym::s_port sc::int) (sc::decl csym::s_proto (sc::ptr sc::char)))
 (sc::def (sc::struct csym::protoent)
  (sc::decl csym::p_name (sc::ptr sc::char))
  (sc::decl csym::p_aliases (sc::ptr (sc::ptr sc::char)))
  (sc::decl csym::p_proto sc::int))
 (sc::def (sc::struct csym::addrinfo) (sc::decl csym::ai_flags sc::int)
  (sc::decl csym::ai_family sc::int) (sc::decl csym::ai_socktype sc::int)
  (sc::decl csym::ai_protocol sc::int) (sc::decl csym::ai_addrlen csym::size_t)
  (sc::decl csym::ai_canonname (sc::ptr sc::char))
  (sc::decl csym::ai_addr (sc::ptr (sc::struct csym::sockaddr)))
  (sc::decl csym::ai_next (sc::ptr (sc::struct csym::addrinfo))))
 (sc::%line 213 "posix-out/netdb.h")
 (sc::decl (csym::endhostent) (sc::fn sc::void sc::void))
 (sc::decl (csym::endnetent) (sc::fn sc::void sc::void))
 (sc::decl (csym::endnetgrent) (sc::fn sc::void sc::void))
 (sc::decl (csym::endprotoent) (sc::fn sc::void sc::void))
 (sc::decl (csym::endservent) (sc::fn sc::void sc::void))
 (sc::decl (csym::freehostent)
  (sc::fn sc::void (sc::ptr (sc::struct csym::hostent))))
 (sc::decl (csym::gethostbyaddr)
  (sc::fn (sc::ptr (sc::struct csym::hostent)) (sc::ptr (sc::const sc::char))
   sc::int sc::int))
 (sc::decl (csym::gethostbyname)
  (sc::fn (sc::ptr (sc::struct csym::hostent)) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::gethostbyname2)
  (sc::fn (sc::ptr (sc::struct csym::hostent)) (sc::ptr (sc::const sc::char))
   sc::int))
 (sc::decl (csym::gethostent)
  (sc::fn (sc::ptr (sc::struct csym::hostent)) sc::void))
 (sc::decl (csym::getipnodebyaddr)
  (sc::fn (sc::ptr (sc::struct csym::hostent)) (sc::ptr (sc::const sc::void))
   csym::size_t sc::int (sc::ptr sc::int)))
 (sc::decl (csym::getipnodebyname)
  (sc::fn (sc::ptr (sc::struct csym::hostent)) (sc::ptr (sc::const sc::char))
   sc::int sc::int (sc::ptr sc::int)))
 (sc::decl (csym::getnetbyaddr)
  (sc::fn (sc::ptr (sc::struct csym::netent)) sc::unsigned-long sc::int))
 (sc::decl (csym::getnetbyname)
  (sc::fn (sc::ptr (sc::struct csym::netent)) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::getnetent)
  (sc::fn (sc::ptr (sc::struct csym::netent)) sc::void))
 (sc::decl (csym::getnetgrent)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) (sc::ptr (sc::ptr sc::char))
   (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::getprotobyname)
  (sc::fn (sc::ptr (sc::struct csym::protoent))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::getprotobynumber)
  (sc::fn (sc::ptr (sc::struct csym::protoent)) sc::int))
 (sc::decl (csym::getprotoent)
  (sc::fn (sc::ptr (sc::struct csym::protoent)) sc::void))
 (sc::decl (csym::getservbyname)
  (sc::fn (sc::ptr (sc::struct csym::servent)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::getservbyport)
  (sc::fn (sc::ptr (sc::struct csym::servent)) sc::int
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::getservent)
  (sc::fn (sc::ptr (sc::struct csym::servent)) sc::void))
 (sc::decl (csym::herror) (sc::fn sc::void (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::hstrerror) (sc::fn (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::innetgr)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::sethostent) (sc::fn sc::void sc::int))
 (sc::decl (csym::setnetent) (sc::fn sc::void sc::int))
 (sc::decl (csym::setprotoent) (sc::fn sc::void sc::int))
 (sc::decl (csym::getaddrinfo)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::struct csym::addrinfo)))
   (sc::ptr (sc::ptr (sc::struct csym::addrinfo)))))
 (sc::decl (csym::getnameinfo)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::sockaddr)))
   csym::socklen_t (sc::ptr sc::char) csym::size_t (sc::ptr sc::char)
   csym::size_t sc::int))
 (sc::decl (csym::freeaddrinfo)
  (sc::fn sc::void (sc::ptr (sc::struct csym::addrinfo))))
 (sc::decl (csym::gai_strerror) (sc::fn (sc::ptr sc::char) sc::int))
 (sc::decl (csym::setnetgrent)
  (sc::fn sc::void (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::setservent) (sc::fn sc::void sc::int))
 (sc::%line 257 "posix-out/netdb.h")
 (sc::decl (csym::__h_error) (sc::fn (sc::ptr sc::int) sc::void))
 (sc::decl (csym::_sethosthtent) (sc::fn sc::void sc::int))
 (sc::decl (csym::_endhosthtent) (sc::fn sc::void sc::void))
 (sc::decl (csym::_sethostdnsent) (sc::fn sc::void sc::int))
 (sc::decl (csym::_endhostdnsent) (sc::fn sc::void sc::void))
 (sc::decl (csym::_setnethtent) (sc::fn sc::void sc::int))
 (sc::decl (csym::_endnethtent) (sc::fn sc::void sc::void))
 (sc::decl (csym::_setnetdnsent) (sc::fn sc::void sc::int))
 (sc::decl (csym::_endnetdnsent) (sc::fn sc::void sc::void))
 (sc::decl (csym::_gethostbynisname)
  (sc::fn (sc::ptr (sc::struct csym::hostent)) (sc::ptr (sc::const sc::char))
   sc::int))
 (sc::decl (csym::_gethostbynisaddr)
  (sc::fn (sc::ptr (sc::struct csym::hostent)) (sc::ptr (sc::const sc::char))
   sc::int sc::int))
 (sc::decl (csym::_map_v4v6_address)
  (sc::fn sc::void (sc::ptr (sc::const sc::char)) (sc::ptr sc::char)))
 (sc::decl (csym::_map_v4v6_hostent)
  (sc::fn sc::void (sc::ptr (sc::struct csym::hostent))
   (sc::ptr (sc::ptr sc::char)) (sc::ptr (sc::ptr sc::char))))
 (sc::%line 1 "posix-out/nl_types.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 43 "posix-out/nl_types.h")
 (sc::deftype csym::nl_catd (sc::ptr sc::void))
 (sc::%line 50 "posix-out/nl_types.h")
 (sc::decl (csym::catopen)
  (sc::fn csym::nl_catd (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::catgets)
  (sc::fn (sc::ptr sc::char) csym::nl_catd sc::int sc::int
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::catclose) (sc::fn sc::int csym::nl_catd))
 (sc::%line 1 "posix-out/poll.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 40 "posix-out/poll.h") (sc::deftype csym::nfds_t sc::unsigned-int)
 (sc::%line 45 "posix-out/poll.h")
 (sc::def (sc::struct csym::pollfd) (sc::decl csym::fd sc::int)
  (sc::decl csym::events sc::short) (sc::decl csym::revents sc::short))
 (sc::%line 98 "posix-out/poll.h")
 (sc::decl (csym::poll csym::_pfd csym::_nfds csym::_timeout)
  (sc::fn sc::int (sc::array (sc::struct csym::pollfd)) csym::nfds_t sc::int))
 (sc::%line 1 "posix-out/pthread.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/types.h")
 (sc::%line 1 "/usr/include/sys/time.h")
 (sc::%line 1 "/usr/include/sys/signal.h")
 (sc::%line 1 "/usr/include/limits.h") (sc::%line 1 "/usr/include/sched.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 55 "/usr/include/sched.h")
 (sc::def (sc::struct csym::sched_param)
  (sc::decl csym::sched_priority sc::int))
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 62 "/usr/include/sched.h")
 (sc::decl (csym::sched_get_priority_max) (sc::fn sc::int sc::int))
 (sc::decl (csym::sched_get_priority_min) (sc::fn sc::int sc::int))
 (sc::decl (csym::sched_getparam)
  (sc::fn sc::int sc::long (sc::ptr (sc::struct csym::sched_param))))
 (sc::decl (csym::sched_getscheduler) (sc::fn sc::int sc::long))
 (sc::decl (csym::sched_rr_get_interval)
  (sc::fn sc::int sc::long (sc::ptr (sc::struct csym::timespec))))
 (sc::decl (csym::sched_setparam)
  (sc::fn sc::int sc::long
   (sc::ptr (sc::const (sc::struct csym::sched_param)))))
 (sc::decl (csym::sched_setscheduler)
  (sc::fn sc::int sc::long sc::int
   (sc::ptr (sc::const (sc::struct csym::sched_param)))))
 (sc::decl (csym::sched_yield) (sc::fn sc::int sc::void))
 (sc::%line 90 "posix-out/pthread.h") (sc::%line 110 "posix-out/pthread.h")
 (sc::deftype csym::pthread_t (sc::ptr (sc::struct csym::pthread)))
 (sc::deftype csym::pthread_attr_t (sc::ptr (sc::struct csym::pthread_attr)))
 (sc::deftype csym::pthread_mutex_t (sc::ptr (sc::struct csym::pthread_mutex)))
 (sc::deftype csym::pthread_mutexattr_t
  (sc::ptr (sc::struct csym::pthread_mutex_attr)))
 (sc::deftype csym::pthread_cond_t (sc::ptr (sc::struct csym::pthread_cond)))
 (sc::deftype csym::pthread_condattr_t
  (sc::ptr (sc::struct csym::pthread_cond_attr)))
 (sc::deftype csym::pthread_key_t sc::int)
 (sc::deftype csym::pthread_once_t (sc::struct csym::pthread_once))
 (sc::deftype csym::pthread_rwlock_t
  (sc::ptr (sc::struct csym::pthread_rwlock)))
 (sc::deftype csym::pthread_rwlockattr_t
  (sc::ptr (sc::struct csym::pthread_rwlockattr)))
 (sc::deftype csym::pthread_barrier_t
  (sc::ptr (sc::struct csym::pthread_barrier)))
 (sc::deftype csym::pthread_barrierattr_t
  (sc::ptr (sc::struct csym::pthread_barrierattr)))
 (sc::deftype csym::pthread_spinlock_t
  (sc::ptr (sc::struct csym::pthread_spinlock)))
 (sc::%line 130 "posix-out/pthread.h")
 (sc::deftype csym::pthread_addr_t (sc::ptr sc::void))
 (sc::deftype csym::pthread_startroutine_t
  (sc::ptr (sc::fn (sc::ptr sc::void) (sc::ptr sc::void))))
 (sc::%line 136 "posix-out/pthread.h")
 (sc::def (sc::struct csym::pthread_once) (sc::decl csym::state sc::int)
  (sc::decl csym::mutex csym::pthread_mutex_t))
 (sc::%line 184 "posix-out/pthread.h")
 (sc::def (sc::enum csym::pthread_mutextype)
  ((csym::|@pthread_mutex_errorcheck| 1) (csym::|@pthread_mutex_recursive| 2)
   (csym::|@pthread_mutex_normal| 3) csym::|@mutex_type_max|))
 (sc::%line 198 "posix-out/pthread.h")
 (sc::decl (csym::pthread_atfork csym::prepare csym::parent csym::child)
  (sc::fn sc::int (sc::ptr (sc::fn sc::void sc::void))
   (sc::ptr (sc::fn sc::void sc::void)) (sc::ptr (sc::fn sc::void sc::void))))
 (sc::decl (csym::pthread_attr_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t)))
 (sc::decl (csym::pthread_attr_getstack)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr (sc::ptr sc::void)) (sc::ptr csym::size_t)))
 (sc::decl (csym::pthread_attr_getstacksize)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr csym::size_t)))
 (sc::decl (csym::pthread_attr_getguardsize)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr csym::size_t)))
 (sc::decl (csym::pthread_attr_getstackaddr)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr (sc::ptr sc::void))))
 (sc::decl (csym::pthread_attr_getdetachstate)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr sc::int)))
 (sc::decl (csym::pthread_attr_init)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t)))
 (sc::decl (csym::pthread_attr_setstacksize)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t) csym::size_t))
 (sc::decl (csym::pthread_attr_setguardsize)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t) csym::size_t))
 (sc::decl (csym::pthread_attr_setstack)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t) (sc::ptr sc::void)
   csym::size_t))
 (sc::decl (csym::pthread_attr_setstackaddr)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t) (sc::ptr sc::void)))
 (sc::decl (csym::pthread_attr_setdetachstate)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t) sc::int))
 (sc::decl (csym::pthread_barrier_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_barrier_t)))
 (sc::decl (csym::pthread_barrier_init)
  (sc::fn sc::int (sc::ptr csym::pthread_barrier_t)
   (sc::ptr (sc::const csym::pthread_barrierattr_t)) sc::unsigned-int))
 (sc::decl (csym::pthread_barrier_wait)
  (sc::fn sc::int (sc::ptr csym::pthread_barrier_t)))
 (sc::decl (csym::pthread_barrierattr_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_barrierattr_t)))
 (sc::decl (csym::pthread_barrierattr_getpshared)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_barrierattr_t))
   (sc::ptr sc::int)))
 (sc::decl (csym::pthread_barrierattr_init)
  (sc::fn sc::int (sc::ptr csym::pthread_barrierattr_t)))
 (sc::decl (csym::pthread_barrierattr_setpshared)
  (sc::fn sc::int (sc::ptr csym::pthread_barrierattr_t) sc::int))
 (sc::decl (csym::pthread_cleanup_pop) (sc::fn sc::void sc::int))
 (sc::decl (csym::pthread_cleanup_push)
  (sc::fn sc::void (sc::ptr (sc::fn sc::void (sc::ptr sc::void)))
   (sc::ptr sc::void)))
 (sc::decl (csym::pthread_condattr_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_condattr_t)))
 (sc::decl (csym::pthread_condattr_init)
  (sc::fn sc::int (sc::ptr csym::pthread_condattr_t)))
 (sc::decl (csym::pthread_cond_broadcast)
  (sc::fn sc::int (sc::ptr csym::pthread_cond_t)))
 (sc::decl (csym::pthread_cond_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_cond_t)))
 (sc::decl (csym::pthread_cond_init)
  (sc::fn sc::int (sc::ptr csym::pthread_cond_t)
   (sc::ptr (sc::const csym::pthread_condattr_t))))
 (sc::decl (csym::pthread_cond_signal)
  (sc::fn sc::int (sc::ptr csym::pthread_cond_t)))
 (sc::decl (csym::pthread_cond_timedwait)
  (sc::fn sc::int (sc::ptr csym::pthread_cond_t)
   (sc::ptr csym::pthread_mutex_t)
   (sc::ptr (sc::const (sc::struct csym::timespec)))))
 (sc::decl (csym::pthread_cond_wait)
  (sc::fn sc::int (sc::ptr csym::pthread_cond_t)
   (sc::ptr csym::pthread_mutex_t)))
 (sc::decl (csym::pthread_create)
  (sc::fn sc::int (sc::ptr csym::pthread_t)
   (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr (sc::fn (sc::ptr sc::void) (sc::ptr sc::void)))
   (sc::ptr sc::void)))
 (sc::decl (csym::pthread_detach) (sc::fn sc::int csym::pthread_t))
 (sc::decl (csym::pthread_equal)
  (sc::fn sc::int csym::pthread_t csym::pthread_t))
 (sc::decl (csym::pthread_exit) (sc::fn sc::void (sc::ptr sc::void)))
 (sc::decl (csym::pthread_getspecific)
  (sc::fn (sc::ptr sc::void) csym::pthread_key_t))
 (sc::decl (csym::pthread_join)
  (sc::fn sc::int csym::pthread_t (sc::ptr (sc::ptr sc::void))))
 (sc::decl (csym::pthread_key_create)
  (sc::fn sc::int (sc::ptr csym::pthread_key_t)
   (sc::ptr (sc::fn sc::void (sc::ptr sc::void)))))
 (sc::decl (csym::pthread_key_delete) (sc::fn sc::int csym::pthread_key_t))
 (sc::decl (csym::pthread_kill) (sc::fn sc::int csym::pthread_t sc::int))
 (sc::decl (csym::pthread_mutexattr_init)
  (sc::fn sc::int (sc::ptr csym::pthread_mutexattr_t)))
 (sc::decl (csym::pthread_mutexattr_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_mutexattr_t)))
 (sc::decl (csym::pthread_mutexattr_gettype)
  (sc::fn sc::int (sc::ptr csym::pthread_mutexattr_t) (sc::ptr sc::int)))
 (sc::decl (csym::pthread_mutexattr_settype)
  (sc::fn sc::int (sc::ptr csym::pthread_mutexattr_t) sc::int))
 (sc::decl (csym::pthread_mutex_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_mutex_t)))
 (sc::decl (csym::pthread_mutex_init)
  (sc::fn sc::int (sc::ptr csym::pthread_mutex_t)
   (sc::ptr (sc::const csym::pthread_mutexattr_t))))
 (sc::decl (csym::pthread_mutex_lock)
  (sc::fn sc::int (sc::ptr csym::pthread_mutex_t)))
 (sc::decl (csym::pthread_mutex_trylock)
  (sc::fn sc::int (sc::ptr csym::pthread_mutex_t)))
 (sc::decl (csym::pthread_mutex_timedlock)
  (sc::fn sc::int (sc::ptr csym::pthread_mutex_t)
   (sc::ptr (sc::const (sc::struct csym::timespec)))))
 (sc::decl (csym::pthread_mutex_unlock)
  (sc::fn sc::int (sc::ptr csym::pthread_mutex_t)))
 (sc::decl (csym::pthread_once)
  (sc::fn sc::int (sc::ptr csym::pthread_once_t)
   (sc::ptr (sc::fn sc::void sc::void))))
 (sc::decl (csym::pthread_rwlock_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)))
 (sc::decl (csym::pthread_rwlock_init)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)
   (sc::ptr (sc::const csym::pthread_rwlockattr_t))))
 (sc::decl (csym::pthread_rwlock_rdlock)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)))
 (sc::decl (csym::pthread_rwlock_timedrdlock)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)
   (sc::ptr (sc::const (sc::struct csym::timespec)))))
 (sc::decl (csym::pthread_rwlock_timedrwlock)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)
   (sc::ptr (sc::const (sc::struct csym::timespec)))))
 (sc::decl (csym::pthread_rwlock_tryrdlock)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)))
 (sc::decl (csym::pthread_rwlock_trywrlock)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)))
 (sc::decl (csym::pthread_rwlock_unlock)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)))
 (sc::decl (csym::pthread_rwlock_wrlock)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlock_t)))
 (sc::decl (csym::pthread_rwlockattr_init)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlockattr_t)))
 (sc::decl (csym::pthread_rwlockattr_getpshared)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_rwlockattr_t))
   (sc::ptr sc::int)))
 (sc::decl (csym::pthread_rwlockattr_setpshared)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlockattr_t) sc::int))
 (sc::decl (csym::pthread_rwlockattr_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_rwlockattr_t)))
 (sc::decl (csym::pthread_self) (sc::fn csym::pthread_t sc::void))
 (sc::decl (csym::pthread_setspecific)
  (sc::fn sc::int csym::pthread_key_t (sc::ptr (sc::const sc::void))))
 (sc::decl (csym::pthread_sigmask)
  (sc::fn sc::int sc::int (sc::ptr (sc::const csym::sigset_t))
   (sc::ptr csym::sigset_t)))
 (sc::decl (csym::pthread_spin_init)
  (sc::fn sc::int (sc::ptr csym::pthread_spinlock_t) sc::int))
 (sc::decl (csym::pthread_spin_destroy)
  (sc::fn sc::int (sc::ptr csym::pthread_spinlock_t)))
 (sc::decl (csym::pthread_spin_lock)
  (sc::fn sc::int (sc::ptr csym::pthread_spinlock_t)))
 (sc::decl (csym::pthread_spin_trylock)
  (sc::fn sc::int (sc::ptr csym::pthread_spinlock_t)))
 (sc::decl (csym::pthread_spin_unlock)
  (sc::fn sc::int (sc::ptr csym::pthread_spinlock_t)))
 (sc::decl (csym::pthread_cancel) (sc::fn sc::int csym::pthread_t))
 (sc::decl (csym::pthread_setcancelstate)
  (sc::fn sc::int sc::int (sc::ptr sc::int)))
 (sc::decl (csym::pthread_setcanceltype)
  (sc::fn sc::int sc::int (sc::ptr sc::int)))
 (sc::decl (csym::pthread_testcancel) (sc::fn sc::void sc::void))
 (sc::decl (csym::pthread_getprio) (sc::fn sc::int csym::pthread_t))
 (sc::decl (csym::pthread_setprio) (sc::fn sc::int csym::pthread_t sc::int))
 (sc::decl (csym::pthread_yield) (sc::fn sc::void sc::void))
 (sc::decl (csym::pthread_mutexattr_getprioceiling)
  (sc::fn sc::int (sc::ptr csym::pthread_mutexattr_t) (sc::ptr sc::int)))
 (sc::decl (csym::pthread_mutexattr_setprioceiling)
  (sc::fn sc::int (sc::ptr csym::pthread_mutexattr_t) sc::int))
 (sc::decl (csym::pthread_mutex_getprioceiling)
  (sc::fn sc::int (sc::ptr csym::pthread_mutex_t) (sc::ptr sc::int)))
 (sc::decl (csym::pthread_mutex_setprioceiling)
  (sc::fn sc::int (sc::ptr csym::pthread_mutex_t) sc::int (sc::ptr sc::int)))
 (sc::decl (csym::pthread_mutexattr_getprotocol)
  (sc::fn sc::int (sc::ptr csym::pthread_mutexattr_t) (sc::ptr sc::int)))
 (sc::decl (csym::pthread_mutexattr_setprotocol)
  (sc::fn sc::int (sc::ptr csym::pthread_mutexattr_t) sc::int))
 (sc::decl (csym::pthread_attr_getinheritsched)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr sc::int)))
 (sc::decl (csym::pthread_attr_getschedparam)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr (sc::struct csym::sched_param))))
 (sc::decl (csym::pthread_attr_getschedpolicy)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr sc::int)))
 (sc::decl (csym::pthread_attr_getscope)
  (sc::fn sc::int (sc::ptr (sc::const csym::pthread_attr_t))
   (sc::ptr sc::int)))
 (sc::decl (csym::pthread_attr_setinheritsched)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t) sc::int))
 (sc::decl (csym::pthread_attr_setschedparam)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t)
   (sc::ptr (sc::const (sc::struct csym::sched_param)))))
 (sc::decl (csym::pthread_attr_setschedpolicy)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t) sc::int))
 (sc::decl (csym::pthread_attr_setscope)
  (sc::fn sc::int (sc::ptr csym::pthread_attr_t) sc::int))
 (sc::decl (csym::pthread_getschedparam csym::pthread)
  (sc::fn sc::int csym::pthread_t (sc::ptr sc::int)
   (sc::ptr (sc::struct csym::sched_param))))
 (sc::decl (csym::pthread_setschedparam)
  (sc::fn sc::int csym::pthread_t sc::int
   (sc::ptr (sc::const (sc::struct csym::sched_param)))))
 (sc::decl (csym::pthread_getconcurrency) (sc::fn sc::int sc::void))
 (sc::decl (csym::pthread_setconcurrency) (sc::fn sc::int sc::int))
 (sc::%line 1 "posix-out/pwd.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 116 "posix-out/pwd.h")
 (sc::def (sc::struct csym::passwd) (sc::decl csym::pw_name (sc::ptr sc::char))
  (sc::decl csym::pw_passwd (sc::ptr sc::char))
  (sc::decl csym::pw_uid csym::uid_t) (sc::decl csym::pw_gid csym::gid_t)
  (sc::decl csym::pw_change sc::double)
  (sc::decl csym::pw_class (sc::ptr sc::char))
  (sc::decl csym::pw_gecos (sc::ptr sc::char))
  (sc::decl csym::pw_dir (sc::ptr sc::char))
  (sc::decl csym::pw_shell (sc::ptr sc::char))
  (sc::decl csym::pw_expire sc::double) (sc::decl csym::pw_fields sc::int))
 (sc::%line 151 "posix-out/pwd.h")
 (sc::decl (csym::getpwnam)
  (sc::fn (sc::ptr (sc::struct csym::passwd)) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::getpwuid)
  (sc::fn (sc::ptr (sc::struct csym::passwd)) csym::uid_t))
 (sc::decl (csym::endpwent) (sc::fn sc::void sc::void))
 (sc::decl (csym::getpwent)
  (sc::fn (sc::ptr (sc::struct csym::passwd)) sc::void))
 (sc::decl (csym::setpwent) (sc::fn sc::void sc::void))
 (sc::decl (csym::getpwnam_r)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::struct csym::passwd)) (sc::ptr sc::char) csym::size_t
   (sc::ptr (sc::ptr (sc::struct csym::passwd)))))
 (sc::decl (csym::getpwuid_r)
  (sc::fn sc::int csym::uid_t (sc::ptr (sc::struct csym::passwd))
   (sc::ptr sc::char) csym::size_t
   (sc::ptr (sc::ptr (sc::struct csym::passwd)))))
 (sc::decl (csym::getpwent_r)
  (sc::fn sc::int (sc::ptr (sc::struct csym::passwd)) (sc::ptr sc::char)
   csym::size_t (sc::ptr (sc::ptr (sc::struct csym::passwd)))))
 (sc::decl (csym::setpassent) (sc::fn sc::int sc::int))
 (sc::decl (csym::user_from_uid)
  (sc::fn (sc::ptr (sc::const sc::char)) csym::uid_t sc::int))
 (sc::%line 1 "posix-out/regex.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 48 "posix-out/regex.h")
 (sc::deftype csym::regoff_t csym::__off_t) (sc::%line 55 "posix-out/regex.h")
 (sc::def (sc::struct csym::unnamed18) (sc::decl csym::re_magic sc::int)
  (sc::decl csym::re_nsub csym::size_t)
  (sc::decl csym::re_endp (sc::ptr (sc::const sc::char)))
  (sc::decl csym::re_g (sc::ptr (sc::struct csym::re_guts))))
 (sc::deftype csym::regex_t (sc::struct csym::unnamed18))
 (sc::def (sc::struct csym::unnamed19) (sc::decl csym::rm_so csym::regoff_t)
  (sc::decl csym::rm_eo csym::regoff_t))
 (sc::deftype csym::regmatch_t (sc::struct csym::unnamed19))
 (sc::%line 107 "posix-out/regex.h")
 (sc::decl (csym::regcomp)
  (sc::fn sc::int (sc::ptr csym::regex_t) (sc::ptr (sc::const sc::char))
   sc::int))
 (sc::decl (csym::regerror)
  (sc::fn csym::size_t sc::int (sc::ptr (sc::const csym::regex_t))
   (sc::ptr sc::char) csym::size_t))
 (sc::%line 115 "posix-out/regex.h")
 (sc::decl (csym::regexec)
  (sc::fn sc::int (sc::ptr (sc::const csym::regex_t))
   (sc::ptr (sc::const sc::char)) csym::size_t (sc::ptr csym::regmatch_t)
   sc::int))
 (sc::decl (csym::regfree) (sc::fn sc::void (sc::ptr csym::regex_t)))
 (sc::%line 1 "posix-out/resource.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_timeval.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 57 "posix-out/resource.h")
 (sc::def (sc::struct csym::rusage)
  (sc::decl csym::ru_utime (sc::struct csym::timeval))
  (sc::decl csym::ru_stime (sc::struct csym::timeval))
  (sc::decl csym::ru_maxrss sc::long) (sc::decl csym::ru_ixrss sc::long)
  (sc::decl csym::ru_idrss sc::long) (sc::decl csym::ru_isrss sc::long)
  (sc::decl csym::ru_minflt sc::long) (sc::decl csym::ru_majflt sc::long)
  (sc::decl csym::ru_nswap sc::long) (sc::decl csym::ru_inblock sc::long)
  (sc::decl csym::ru_oublock sc::long) (sc::decl csym::ru_msgsnd sc::long)
  (sc::decl csym::ru_msgrcv sc::long) (sc::decl csym::ru_nsignals sc::long)
  (sc::decl csym::ru_nvcsw sc::long) (sc::decl csym::ru_nivcsw sc::long))
 (sc::%line 125 "posix-out/resource.h")
 (sc::def (sc::struct csym::rlimit) (sc::decl csym::rlim_cur csym::rlim_t)
  (sc::decl csym::rlim_max csym::rlim_t))
 (sc::def (sc::struct csym::orlimit) (sc::decl csym::rlim_cur csym::__int32_t)
  (sc::decl csym::rlim_max csym::__int32_t))
 (sc::def (sc::struct csym::loadavg)
  (sc::decl csym::ldavg (sc::array csym::__fixpt_t 3))
  (sc::decl csym::fscale sc::long))
 (sc::%line 159 "posix-out/resource.h")
 (sc::decl (csym::getpriority) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::getrlimit)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::rlimit))))
 (sc::decl (csym::getrusage)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::rusage))))
 (sc::decl (csym::setpriority) (sc::fn sc::int sc::int sc::int sc::int))
 (sc::decl (csym::setrlimit)
  (sc::fn sc::int sc::int (sc::ptr (sc::const (sc::struct csym::rlimit)))))
 (sc::%line 1 "posix-out/sched.h") (sc::%line 1 "posix-out/search.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 20 "posix-out/search.h")
 (sc::def (sc::struct csym::entry) (sc::decl csym::key (sc::ptr sc::char))
  (sc::decl csym::data (sc::ptr sc::void)))
 (sc::deftype csym::|@entry| (sc::struct csym::entry))
 (sc::def (sc::enum csym::unnamed20) (csym::|@find| csym::|@enter|))
 (sc::deftype csym::|@action| (sc::enum csym::unnamed20))
 (sc::def (sc::enum csym::unnamed21)
  (csym::preorder csym::postorder csym::endorder csym::leaf))
 (sc::deftype csym::|@visit| (sc::enum csym::unnamed21))
 (sc::%line 48 "posix-out/search.h")
 (sc::decl (csym::hcreate) (sc::fn sc::int csym::size_t))
 (sc::decl (csym::hdestroy) (sc::fn sc::void sc::void))
 (sc::decl (csym::hsearch)
  (sc::fn (sc::ptr csym::|@entry|) csym::|@entry| csym::|@action|))
 (sc::decl (csym::insque)
  (sc::fn sc::void (sc::ptr sc::void) (sc::ptr sc::void)))
 (sc::decl (csym::lfind)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
   (sc::ptr (sc::const sc::void)) (sc::ptr csym::size_t) csym::size_t
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::lsearch)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::void)) (sc::ptr sc::void)
   (sc::ptr csym::size_t) csym::size_t
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::remque) (sc::fn sc::void (sc::ptr sc::void)))
 (sc::decl (csym::tdelete)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
   (sc::ptr (sc::ptr sc::void))
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::tfind)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
   (sc::ptr (sc::const (sc::ptr sc::void)))
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::tsearch)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
   (sc::ptr (sc::ptr sc::void))
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::twalk)
  (sc::fn sc::void (sc::ptr (sc::const sc::void))
   (sc::ptr
    (sc::fn sc::void (sc::ptr (sc::const sc::void)) csym::|@visit| sc::int))))
 (sc::%line 1 "posix-out/select.h") (sc::%line 1 "posix-out/sem.h")
 (sc::%line 1 "/usr/include/sys/ipc.h") (sc::%line 15 "posix-out/sem.h")
 (sc::def (sc::struct csym::semid_ds)
  (sc::decl csym::sem_perm (sc::struct csym::ipc_perm))
  (sc::decl csym::sem_base (sc::ptr (sc::struct csym::sem)))
  (sc::decl csym::sem_nsems sc::unsigned-short)
  (sc::decl csym::sem_otime sc::double) (sc::decl csym::sem_pad1 sc::long)
  (sc::decl csym::sem_ctime sc::double) (sc::decl csym::sem_pad2 sc::long)
  (sc::decl csym::sem_pad3 (sc::array sc::long 4)))
 (sc::%line 33 "posix-out/sem.h")
 (sc::def (sc::struct csym::sembuf) (sc::decl csym::sem_num sc::unsigned-short)
  (sc::decl csym::sem_op sc::short) (sc::decl csym::sem_flg sc::short))
 (sc::%line 43 "posix-out/sem.h")
 (sc::def (sc::union csym::semun) (sc::decl csym::val sc::int)
  (sc::decl csym::buf (sc::ptr (sc::struct csym::semid_ds)))
  (sc::decl csym::array (sc::ptr sc::unsigned-short)))
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 111 "posix-out/sem.h")
 (sc::decl (csym::semsys) (sc::fn sc::int sc::int sc::va-arg))
 (sc::decl (csym::semctl) (sc::fn sc::int sc::int sc::int sc::int sc::va-arg))
 (sc::decl (csym::semget) (sc::fn sc::int csym::key_t sc::int sc::int))
 (sc::decl (csym::semop)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::sembuf)) csym::size_t))
 (sc::%line 1 "posix-out/semaphore.h") (sc::%line 41 "posix-out/semaphore.h")
 (sc::deftype csym::sem_t (sc::ptr (sc::struct csym::sem)))
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 50 "posix-out/semaphore.h")
 (sc::decl (csym::sem_close) (sc::fn sc::int (sc::ptr csym::sem_t)))
 (sc::decl (csym::sem_destroy) (sc::fn sc::int (sc::ptr csym::sem_t)))
 (sc::decl (csym::sem_getvalue)
  (sc::fn sc::int (sc::ptr csym::sem_t) (sc::ptr sc::int)))
 (sc::decl (csym::sem_init)
  (sc::fn sc::int (sc::ptr csym::sem_t) sc::int sc::unsigned-int))
 (sc::decl (csym::sem_open)
  (sc::fn (sc::ptr csym::sem_t) (sc::ptr (sc::const sc::char)) sc::int
   sc::va-arg))
 (sc::decl (csym::sem_post) (sc::fn sc::int (sc::ptr csym::sem_t)))
 (sc::decl (csym::sem_timedwait)
  (sc::fn sc::int (sc::ptr csym::sem_t)
   (sc::ptr (sc::const (sc::struct csym::timespec)))))
 (sc::decl (csym::sem_trywait) (sc::fn sc::int (sc::ptr csym::sem_t)))
 (sc::decl (csym::sem_unlink) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::sem_wait) (sc::fn sc::int (sc::ptr csym::sem_t)))
 (sc::%line 1 "posix-out/setjmp.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/machine/setjmp.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 48 "/usr/include/machine/setjmp.h")
 (sc::def (sc::struct csym::_sigjmp_buf)
  (sc::decl csym::_sjb (sc::array sc::int (sc::+ 11 1))))
 (sc::deftype csym::sigjmp_buf (sc::array (sc::struct csym::_sigjmp_buf) 1))
 (sc::def (sc::struct csym::_jmp_buf)
  (sc::decl csym::_jb (sc::array sc::int (sc::+ 11 1))))
 (sc::deftype csym::jmp_buf (sc::array (sc::struct csym::_jmp_buf) 1))
 (sc::%line 50 "posix-out/setjmp.h")
 (sc::decl (csym::_longjmp) (sc::fn sc::void csym::jmp_buf sc::int))
 (sc::decl (csym::_setjmp) (sc::fn sc::int csym::jmp_buf))
 (sc::decl (csym::longjmp) (sc::fn sc::void csym::jmp_buf sc::int))
 (sc::decl (csym::longjmperror) (sc::fn sc::void sc::void))
 (sc::decl (csym::setjmp) (sc::fn sc::int csym::jmp_buf))
 (sc::decl (csym::siglongjmp) (sc::fn sc::void csym::sigjmp_buf sc::int))
 (sc::decl (csym::sigsetjmp) (sc::fn sc::int csym::sigjmp_buf sc::int))
 (sc::%line 1 "posix-out/shm.h") (sc::%line 1 "/usr/include/sys/ipc.h")
 (sc::%line 61 "posix-out/shm.h")
 (sc::def (sc::struct csym::shmid_ds)
  (sc::decl csym::shm_perm (sc::struct csym::ipc_perm))
  (sc::decl csym::shm_segsz sc::int) (sc::decl csym::shm_lpid sc::long)
  (sc::decl csym::shm_cpid sc::long) (sc::decl csym::shm_nattch sc::short)
  (sc::decl csym::shm_atime sc::double) (sc::decl csym::shm_dtime sc::double)
  (sc::decl csym::shm_ctime sc::double)
  (sc::decl csym::shm_internal (sc::ptr sc::void)))
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 113 "posix-out/shm.h")
 (sc::decl (csym::shmsys) (sc::fn sc::int sc::int sc::va-arg))
 (sc::decl (csym::shmat)
  (sc::fn (sc::ptr sc::void) sc::int (sc::ptr (sc::const sc::void)) sc::int))
 (sc::decl (csym::shmget) (sc::fn sc::int csym::key_t csym::size_t sc::int))
 (sc::decl (csym::shmctl)
  (sc::fn sc::int sc::int sc::int (sc::ptr (sc::struct csym::shmid_ds))))
 (sc::decl (csym::shmdt) (sc::fn sc::int (sc::ptr (sc::const sc::void))))
 (sc::%line 1 "posix-out/signal.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/signal.h") (sc::%line 49 "posix-out/signal.h")
 (sc::extern-decl csym::sys_signame
  (sc::array (sc::const (sc::ptr (sc::const sc::char))) 32))
 (sc::extern-decl csym::sys_siglist
  (sc::array (sc::const (sc::ptr (sc::const sc::char))) 32))
 (sc::extern-decl csym::sys_nsig (sc::const sc::int))
 (sc::%line 61 "posix-out/signal.h")
 (sc::decl (csym::raise) (sc::fn sc::int sc::int))
 (sc::decl (csym::kill) (sc::fn sc::int csym::__pid_t sc::int))
 (sc::decl (csym::sigaction)
  (sc::fn sc::int sc::int (sc::ptr (sc::const (sc::struct csym::sigaction)))
   (sc::ptr (sc::struct csym::sigaction))))
 (sc::decl (csym::sigaddset) (sc::fn sc::int (sc::ptr csym::sigset_t) sc::int))
 (sc::decl (csym::sigdelset) (sc::fn sc::int (sc::ptr csym::sigset_t) sc::int))
 (sc::decl (csym::sigemptyset) (sc::fn sc::int (sc::ptr csym::sigset_t)))
 (sc::decl (csym::sigfillset) (sc::fn sc::int (sc::ptr csym::sigset_t)))
 (sc::decl (csym::sigismember)
  (sc::fn sc::int (sc::ptr (sc::const csym::sigset_t)) sc::int))
 (sc::decl (csym::sigpending) (sc::fn sc::int (sc::ptr csym::sigset_t)))
 (sc::decl (csym::sigprocmask)
  (sc::fn sc::int sc::int (sc::ptr (sc::const csym::sigset_t))
   (sc::ptr csym::sigset_t)))
 (sc::decl (csym::sigsuspend)
  (sc::fn sc::int (sc::ptr (sc::const csym::sigset_t))))
 (sc::decl (csym::sigwait)
  (sc::fn sc::int (sc::ptr (sc::const csym::sigset_t)) (sc::ptr sc::int)))
 (sc::%line 89 "posix-out/signal.h")
 (sc::decl (csym::sigtimedwait)
  (sc::fn sc::int (sc::ptr (sc::const csym::sigset_t))
   (sc::ptr csym::siginfo_t)
   (sc::ptr (sc::const (sc::struct csym::timespec)))))
 (sc::decl (csym::sigwaitinfo)
  (sc::fn sc::int (sc::ptr (sc::const csym::sigset_t))
   (sc::ptr csym::siginfo_t)))
 (sc::decl (csym::killpg) (sc::fn sc::int csym::__pid_t sc::int))
 (sc::decl (csym::sigaltstack)
  (sc::fn sc::int (sc::ptr (sc::const csym::stack_t)) (sc::ptr csym::stack_t)))
 (sc::decl (csym::sigpause) (sc::fn sc::int sc::int))
 (sc::decl (csym::siginterrupt) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::sigblock) (sc::fn sc::int sc::int))
 (sc::decl (csym::sigreturn)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::__ucontext)))))
 (sc::decl (csym::sigsetmask) (sc::fn sc::int sc::int))
 (sc::decl (csym::sigstack)
  (sc::fn sc::int (sc::ptr (sc::const (sc::struct csym::sigstack)))
   (sc::ptr (sc::struct csym::sigstack))))
 (sc::decl (csym::sigvec)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::sigvec))
   (sc::ptr (sc::struct csym::sigvec))))
 (sc::decl (csym::psignal)
  (sc::fn sc::void sc::unsigned-int (sc::ptr (sc::const sc::char))))
 (sc::%line 1 "posix-out/socket.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/_iovec.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 43 "/usr/include/sys/_iovec.h")
 (sc::def (sc::struct csym::iovec) (sc::decl csym::iov_base (sc::ptr sc::void))
  (sc::decl csym::iov_len csym::size_t))
 (sc::%line 1 "/usr/include/machine/param.h")
 (sc::%line 141 "posix-out/socket.h")
 (sc::def (sc::struct csym::linger) (sc::decl csym::l_onoff sc::int)
  (sc::decl csym::l_linger sc::int))
 (sc::def (sc::struct csym::accept_filter_arg)
  (sc::decl csym::af_name (sc::array sc::char 16))
  (sc::decl csym::af_arg (sc::array sc::char (sc::- 256 16))))
 (sc::%line 215 "posix-out/socket.h")
 (sc::def (sc::struct csym::sockaddr) (sc::decl csym::sa_len sc::unsigned-char)
  (sc::decl csym::sa_family csym::sa_family_t)
  (sc::decl csym::sa_data (sc::array sc::char 14)))
 (sc::%line 227 "posix-out/socket.h")
 (sc::def (sc::struct csym::sockproto)
  (sc::decl csym::sp_family sc::unsigned-short)
  (sc::decl csym::sp_protocol sc::unsigned-short))
 (sc::%line 243 "posix-out/socket.h")
 (sc::def (sc::struct csym::sockaddr_storage)
  (sc::decl csym::ss_len sc::unsigned-char)
  (sc::decl csym::ss_family csym::sa_family_t)
  (sc::decl csym::__ss_pad1
   (sc::array sc::char
    (sc::- (sc::- (sc::sizeof csym::__int64_t) (sc::sizeof sc::unsigned-char))
     (sc::sizeof csym::sa_family_t))))
  (sc::decl csym::__ss_align csym::__int64_t)
  (sc::decl csym::__ss_pad2
   (sc::array sc::char
    (sc::-
     (sc::-
      (sc::-
       (sc::- (sc::cast sc::unsigned-int 128) (sc::sizeof sc::unsigned-char))
       (sc::sizeof csym::sa_family_t))
      (sc::-
       (sc::- (sc::sizeof csym::__int64_t) (sc::sizeof sc::unsigned-char))
       (sc::sizeof csym::sa_family_t)))
     (sc::sizeof csym::__int64_t)))))
 (sc::%line 376 "posix-out/socket.h")
 (sc::def (sc::struct csym::msghdr)
  (sc::decl csym::msg_name (sc::ptr sc::void))
  (sc::decl csym::msg_namelen csym::socklen_t)
  (sc::decl csym::msg_iov (sc::ptr (sc::struct csym::iovec)))
  (sc::decl csym::msg_iovlen sc::int)
  (sc::decl csym::msg_control (sc::ptr sc::void))
  (sc::decl csym::msg_controllen csym::socklen_t)
  (sc::decl csym::msg_flags sc::int))
 (sc::%line 406 "posix-out/socket.h")
 (sc::def (sc::struct csym::cmsghdr) (sc::decl csym::cmsg_len csym::socklen_t)
  (sc::decl csym::cmsg_level sc::int) (sc::decl csym::cmsg_type sc::int))
 (sc::%line 428 "posix-out/socket.h")
 (sc::def (sc::struct csym::cmsgcred) (sc::decl csym::cmcred_pid sc::long)
  (sc::decl csym::cmcred_uid csym::uid_t)
  (sc::decl csym::cmcred_euid csym::uid_t)
  (sc::decl csym::cmcred_gid csym::gid_t)
  (sc::decl csym::cmcred_ngroups sc::short)
  (sc::decl csym::cmcred_groups (sc::array csym::gid_t 16)))
 (sc::%line 481 "posix-out/socket.h")
 (sc::def (sc::struct csym::osockaddr)
  (sc::decl csym::sa_family sc::unsigned-short)
  (sc::decl csym::sa_data (sc::array sc::char 14)))
 (sc::%line 489 "posix-out/socket.h")
 (sc::def (sc::struct csym::omsghdr)
  (sc::decl csym::msg_name (sc::ptr sc::char))
  (sc::decl csym::msg_namelen sc::int)
  (sc::decl csym::msg_iov (sc::ptr (sc::struct csym::iovec)))
  (sc::decl csym::msg_iovlen sc::int)
  (sc::decl csym::msg_accrights (sc::ptr sc::char))
  (sc::decl csym::msg_accrightslen sc::int))
 (sc::%line 510 "posix-out/socket.h")
 (sc::def (sc::struct csym::sf_hdtr)
  (sc::decl csym::headers (sc::ptr (sc::struct csym::iovec)))
  (sc::decl csym::hdr_cnt sc::int)
  (sc::decl csym::trailers (sc::ptr (sc::struct csym::iovec)))
  (sc::decl csym::trl_cnt sc::int))
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 527 "posix-out/socket.h")
 (sc::decl (csym::accept)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::sockaddr))
   (sc::ptr csym::socklen_t)))
 (sc::decl (csym::bind)
  (sc::fn sc::int sc::int (sc::ptr (sc::const (sc::struct csym::sockaddr)))
   csym::socklen_t))
 (sc::decl (csym::connect)
  (sc::fn sc::int sc::int (sc::ptr (sc::const (sc::struct csym::sockaddr)))
   csym::socklen_t))
 (sc::decl (csym::getpeername)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::sockaddr))
   (sc::ptr csym::socklen_t)))
 (sc::decl (csym::getsockname)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::sockaddr))
   (sc::ptr csym::socklen_t)))
 (sc::decl (csym::getsockopt)
  (sc::fn sc::int sc::int sc::int sc::int (sc::ptr sc::void)
   (sc::ptr csym::socklen_t)))
 (sc::decl (csym::listen) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::recv)
  (sc::fn csym::ssize_t sc::int (sc::ptr sc::void) csym::size_t sc::int))
 (sc::decl (csym::recvfrom)
  (sc::fn csym::ssize_t sc::int (sc::ptr sc::void) csym::size_t sc::int
   (sc::ptr (sc::struct csym::sockaddr)) (sc::ptr csym::socklen_t)))
 (sc::decl (csym::recvmsg)
  (sc::fn csym::ssize_t sc::int (sc::ptr (sc::struct csym::msghdr)) sc::int))
 (sc::decl (csym::send)
  (sc::fn csym::ssize_t sc::int (sc::ptr (sc::const sc::void)) csym::size_t
   sc::int))
 (sc::decl (csym::sendto)
  (sc::fn csym::ssize_t sc::int (sc::ptr (sc::const sc::void)) csym::size_t
   sc::int (sc::ptr (sc::const (sc::struct csym::sockaddr))) csym::socklen_t))
 (sc::decl (csym::sendmsg)
  (sc::fn csym::ssize_t sc::int (sc::ptr (sc::const (sc::struct csym::msghdr)))
   sc::int))
 (sc::decl (csym::sendfile)
  (sc::fn sc::int sc::int sc::int csym::off_t csym::size_t
   (sc::ptr (sc::struct csym::sf_hdtr)) (sc::ptr csym::off_t) sc::int))
 (sc::decl (csym::setsockopt)
  (sc::fn sc::int sc::int sc::int sc::int (sc::ptr (sc::const sc::void))
   csym::socklen_t))
 (sc::decl (csym::shutdown) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::sockatmark) (sc::fn sc::int sc::int))
 (sc::decl (csym::socket) (sc::fn sc::int sc::int sc::int sc::int))
 (sc::decl (csym::socketpair)
  (sc::fn sc::int sc::int sc::int sc::int (sc::ptr sc::int)))
 (sc::%line 1 "posix-out/stat.h") (sc::%line 1 "posix-out/statvfs.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 59 "posix-out/statvfs.h")
 (sc::def (sc::struct csym::statvfs) (sc::decl csym::f_bavail csym::fsblkcnt_t)
  (sc::decl csym::f_bfree csym::fsblkcnt_t)
  (sc::decl csym::f_blocks csym::fsblkcnt_t)
  (sc::decl csym::f_favail csym::fsfilcnt_t)
  (sc::decl csym::f_ffree csym::fsfilcnt_t)
  (sc::decl csym::f_files csym::fsfilcnt_t)
  (sc::decl csym::f_bsize sc::unsigned-long)
  (sc::decl csym::f_flag sc::unsigned-long)
  (sc::decl csym::f_frsize sc::unsigned-long)
  (sc::decl csym::f_fsid sc::unsigned-long)
  (sc::decl csym::f_namemax sc::unsigned-long))
 (sc::decl (csym::fstatvfs)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::statvfs))))
 (sc::decl (csym::statvfs)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::struct csym::statvfs))))
 (sc::%line 1 "posix-out/stdarg.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 46 "posix-out/stdarg.h")
 (sc::deftype csym::va_list csym::__va_list)
 (sc::%line 1 "posix-out/stdbool.h") (sc::%line 1 "posix-out/stddef.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_null.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 45 "posix-out/stddef.h")
 (sc::deftype csym::ptrdiff_t csym::__ptrdiff_t)
 (sc::deftype csym::rune_t csym::__rune_t) (sc::%line 61 "posix-out/stddef.h")
 (sc::deftype csym::wchar_t csym::__wchar_t) (sc::%line 1 "posix-out/stdint.h")
 (sc::%line 1 "posix-out/stdio.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_null.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 47 "posix-out/stdio.h")
 (sc::deftype csym::fpos_t csym::__off_t) (sc::%line 70 "posix-out/stdio.h")
 (sc::def (sc::struct csym::__sbuf)
  (sc::decl csym::_base (sc::ptr sc::unsigned-char))
  (sc::decl csym::_size sc::int))
 (sc::%line 102 "posix-out/stdio.h")
 (sc::def (sc::struct csym::|__S@file|)
  (sc::decl csym::_p (sc::ptr sc::unsigned-char)) (sc::decl csym::_r sc::int)
  (sc::decl csym::_w sc::int) (sc::decl csym::_flags sc::short)
  (sc::decl csym::_file sc::short)
  (sc::decl csym::_bf (sc::struct csym::__sbuf))
  (sc::decl csym::_lbfsize sc::int) (sc::decl csym::_cookie (sc::ptr sc::void))
  (sc::decl csym::_close (sc::ptr (sc::fn sc::int (sc::ptr sc::void))))
  (sc::decl csym::_read
   (sc::ptr (sc::fn sc::int (sc::ptr sc::void) (sc::ptr sc::char) sc::int)))
  (sc::decl csym::_seek
   (sc::ptr (sc::fn csym::fpos_t (sc::ptr sc::void) csym::fpos_t sc::int)))
  (sc::decl csym::_write
   (sc::ptr
    (sc::fn sc::int (sc::ptr sc::void) (sc::ptr (sc::const sc::char))
     sc::int)))
  (sc::decl csym::_ub (sc::struct csym::__sbuf))
  (sc::decl csym::_extra (sc::ptr (sc::struct csym::|__S@filex|)))
  (sc::decl csym::_ur sc::int)
  (sc::decl csym::_ubuf (sc::array sc::unsigned-char 3))
  (sc::decl csym::_nbuf (sc::array sc::unsigned-char 1))
  (sc::decl csym::_lb (sc::struct csym::__sbuf))
  (sc::decl csym::_blksize sc::int) (sc::decl csym::_offset csym::fpos_t))
 (sc::deftype csym::|@file| (sc::struct csym::|__S@file|))
 (sc::extern-decl csym::__stdinp (sc::ptr csym::|@file|))
 (sc::extern-decl csym::__stdoutp (sc::ptr csym::|@file|))
 (sc::extern-decl csym::__stderrp (sc::ptr csym::|@file|))
 (sc::%line 208 "posix-out/stdio.h") (sc::%line 212 "posix-out/stdio.h")
 (sc::decl (csym::clearerr) (sc::fn sc::void (sc::ptr csym::|@file|)))
 (sc::decl (csym::fclose) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::feof) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::ferror) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::fflush) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::fgetc) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::fgetpos)
  (sc::fn sc::int (sc::ptr csym::|@file|) (sc::ptr csym::fpos_t)))
 (sc::decl (csym::fgets)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char) sc::int
   (sc::ptr csym::|@file|)))
 (sc::decl (csym::fopen)
  (sc::fn (sc::ptr csym::|@file|) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::fprintf)
  (sc::fn sc::int (sc::ptr csym::|@file|) (sc::ptr (sc::const sc::char))
   sc::va-arg))
 (sc::decl (csym::fputc) (sc::fn sc::int sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::fputs)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr csym::|@file|)))
 (sc::decl (csym::fread)
  (sc::fn csym::size_t (sc::ptr sc::void) csym::size_t csym::size_t
   (sc::ptr csym::|@file|)))
 (sc::decl (csym::freopen)
  (sc::fn (sc::ptr csym::|@file|) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char)) (sc::ptr csym::|@file|)))
 (sc::decl (csym::fscanf)
  (sc::fn sc::int (sc::ptr csym::|@file|) (sc::ptr (sc::const sc::char))
   sc::va-arg))
 (sc::decl (csym::fseek)
  (sc::fn sc::int (sc::ptr csym::|@file|) sc::long sc::int))
 (sc::decl (csym::fsetpos)
  (sc::fn sc::int (sc::ptr csym::|@file|) (sc::ptr (sc::const csym::fpos_t))))
 (sc::decl (csym::ftell) (sc::fn sc::long (sc::ptr csym::|@file|)))
 (sc::decl (csym::fwrite)
  (sc::fn csym::size_t (sc::ptr (sc::const sc::void)) csym::size_t csym::size_t
   (sc::ptr csym::|@file|)))
 (sc::decl (csym::getc) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::getchar) (sc::fn sc::int sc::void))
 (sc::decl (csym::gets) (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)))
 (sc::decl (csym::perror) (sc::fn sc::void (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::printf)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::va-arg))
 (sc::decl (csym::putc) (sc::fn sc::int sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::putchar) (sc::fn sc::int sc::int))
 (sc::decl (csym::puts) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::remove) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::rename)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::rewind) (sc::fn sc::void (sc::ptr csym::|@file|)))
 (sc::decl (csym::scanf)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::va-arg))
 (sc::decl (csym::setbuf)
  (sc::fn sc::void (sc::ptr csym::|@file|) (sc::ptr sc::char)))
 (sc::decl (csym::setvbuf)
  (sc::fn sc::int (sc::ptr csym::|@file|) (sc::ptr sc::char) sc::int
   csym::size_t))
 (sc::decl (csym::sprintf)
  (sc::fn sc::int (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   sc::va-arg))
 (sc::decl (csym::sscanf)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   sc::va-arg))
 (sc::decl (csym::tmpfile) (sc::fn (sc::ptr csym::|@file|) sc::void))
 (sc::decl (csym::tmpnam) (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)))
 (sc::decl (csym::ungetc) (sc::fn sc::int sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::vfprintf)
  (sc::fn sc::int (sc::ptr csym::|@file|) (sc::ptr (sc::const sc::char))
   csym::__va_list))
 (sc::decl (csym::vprintf)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::__va_list))
 (sc::decl (csym::vsprintf)
  (sc::fn sc::int (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   csym::__va_list))
 (sc::decl (csym::snprintf)
  (sc::fn sc::int (sc::ptr sc::char) csym::size_t
   (sc::ptr (sc::const sc::char)) sc::va-arg))
 (sc::decl (csym::vfscanf)
  (sc::fn sc::int (sc::ptr csym::|@file|) (sc::ptr (sc::const sc::char))
   csym::__va_list))
 (sc::decl (csym::vscanf)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::__va_list))
 (sc::decl (csym::vsnprintf)
  (sc::fn sc::int (sc::ptr sc::char) csym::size_t
   (sc::ptr (sc::const sc::char)) csym::__va_list))
 (sc::decl (csym::vsscanf)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   csym::__va_list))
 (sc::%line 279 "posix-out/stdio.h")
 (sc::decl (csym::ctermid) (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)))
 (sc::decl (csym::fdopen)
  (sc::fn (sc::ptr csym::|@file|) sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::fileno) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::pclose) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::popen)
  (sc::fn (sc::ptr csym::|@file|) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::ftrylockfile) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::flockfile) (sc::fn sc::void (sc::ptr csym::|@file|)))
 (sc::decl (csym::funlockfile) (sc::fn sc::void (sc::ptr csym::|@file|)))
 (sc::%line 298 "posix-out/stdio.h")
 (sc::decl (csym::getc_unlocked) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::getchar_unlocked) (sc::fn sc::int sc::void))
 (sc::decl (csym::putc_unlocked)
  (sc::fn sc::int sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::putchar_unlocked) (sc::fn sc::int sc::int))
 (sc::decl (csym::clearerr_unlocked) (sc::fn sc::void (sc::ptr csym::|@file|)))
 (sc::decl (csym::feof_unlocked) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::ferror_unlocked) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::fileno_unlocked) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::fseeko)
  (sc::fn sc::int (sc::ptr csym::|@file|) csym::__off_t sc::int))
 (sc::decl (csym::ftello) (sc::fn csym::__off_t (sc::ptr csym::|@file|)))
 (sc::decl (csym::getw) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::putw) (sc::fn sc::int sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::tempnam)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::%line 328 "posix-out/stdio.h")
 (sc::decl (csym::asprintf)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) (sc::ptr (sc::const sc::char))
   sc::va-arg))
 (sc::decl (csym::ctermid_r) (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)))
 (sc::decl (csym::fgetln)
  (sc::fn (sc::ptr sc::char) (sc::ptr csym::|@file|) (sc::ptr csym::size_t)))
 (sc::%line 336 "posix-out/stdio.h")
 (sc::decl (csym::fmtcheck)
  (sc::fn (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::fpurge) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::setbuffer)
  (sc::fn sc::void (sc::ptr csym::|@file|) (sc::ptr sc::char) sc::int))
 (sc::decl (csym::setlinebuf) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::vasprintf)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) (sc::ptr (sc::const sc::char))
   csym::__va_list))
 (sc::%line 348 "posix-out/stdio.h")
 (sc::extern-decl csym::sys_nerr (sc::const sc::int))
 (sc::extern-decl csym::sys_errlist
  (sc::array (sc::const (sc::ptr (sc::const sc::char)))))
 (sc::%line 354 "posix-out/stdio.h")
 (sc::decl (csym::funopen)
  (sc::fn (sc::ptr csym::|@file|) (sc::ptr (sc::const sc::void))
   (sc::ptr (sc::fn sc::int (sc::ptr sc::void) (sc::ptr sc::char) sc::int))
   (sc::ptr
    (sc::fn sc::int (sc::ptr sc::void) (sc::ptr (sc::const sc::char)) sc::int))
   (sc::ptr (sc::fn csym::fpos_t (sc::ptr sc::void) csym::fpos_t sc::int))
   (sc::ptr (sc::fn sc::int (sc::ptr sc::void)))))
 (sc::%line 386 "posix-out/stdio.h")
 (sc::decl (csym::__srget) (sc::fn sc::int (sc::ptr csym::|@file|)))
 (sc::decl (csym::__swbuf) (sc::fn sc::int sc::int (sc::ptr csym::|@file|)))
 (sc::%line 395 "posix-out/stdio.h")
 (sc::static-def (csym::__sputc csym::_c csym::_p)
  (sc::fn sc::int sc::int (sc::ptr csym::|@file|))
  (sc::if
   (sc::or (sc::>= (sc::-- (sc::fref (sc::mref csym::_p) csym::_w)) 0)
    (sc::and
     (sc::>= (sc::fref (sc::mref csym::_p) csym::_w)
      (sc::fref (sc::mref csym::_p) csym::_lbfsize))
     (sc::!= (sc::cast sc::char csym::_c) #\Newline)))
   (sc::return
    (sc::= (sc::mref (sc::inc (sc::fref (sc::mref csym::_p) csym::_p)))
     csym::_c))
   (sc::return (csym::__swbuf csym::_c csym::_p))))
 (sc::%line 420 "posix-out/stdio.h")
 (sc::extern-decl csym::__isthreaded sc::int)
 (sc::%line 454 "posix-out/stdio.h") (sc::%line 1 "posix-out/stdlib.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_null.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 63 "posix-out/stdlib.h")
 (sc::def (sc::struct csym::unnamed22) (sc::decl csym::quot sc::int)
  (sc::decl csym::rem sc::int))
 (sc::deftype csym::div_t (sc::struct csym::unnamed22))
 (sc::def (sc::struct csym::unnamed23) (sc::decl csym::quot sc::long)
  (sc::decl csym::rem sc::long))
 (sc::deftype csym::ldiv_t (sc::struct csym::unnamed23))
 (sc::extern-decl csym::__mb_cur_max sc::int)
 (sc::decl (csym::abort) (sc::fn sc::void sc::void))
 (sc::decl (csym::abs) (sc::fn sc::int sc::int))
 (sc::decl (csym::atexit)
  (sc::fn sc::int (sc::ptr (sc::fn sc::void sc::void))))
 (sc::decl (csym::atof) (sc::fn sc::double (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::atoi) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::atol) (sc::fn sc::long (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::bsearch)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
   (sc::ptr (sc::const sc::void)) csym::size_t csym::size_t
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::calloc)
  (sc::fn (sc::ptr sc::void) csym::size_t csym::size_t))
 (sc::decl (csym::div) (sc::fn csym::div_t sc::int sc::int))
 (sc::decl (csym::exit) (sc::fn sc::void sc::int))
 (sc::decl (csym::free) (sc::fn sc::void (sc::ptr sc::void)))
 (sc::decl (csym::getenv)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::labs) (sc::fn sc::long sc::long))
 (sc::decl (csym::ldiv) (sc::fn csym::ldiv_t sc::long sc::long))
 (sc::decl (csym::malloc) (sc::fn (sc::ptr sc::void) csym::size_t))
 (sc::decl (csym::mblen)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::size_t))
 (sc::decl (csym::mbstowcs)
  (sc::fn csym::size_t (sc::ptr csym::wchar_t) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::decl (csym::mbtowc)
  (sc::fn sc::int (sc::ptr csym::wchar_t) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::decl (csym::qsort)
  (sc::fn sc::void (sc::ptr sc::void) csym::size_t csym::size_t
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::rand) (sc::fn sc::int sc::void))
 (sc::decl (csym::realloc)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void) csym::size_t))
 (sc::decl (csym::srand) (sc::fn sc::void sc::unsigned-int))
 (sc::decl (csym::strtod)
  (sc::fn sc::double (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::strtof)
  (sc::fn sc::float (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::strtol)
  (sc::fn sc::long (sc::ptr (sc::const sc::char)) (sc::ptr (sc::ptr sc::char))
   sc::int))
 (sc::decl (csym::strtold)
  (sc::fn sc::long-double (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::strtoul)
  (sc::fn sc::unsigned-long (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char)) sc::int))
 (sc::decl (csym::system) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::wctomb) (sc::fn sc::int (sc::ptr sc::char) csym::wchar_t))
 (sc::decl (csym::wcstombs)
  (sc::fn csym::size_t (sc::ptr sc::char) (sc::ptr (sc::const csym::wchar_t))
   csym::size_t))
 (sc::%line 130 "posix-out/stdlib.h")
 (sc::def (sc::struct csym::unnamed24) (sc::decl csym::quot sc::long-long)
  (sc::decl csym::rem sc::long-long))
 (sc::deftype csym::lldiv_t (sc::struct csym::unnamed24))
 (sc::decl (csym::atoll) (sc::fn sc::long-long (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::llabs) (sc::fn sc::long-long sc::long-long))
 (sc::decl (csym::lldiv) (sc::fn csym::lldiv_t sc::long-long sc::long-long))
 (sc::decl (csym::strtoll)
  (sc::fn sc::long-long (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char)) sc::int))
 (sc::decl (csym::strtoull)
  (sc::fn sc::unsigned-long-long (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char)) sc::int))
 (sc::decl (csym::|_@e@XIT|) (sc::fn sc::void sc::int))
 (sc::%line 161 "posix-out/stdlib.h")
 (sc::decl (csym::rand_r) (sc::fn sc::int (sc::ptr sc::unsigned-int)))
 (sc::decl (csym::setenv)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   sc::int))
 (sc::decl (csym::unsetenv) (sc::fn sc::void (sc::ptr (sc::const sc::char))))
 (sc::%line 175 "posix-out/stdlib.h")
 (sc::decl (csym::drand48) (sc::fn sc::double sc::void))
 (sc::decl (csym::erand48)
  (sc::fn sc::double (sc::array sc::unsigned-short 3)))
 (sc::decl (csym::getsubopt)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char))
   (sc::ptr (sc::const (sc::ptr sc::char))) (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::grantpt) (sc::fn sc::int sc::int))
 (sc::decl (csym::initstate)
  (sc::fn (sc::ptr sc::char) sc::unsigned-long (sc::ptr sc::char) sc::long))
 (sc::decl (csym::jrand48) (sc::fn sc::long (sc::array sc::unsigned-short 3)))
 (sc::decl (csym::lcong48) (sc::fn sc::void (sc::array sc::unsigned-short 7)))
 (sc::decl (csym::lrand48) (sc::fn sc::long sc::void))
 (sc::decl (csym::mkstemp) (sc::fn sc::int (sc::ptr sc::char)))
 (sc::decl (csym::mktemp) (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)))
 (sc::decl (csym::mrand48) (sc::fn sc::long sc::void))
 (sc::decl (csym::nrand48) (sc::fn sc::long (sc::array sc::unsigned-short 3)))
 (sc::decl (csym::posix_openpt) (sc::fn sc::int sc::int))
 (sc::decl (csym::ptsname) (sc::fn (sc::ptr sc::char) sc::int))
 (sc::decl (csym::putenv) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::random) (sc::fn sc::long sc::void))
 (sc::decl (csym::realpath)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::array sc::char)))
 (sc::decl (csym::seed48)
  (sc::fn (sc::ptr sc::unsigned-short) (sc::array sc::unsigned-short 3)))
 (sc::decl (csym::setkey) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::setstate) (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)))
 (sc::decl (csym::srand48) (sc::fn sc::void sc::long))
 (sc::decl (csym::srandom) (sc::fn sc::void sc::unsigned-long))
 (sc::decl (csym::unlockpt) (sc::fn sc::int sc::int))
 (sc::extern-decl csym::_malloc_options (sc::ptr (sc::const sc::char)))
 (sc::extern-decl csym::_malloc_message
  (sc::ptr
   (sc::fn sc::void (sc::ptr (sc::const sc::char))
    (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
    (sc::ptr (sc::const sc::char)))))
 (sc::%line 235 "posix-out/stdlib.h")
 (sc::decl (csym::arc4random) (sc::fn csym::__uint32_t sc::void))
 (sc::decl (csym::arc4random_addrandom csym::dat csym::datlen)
  (sc::fn sc::void (sc::ptr sc::unsigned-char) sc::int))
 (sc::decl (csym::arc4random_stir) (sc::fn sc::void sc::void))
 (sc::decl (csym::getbsize)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::int) (sc::ptr sc::long)))
 (sc::decl (csym::cgetcap)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   sc::int))
 (sc::decl (csym::cgetclose) (sc::fn sc::int sc::void))
 (sc::decl (csym::cgetent)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) (sc::ptr (sc::ptr sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::cgetfirst)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::cgetmatch)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::cgetnext)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::cgetnum)
  (sc::fn sc::int (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr sc::long)))
 (sc::decl (csym::cgetset) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::cgetstr)
  (sc::fn sc::int (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::cgetustr)
  (sc::fn sc::int (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::daemon) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::devname) (sc::fn (sc::ptr sc::char) sc::int sc::int))
 (sc::decl (csym::devname_r)
  (sc::fn (sc::ptr sc::char) sc::int sc::int (sc::ptr sc::char) sc::int))
 (sc::decl (csym::getloadavg) (sc::fn sc::int (sc::array sc::double) sc::int))
 (sc::decl (csym::getprogname)
  (sc::fn (sc::ptr (sc::const sc::char)) sc::void))
 (sc::decl (csym::heapsort)
  (sc::fn sc::int (sc::ptr sc::void) csym::size_t csym::size_t
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::mergesort)
  (sc::fn sc::int (sc::ptr sc::void) csym::size_t csym::size_t
   (sc::ptr
    (sc::fn sc::int (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::qsort_r)
  (sc::fn sc::void (sc::ptr sc::void) csym::size_t csym::size_t
   (sc::ptr sc::void)
   (sc::ptr
    (sc::fn sc::int (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
     (sc::ptr (sc::const sc::void))))))
 (sc::decl (csym::radixsort)
  (sc::fn sc::int (sc::ptr (sc::ptr (sc::const sc::unsigned-char))) sc::int
   (sc::ptr (sc::const sc::unsigned-char)) sc::unsigned-int))
 (sc::decl (csym::reallocf)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void) csym::size_t))
 (sc::decl (csym::setprogname)
  (sc::fn sc::void (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::sradixsort)
  (sc::fn sc::int (sc::ptr (sc::ptr (sc::const sc::unsigned-char))) sc::int
   (sc::ptr (sc::const sc::unsigned-char)) sc::unsigned-int))
 (sc::decl (csym::sranddev) (sc::fn sc::void sc::void))
 (sc::decl (csym::srandomdev) (sc::fn sc::void sc::void))
 (sc::decl (csym::strtoq)
  (sc::fn csym::__int64_t (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char)) sc::int))
 (sc::decl (csym::strtouq)
  (sc::fn csym::__uint64_t (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char)) sc::int))
 (sc::extern-decl csym::suboptarg (sc::ptr sc::char))
 (sc::%line 1 "posix-out/string.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_null.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/strings.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 40 "/usr/include/strings.h")
 (sc::decl (csym::bcmp)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) (sc::ptr (sc::const sc::void))
   csym::size_t))
 (sc::decl (csym::bcopy)
  (sc::fn sc::void (sc::ptr (sc::const sc::void)) (sc::ptr sc::void)
   csym::size_t))
 (sc::decl (csym::bzero) (sc::fn sc::void (sc::ptr sc::void) csym::size_t))
 (sc::decl (csym::ffs) (sc::fn sc::int sc::int))
 (sc::decl (csym::ffsl) (sc::fn sc::int sc::long))
 (sc::decl (csym::fls) (sc::fn sc::int sc::int))
 (sc::decl (csym::flsl) (sc::fn sc::int sc::long))
 (sc::decl (csym::index)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::rindex)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::strcasecmp)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strncasecmp)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::%line 57 "posix-out/string.h")
 (sc::decl (csym::memccpy)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
   sc::int csym::size_t))
 (sc::decl (csym::memchr)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::void)) sc::int
   csym::size_t))
 (sc::decl (csym::memcmp)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) (sc::ptr (sc::const sc::void))
   csym::size_t))
 (sc::decl (csym::memcpy)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
   csym::size_t))
 (sc::decl (csym::memmove)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void) (sc::ptr (sc::const sc::void))
   csym::size_t))
 (sc::decl (csym::memset)
  (sc::fn (sc::ptr sc::void) (sc::ptr sc::void) sc::int csym::size_t))
 (sc::decl (csym::stpcpy)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strcasestr)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strcat)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strchr)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::strcmp)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strcoll)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strcpy)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strcspn)
  (sc::fn csym::size_t (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strdup)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strerror) (sc::fn (sc::ptr sc::char) sc::int))
 (sc::decl (csym::strerror_r)
  (sc::fn sc::int sc::int (sc::ptr sc::char) csym::size_t))
 (sc::decl (csym::strlcat)
  (sc::fn csym::size_t (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::decl (csym::strlcpy)
  (sc::fn csym::size_t (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::decl (csym::strlen) (sc::fn csym::size_t (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strmode) (sc::fn sc::void sc::int (sc::ptr sc::char)))
 (sc::decl (csym::strncat)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::decl (csym::strncmp)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::decl (csym::strncpy)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::decl (csym::strnstr)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char)) csym::size_t))
 (sc::decl (csym::strpbrk)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strrchr)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::strsep)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::ptr sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strsignal) (sc::fn (sc::ptr sc::char) sc::int))
 (sc::decl (csym::strspn)
  (sc::fn csym::size_t (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strstr)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strtok)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::strtok_r)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::ptr sc::char))))
 (sc::decl (csym::strxfrm)
  (sc::fn csym::size_t (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   csym::size_t))
 (sc::decl (csym::swab)
  (sc::fn sc::void (sc::ptr (sc::const sc::void)) (sc::ptr sc::void)
   csym::size_t))
 (sc::%line 1 "posix-out/strings.h") (sc::%line 1 "posix-out/syslog.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 191 "posix-out/syslog.h")
 (sc::decl (csym::closelog) (sc::fn sc::void sc::void))
 (sc::decl (csym::openlog)
  (sc::fn sc::void (sc::ptr (sc::const sc::char)) sc::int sc::int))
 (sc::decl (csym::setlogmask) (sc::fn sc::int sc::int))
 (sc::decl (csym::syslog)
  (sc::fn sc::void sc::int (sc::ptr (sc::const sc::char)) sc::va-arg))
 (sc::decl (csym::vsyslog)
  (sc::fn sc::void sc::int (sc::ptr (sc::const sc::char)) csym::__va_list))
 (sc::%line 1 "posix-out/tar.h") (sc::%line 1 "posix-out/tcp.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 40 "posix-out/tcp.h")
 (sc::deftype csym::tcp_seq csym::u_int32_t)
 (sc::deftype csym::tcp_cc csym::u_int32_t) (sc::%line 50 "posix-out/tcp.h")
 (sc::def (sc::struct csym::tcphdr) (sc::decl csym::th_sport csym::u_short)
  (sc::decl csym::th_dport csym::u_short) (sc::decl csym::th_seq csym::tcp_seq)
  (sc::decl csym::th_ack csym::tcp_seq) (sc::decl csym::th_x2 csym::u_int) :bit
  4 (sc::decl csym::th_off csym::u_int) :bit 4
  (sc::decl csym::th_flags csym::u_char) (sc::decl csym::th_win csym::u_short)
  (sc::decl csym::th_sum csym::u_short) (sc::decl csym::th_urp csym::u_short))
 (sc::%line 63 "posix-out/tcp.h") (sc::%line 1 "posix-out/termios.h")
 (sc::%line 178 "posix-out/termios.h")
 (sc::deftype csym::tcflag_t sc::unsigned-int)
 (sc::deftype csym::cc_t sc::unsigned-char)
 (sc::deftype csym::speed_t sc::unsigned-int)
 (sc::def (sc::struct csym::termios) (sc::decl csym::c_iflag csym::tcflag_t)
  (sc::decl csym::c_oflag csym::tcflag_t)
  (sc::decl csym::c_cflag csym::tcflag_t)
  (sc::decl csym::c_lflag csym::tcflag_t)
  (sc::decl csym::c_cc (sc::array csym::cc_t 20))
  (sc::decl csym::c_ispeed csym::speed_t)
  (sc::decl csym::c_ospeed csym::speed_t))
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 247 "posix-out/termios.h")
 (sc::decl (csym::cfgetispeed)
  (sc::fn csym::speed_t (sc::ptr (sc::const (sc::struct csym::termios)))))
 (sc::decl (csym::cfgetospeed)
  (sc::fn csym::speed_t (sc::ptr (sc::const (sc::struct csym::termios)))))
 (sc::decl (csym::cfsetispeed)
  (sc::fn sc::int (sc::ptr (sc::struct csym::termios)) csym::speed_t))
 (sc::decl (csym::cfsetospeed)
  (sc::fn sc::int (sc::ptr (sc::struct csym::termios)) csym::speed_t))
 (sc::decl (csym::tcgetattr)
  (sc::fn sc::int sc::int (sc::ptr (sc::struct csym::termios))))
 (sc::decl (csym::tcsetattr)
  (sc::fn sc::int sc::int sc::int
   (sc::ptr (sc::const (sc::struct csym::termios)))))
 (sc::decl (csym::tcdrain) (sc::fn sc::int sc::int))
 (sc::decl (csym::tcflow) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::tcflush) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::tcsendbreak) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::cfmakeraw)
  (sc::fn sc::void (sc::ptr (sc::struct csym::termios))))
 (sc::decl (csym::cfsetspeed)
  (sc::fn sc::int (sc::ptr (sc::struct csym::termios)) csym::speed_t))
 (sc::%line 1 "/usr/include/sys/ttycom.h")
 (sc::%line 1 "/usr/include/sys/ioccom.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 65 "/usr/include/sys/ioccom.h")
 (sc::decl (csym::ioctl) (sc::fn sc::int sc::int sc::unsigned-long sc::va-arg))
 (sc::%line 52 "/usr/include/sys/ttycom.h")
 (sc::def (sc::struct csym::winsize) (sc::decl csym::ws_row sc::unsigned-short)
  (sc::decl csym::ws_col sc::unsigned-short)
  (sc::decl csym::ws_xpixel sc::unsigned-short)
  (sc::decl csym::ws_ypixel sc::unsigned-short))
 (sc::%line 1 "/usr/include/sys/ttydefaults.h")
 (sc::%line 1 "posix-out/tgmath.h") (sc::%line 1 "/usr/include/complex.h")
 (sc::%line 1 "/usr/include/math.h") (sc::%line 1 "posix-out/time.h")
 (sc::%line 1 "posix-out/timeb.h") (sc::%line 42 "posix-out/timeb.h")
 (sc::def (sc::struct csym::timeb) (sc::decl csym::time sc::double)
  (sc::decl csym::millitm sc::unsigned-short)
  (sc::decl csym::timezone sc::short) (sc::decl csym::dstflag sc::short))
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 52 "posix-out/timeb.h")
 (sc::decl (csym::ftime) (sc::fn sc::int (sc::ptr (sc::struct csym::timeb))))
 (sc::%line 1 "posix-out/times.h") (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 48 "posix-out/times.h")
 (sc::def (sc::struct csym::tms) (sc::decl csym::tms_utime csym::clock_t)
  (sc::decl csym::tms_stime csym::clock_t)
  (sc::decl csym::tms_cutime csym::clock_t)
  (sc::decl csym::tms_cstime csym::clock_t))
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 58 "posix-out/times.h")
 (sc::decl (csym::times)
  (sc::fn csym::clock_t (sc::ptr (sc::struct csym::tms))))
 (sc::%line 1 "posix-out/types.h") (sc::%line 1 "posix-out/ucontext.h")
 (sc::%line 1 "/usr/include/sys/signal.h")
 (sc::%line 1 "/usr/include/machine/ucontext.h")
 (sc::%line 34 "/usr/include/machine/ucontext.h")
 (sc::def (sc::struct csym::__mcontext) (sc::decl csym::mc_onstack sc::int)
  (sc::decl csym::mc_gs sc::int) (sc::decl csym::mc_fs sc::int)
  (sc::decl csym::mc_es sc::int) (sc::decl csym::mc_ds sc::int)
  (sc::decl csym::mc_edi sc::int) (sc::decl csym::mc_esi sc::int)
  (sc::decl csym::mc_ebp sc::int) (sc::decl csym::mc_isp sc::int)
  (sc::decl csym::mc_ebx sc::int) (sc::decl csym::mc_edx sc::int)
  (sc::decl csym::mc_ecx sc::int) (sc::decl csym::mc_eax sc::int)
  (sc::decl csym::mc_trapno sc::int) (sc::decl csym::mc_err sc::int)
  (sc::decl csym::mc_eip sc::int) (sc::decl csym::mc_cs sc::int)
  (sc::decl csym::mc_eflags sc::int) (sc::decl csym::mc_esp sc::int)
  (sc::decl csym::mc_ss sc::int) (sc::decl csym::mc_len sc::int)
  (sc::decl csym::mc_fpformat sc::int) (sc::decl csym::mc_ownedfp sc::int)
  (sc::decl csym::mc_spare1 (sc::array sc::int 1))
  (sc::decl csym::mc_fpstate (sc::array sc::int 128))
  (sc::decl csym::mc_spare2 (sc::array sc::int 8)))
 (sc::deftype csym::mcontext_t (sc::struct csym::__mcontext))
 (sc::%line 40 "/usr/include/machine/ucontext.h")
 (sc::%line 74 "/usr/include/machine/ucontext.h")
 (sc::%line 37 "posix-out/ucontext.h")
 (sc::def (sc::struct csym::__ucontext)
  (sc::decl csym::uc_sigmask csym::sigset_t)
  (sc::decl csym::uc_mcontext csym::mcontext_t)
  (sc::decl csym::uc_link (sc::ptr (sc::struct csym::__ucontext)))
  (sc::decl csym::uc_stack csym::stack_t) (sc::decl csym::uc_flags sc::int)
  (sc::decl csym::__spare__ (sc::array sc::int 4)))
 (sc::deftype csym::ucontext_t (sc::struct csym::__ucontext))
 (sc::%line 46 "posix-out/ucontext.h") (sc::%line 72 "posix-out/ucontext.h")
 (sc::decl (csym::getcontext) (sc::fn sc::int (sc::ptr csym::ucontext_t)))
 (sc::decl (csym::setcontext)
  (sc::fn sc::int (sc::ptr (sc::const csym::ucontext_t))))
 (sc::decl (csym::makecontext)
  (sc::fn sc::void (sc::ptr csym::ucontext_t)
   (sc::ptr (sc::fn sc::void sc::void)) sc::int sc::va-arg))
 (sc::decl (csym::signalcontext)
  (sc::fn sc::int (sc::ptr csym::ucontext_t) sc::int
   (sc::ptr csym::__sighandler_t)))
 (sc::decl (csym::swapcontext)
  (sc::fn sc::int (sc::ptr csym::ucontext_t)
   (sc::ptr (sc::const csym::ucontext_t))))
 (sc::%line 1 "posix-out/uio.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/sys/_iovec.h") (sc::%line 46 "posix-out/uio.h")
 (sc::def (sc::enum csym::uio_rw) (csym::|@uio_read| csym::|@uio_write|))
 (sc::def (sc::enum csym::uio_seg)
  (csym::|@uio_userspace| csym::|@uio_sysspace| csym::|@uio_nocopy|))
 (sc::%line 102 "posix-out/uio.h")
 (sc::decl (csym::readv)
  (sc::fn csym::ssize_t sc::int (sc::ptr (sc::const (sc::struct csym::iovec)))
   sc::int))
 (sc::decl (csym::writev)
  (sc::fn csym::ssize_t sc::int (sc::ptr (sc::const (sc::struct csym::iovec)))
   sc::int))
 (sc::%line 1 "posix-out/ulimit.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 37 "posix-out/ulimit.h")
 (sc::decl (csym::ulimit) (sc::fn sc::long sc::int sc::va-arg))
 (sc::%line 1 "posix-out/un.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 47 "posix-out/un.h")
 (sc::def (sc::struct csym::sockaddr_un)
  (sc::decl csym::sun_len sc::unsigned-char)
  (sc::decl csym::sun_family csym::sa_family_t)
  (sc::decl csym::sun_path (sc::array sc::char 104)))
 (sc::%line 1 "posix-out/unistd.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/types.h")
 (sc::%line 1 "/usr/include/sys/unistd.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_null.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 318 "posix-out/unistd.h")
 (sc::decl (csym::_exit) (sc::fn sc::void sc::int))
 (sc::decl (csym::access)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::alarm) (sc::fn sc::unsigned-int sc::unsigned-int))
 (sc::decl (csym::chdir) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::chown)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::uid_t csym::gid_t))
 (sc::decl (csym::close) (sc::fn sc::int sc::int))
 (sc::decl (csym::dup) (sc::fn sc::int sc::int))
 (sc::decl (csym::dup2) (sc::fn sc::int sc::int sc::int))
 (sc::decl (csym::eaccess)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::execl)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   sc::va-arg))
 (sc::decl (csym::execle)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   sc::va-arg))
 (sc::decl (csym::execlp)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   sc::va-arg))
 (sc::decl (csym::execv)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::ptr sc::char)))))
 (sc::decl (csym::execve)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::ptr sc::char)))
   (sc::ptr (sc::const (sc::ptr sc::char)))))
 (sc::decl (csym::execvp)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::ptr sc::char)))))
 (sc::decl (csym::fork) (sc::fn sc::long sc::void))
 (sc::decl (csym::fpathconf) (sc::fn sc::long sc::int sc::int))
 (sc::decl (csym::getcwd)
  (sc::fn (sc::ptr sc::char) (sc::ptr sc::char) csym::size_t))
 (sc::decl (csym::getegid) (sc::fn csym::gid_t sc::void))
 (sc::decl (csym::geteuid) (sc::fn csym::uid_t sc::void))
 (sc::decl (csym::getgid) (sc::fn csym::gid_t sc::void))
 (sc::decl (csym::getgroups) (sc::fn sc::int sc::int (sc::array csym::gid_t)))
 (sc::decl (csym::getlogin) (sc::fn (sc::ptr sc::char) sc::void))
 (sc::decl (csym::getpgrp) (sc::fn sc::long sc::void))
 (sc::decl (csym::getpid) (sc::fn sc::long sc::void))
 (sc::decl (csym::getppid) (sc::fn sc::long sc::void))
 (sc::decl (csym::getuid) (sc::fn csym::uid_t sc::void))
 (sc::decl (csym::isatty) (sc::fn sc::int sc::int))
 (sc::decl (csym::link)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::%line 353 "posix-out/unistd.h")
 (sc::decl (csym::pathconf)
  (sc::fn sc::long (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::pause) (sc::fn sc::int sc::void))
 (sc::decl (csym::pipe) (sc::fn sc::int (sc::ptr sc::int)))
 (sc::decl (csym::read)
  (sc::fn csym::ssize_t sc::int (sc::ptr sc::void) csym::size_t))
 (sc::decl (csym::rmdir) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::setgid) (sc::fn sc::int csym::gid_t))
 (sc::decl (csym::setpgid) (sc::fn sc::int sc::long sc::long))
 (sc::decl (csym::setproctitle csym::_fmt)
  (sc::fn sc::void (sc::ptr (sc::const sc::char)) sc::va-arg))
 (sc::decl (csym::setsid) (sc::fn sc::long sc::void))
 (sc::decl (csym::setuid) (sc::fn sc::int csym::uid_t))
 (sc::decl (csym::sleep) (sc::fn sc::unsigned-int sc::unsigned-int))
 (sc::decl (csym::sysconf) (sc::fn sc::long sc::int))
 (sc::decl (csym::tcgetpgrp) (sc::fn sc::long sc::int))
 (sc::decl (csym::tcsetpgrp) (sc::fn sc::int sc::int sc::long))
 (sc::decl (csym::ttyname) (sc::fn (sc::ptr sc::char) sc::int))
 (sc::decl (csym::unlink) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::write)
  (sc::fn csym::ssize_t sc::int (sc::ptr (sc::const sc::void)) csym::size_t))
 (sc::decl (csym::confstr)
  (sc::fn csym::size_t sc::int (sc::ptr sc::char) csym::size_t))
 (sc::decl (csym::getopt)
  (sc::fn sc::int sc::int (sc::array (sc::const (sc::ptr sc::char)))
   (sc::ptr (sc::const sc::char))))
 (sc::extern-decl csym::optarg (sc::ptr sc::char))
 (sc::extern-decl csym::optind sc::int) (sc::extern-decl csym::opterr sc::int)
 (sc::extern-decl csym::optopt sc::int)
 (sc::decl (csym::fsync) (sc::fn sc::int sc::int))
 (sc::%line 398 "posix-out/unistd.h")
 (sc::decl (csym::getlogin_r) (sc::fn sc::int (sc::ptr sc::char) sc::int))
 (sc::decl (csym::fchown) (sc::fn sc::int sc::int csym::uid_t csym::gid_t))
 (sc::decl (csym::readlink)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr sc::char) sc::int))
 (sc::decl (csym::gethostname)
  (sc::fn sc::int (sc::ptr sc::char) csym::size_t))
 (sc::decl (csym::setegid) (sc::fn sc::int csym::gid_t))
 (sc::decl (csym::seteuid) (sc::fn sc::int csym::uid_t))
 (sc::%line 418 "posix-out/unistd.h")
 (sc::decl (csym::symlink)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::crypt)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::encrypt) (sc::fn sc::int (sc::ptr sc::char) sc::int))
 (sc::decl (csym::fchdir) (sc::fn sc::int sc::int))
 (sc::decl (csym::gethostid) (sc::fn sc::long sc::void))
 (sc::decl (csym::getpgid csym::_pid) (sc::fn sc::int sc::long))
 (sc::decl (csym::getsid csym::_pid) (sc::fn sc::int sc::long))
 (sc::decl (csym::getwd) (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)))
 (sc::decl (csym::lchown)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::uid_t csym::gid_t))
 (sc::decl (csym::lockf) (sc::fn sc::int sc::int sc::int csym::off_t))
 (sc::decl (csym::nice) (sc::fn sc::int sc::int))
 (sc::decl (csym::pread)
  (sc::fn csym::ssize_t sc::int (sc::ptr sc::void) csym::size_t csym::off_t))
 (sc::decl (csym::pwrite)
  (sc::fn csym::ssize_t sc::int (sc::ptr (sc::const sc::void)) csym::size_t
   csym::off_t))
 (sc::decl (csym::setpgrp csym::_pid csym::_pgrp)
  (sc::fn sc::int sc::long sc::long))
 (sc::decl (csym::setregid) (sc::fn sc::int csym::gid_t csym::gid_t))
 (sc::decl (csym::setreuid) (sc::fn sc::int csym::uid_t csym::uid_t))
 (sc::decl (csym::sync) (sc::fn sc::void sc::void))
 (sc::decl (csym::ualarm)
  (sc::fn csym::useconds_t csym::useconds_t csym::useconds_t))
 (sc::decl (csym::usleep) (sc::fn sc::int csym::useconds_t))
 (sc::decl (csym::vfork) (sc::fn sc::long sc::void))
 (sc::%line 453 "posix-out/unistd.h")
 (sc::decl (csym::brk) (sc::fn sc::int (sc::ptr (sc::const sc::void))))
 (sc::decl (csym::chroot) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::getdtablesize) (sc::fn sc::int sc::void))
 (sc::decl (csym::getpagesize) (sc::fn sc::int sc::void))
 (sc::decl (csym::getpass)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::sbrk) (sc::fn (sc::ptr sc::void) csym::intptr_t))
 (sc::decl (csym::acct) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::async_daemon) (sc::fn sc::int sc::void))
 (sc::decl (csym::check_utility_compat)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::crypt_get_format)
  (sc::fn (sc::ptr (sc::const sc::char)) sc::void))
 (sc::decl (csym::crypt_set_format)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::des_cipher)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr sc::char) sc::long
   sc::int))
 (sc::decl (csym::des_setkey csym::key)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::endusershell) (sc::fn sc::void sc::void))
 (sc::decl (csym::exect)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::ptr sc::char)))
   (sc::ptr (sc::const (sc::ptr sc::char)))))
 (sc::decl (csym::|EXECV@p|)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::ptr sc::char)))))
 (sc::decl (csym::fflagstostr) (sc::fn (sc::ptr sc::char) csym::u_long))
 (sc::decl (csym::getdomainname) (sc::fn sc::int (sc::ptr sc::char) sc::int))
 (sc::decl (csym::getgrouplist)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::gid_t
   (sc::ptr csym::gid_t) (sc::ptr sc::int)))
 (sc::decl (csym::getmode)
  (sc::fn csym::mode_t (sc::ptr (sc::const sc::void)) csym::mode_t))
 (sc::decl (csym::getpeereid)
  (sc::fn sc::int sc::int (sc::ptr csym::uid_t) (sc::ptr csym::gid_t)))
 (sc::decl (csym::getresgid)
  (sc::fn sc::int (sc::ptr csym::gid_t) (sc::ptr csym::gid_t)
   (sc::ptr csym::gid_t)))
 (sc::decl (csym::getresuid)
  (sc::fn sc::int (sc::ptr csym::uid_t) (sc::ptr csym::uid_t)
   (sc::ptr csym::uid_t)))
 (sc::decl (csym::getusershell) (sc::fn (sc::ptr sc::char) sc::void))
 (sc::decl (csym::initgroups)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::gid_t))
 (sc::decl (csym::iruserok)
  (sc::fn sc::int sc::unsigned-long sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::iruserok_sa)
  (sc::fn sc::int (sc::ptr (sc::const sc::void)) sc::int sc::int
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::issetugid) (sc::fn sc::int sc::void))
 (sc::decl (csym::mkdtemp) (sc::fn (sc::ptr sc::char) (sc::ptr sc::char)))
 (sc::decl (csym::mknod)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) csym::mode_t csym::dev_t))
 (sc::%line 492 "posix-out/unistd.h")
 (sc::decl (csym::mkstemps) (sc::fn sc::int (sc::ptr sc::char) sc::int))
 (sc::%line 497 "posix-out/unistd.h")
 (sc::decl (csym::nfsclnt) (sc::fn sc::int sc::int (sc::ptr sc::void)))
 (sc::decl (csym::nfssvc) (sc::fn sc::int sc::int (sc::ptr sc::void)))
 (sc::decl (csym::profil)
  (sc::fn sc::int (sc::ptr sc::char) csym::size_t csym::vm_offset_t sc::int))
 (sc::decl (csym::rcmd)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) sc::int
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char)) (sc::ptr sc::int)))
 (sc::decl (csym::rcmd_af)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) sc::int
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char)) (sc::ptr sc::int) sc::int))
 (sc::decl (csym::rcmdsh)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) sc::int
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::re_comp)
  (sc::fn (sc::ptr sc::char) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::re_exec) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::reboot) (sc::fn sc::int sc::int))
 (sc::decl (csym::revoke) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::rfork) (sc::fn sc::long sc::int))
 (sc::decl (csym::rfork_thread)
  (sc::fn sc::long sc::int (sc::ptr sc::void)
   (sc::ptr (sc::fn sc::int (sc::ptr sc::void))) (sc::ptr sc::void)))
 (sc::decl (csym::rresvport) (sc::fn sc::int (sc::ptr sc::int)))
 (sc::decl (csym::rresvport_af) (sc::fn sc::int (sc::ptr sc::int) sc::int))
 (sc::decl (csym::ruserok)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int
   (sc::ptr (sc::const sc::char)) (sc::ptr (sc::const sc::char))))
 (sc::%line 520 "posix-out/unistd.h")
 (sc::decl (csym::setdomainname)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int))
 (sc::decl (csym::setgroups)
  (sc::fn sc::int sc::int (sc::ptr (sc::const csym::gid_t))))
 (sc::decl (csym::sethostid) (sc::fn sc::void sc::long))
 (sc::decl (csym::sethostname)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) sc::int))
 (sc::%line 528 "posix-out/unistd.h")
 (sc::decl (csym::setlogin) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::setmode)
  (sc::fn (sc::ptr sc::void) (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::setresgid)
  (sc::fn sc::int csym::gid_t csym::gid_t csym::gid_t))
 (sc::decl (csym::setresuid)
  (sc::fn sc::int csym::uid_t csym::uid_t csym::uid_t))
 (sc::decl (csym::setrgid) (sc::fn sc::int csym::gid_t))
 (sc::decl (csym::setruid) (sc::fn sc::int csym::uid_t))
 (sc::decl (csym::setusershell) (sc::fn sc::void sc::void))
 (sc::decl (csym::strtofflags)
  (sc::fn sc::int (sc::ptr (sc::ptr sc::char)) (sc::ptr csym::u_long)
   (sc::ptr csym::u_long)))
 (sc::decl (csym::swapon) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::swapoff) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::syscall) (sc::fn sc::int sc::int sc::va-arg))
 (sc::decl (csym::__syscall) (sc::fn csym::off_t csym::quad_t sc::va-arg))
 (sc::decl (csym::ttyslot) (sc::fn sc::int sc::void))
 (sc::decl (csym::undelete) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::unwhiteout) (sc::fn sc::int (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::valloc) (sc::fn (sc::ptr sc::void) csym::size_t))
 (sc::extern-decl csym::optreset sc::int) (sc::%line 1 "posix-out/utime.h")
 (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 48 "posix-out/utime.h")
 (sc::def (sc::struct csym::utimbuf) (sc::decl csym::actime sc::double)
  (sc::decl csym::modtime sc::double))
 (sc::decl (csym::utime)
  (sc::fn sc::int (sc::ptr (sc::const sc::char))
   (sc::ptr (sc::const (sc::struct csym::utimbuf)))))
 (sc::%line 1 "posix-out/utsname.h") (sc::%line 47 "posix-out/utsname.h")
 (sc::def (sc::struct csym::utsname)
  (sc::decl csym::sysname (sc::array sc::char 256))
  (sc::decl csym::nodename (sc::array sc::char 256))
  (sc::decl csym::release (sc::array sc::char 256))
  (sc::decl csym::version (sc::array sc::char 256))
  (sc::decl csym::machine (sc::array sc::char 256)))
 (sc::%line 1 "/usr/include/sys/cdefs.h") (sc::%line 58 "posix-out/utsname.h")
 (sc::decl (csym::__xuname) (sc::fn sc::int sc::int (sc::ptr sc::void)))
 (sc::static-def (csym::uname csym::name)
  (sc::fn sc::int (sc::ptr (sc::struct csym::utsname)))
  (sc::return (csym::__xuname 256 (sc::cast (sc::ptr sc::void) csym::name))))
 (sc::%line 1 "posix-out/wait.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/types.h") (sc::%line 102 "posix-out/wait.h")
 (sc::decl (csym::wait) (sc::fn sc::long (sc::ptr sc::int)))
 (sc::decl (csym::waitpid)
  (sc::fn sc::long sc::long (sc::ptr sc::int) sc::int))
 (sc::decl (csym::wait3)
  (sc::fn sc::long (sc::ptr sc::int) sc::int
   (sc::ptr (sc::struct csym::rusage))))
 (sc::decl (csym::wait4)
  (sc::fn sc::long sc::long (sc::ptr sc::int) sc::int
   (sc::ptr (sc::struct csym::rusage))))
 (sc::%line 1 "posix-out/wchar.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_null.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/machine/_limits.h")
 (sc::%line 1 "/usr/include/_ctype.h") (sc::%line 77 "posix-out/wchar.h")
 (sc::deftype csym::mbstate_t csym::__mbstate_t)
 (sc::%line 94 "posix-out/wchar.h") (sc::deftype csym::wint_t csym::__wint_t)
 (sc::%line 107 "posix-out/wchar.h")
 (sc::decl (csym::btowc) (sc::fn csym::wint_t sc::int))
 (sc::decl (csym::fgetwc)
  (sc::fn csym::wint_t (sc::ptr (sc::struct csym::|__S@file|))))
 (sc::decl (csym::fgetws)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t) sc::int
   (sc::ptr (sc::struct csym::|__S@file|))))
 (sc::decl (csym::fputwc)
  (sc::fn csym::wint_t csym::wchar_t (sc::ptr (sc::struct csym::|__S@file|))))
 (sc::decl (csym::fputws)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::struct csym::|__S@file|))))
 (sc::decl (csym::fwide)
  (sc::fn sc::int (sc::ptr (sc::struct csym::|__S@file|)) sc::int))
 (sc::decl (csym::fwprintf)
  (sc::fn sc::int (sc::ptr (sc::struct csym::|__S@file|))
   (sc::ptr (sc::const csym::wchar_t)) sc::va-arg))
 (sc::decl (csym::fwscanf)
  (sc::fn sc::int (sc::ptr (sc::struct csym::|__S@file|))
   (sc::ptr (sc::const csym::wchar_t)) sc::va-arg))
 (sc::decl (csym::getwc)
  (sc::fn csym::wint_t (sc::ptr (sc::struct csym::|__S@file|))))
 (sc::decl (csym::getwchar) (sc::fn csym::wint_t sc::void))
 (sc::decl (csym::mbrlen)
  (sc::fn csym::size_t (sc::ptr (sc::const sc::char)) csym::size_t
   (sc::ptr csym::mbstate_t)))
 (sc::decl (csym::mbrtowc)
  (sc::fn csym::size_t (sc::ptr csym::wchar_t) (sc::ptr (sc::const sc::char))
   csym::size_t (sc::ptr csym::mbstate_t)))
 (sc::decl (csym::mbsinit)
  (sc::fn sc::int (sc::ptr (sc::const csym::mbstate_t))))
 (sc::decl (csym::mbsrtowcs)
  (sc::fn csym::size_t (sc::ptr csym::wchar_t)
   (sc::ptr (sc::ptr (sc::const sc::char))) csym::size_t
   (sc::ptr csym::mbstate_t)))
 (sc::decl (csym::putwc)
  (sc::fn csym::wint_t csym::wchar_t (sc::ptr (sc::struct csym::|__S@file|))))
 (sc::decl (csym::putwchar) (sc::fn csym::wint_t csym::wchar_t))
 (sc::decl (csym::swprintf)
  (sc::fn sc::int (sc::ptr csym::wchar_t) csym::size_t
   (sc::ptr (sc::const csym::wchar_t)) sc::va-arg))
 (sc::decl (csym::swscanf)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t)) sc::va-arg))
 (sc::decl (csym::ungetwc)
  (sc::fn csym::wint_t csym::wint_t (sc::ptr (sc::struct csym::|__S@file|))))
 (sc::decl (csym::vfwprintf)
  (sc::fn sc::int (sc::ptr (sc::struct csym::|__S@file|))
   (sc::ptr (sc::const csym::wchar_t)) csym::__va_list))
 (sc::decl (csym::vswprintf)
  (sc::fn sc::int (sc::ptr csym::wchar_t) csym::size_t
   (sc::ptr (sc::const csym::wchar_t)) csym::__va_list))
 (sc::decl (csym::vwprintf)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t)) csym::__va_list))
 (sc::decl (csym::wcrtomb)
  (sc::fn csym::size_t (sc::ptr sc::char) csym::wchar_t
   (sc::ptr csym::mbstate_t)))
 (sc::decl (csym::wcscat)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcschr)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr (sc::const csym::wchar_t))
   csym::wchar_t))
 (sc::decl (csym::wcscmp)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcscoll)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcscpy)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcscspn)
  (sc::fn csym::size_t (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcsftime)
  (sc::fn csym::size_t (sc::ptr csym::wchar_t) csym::size_t
   (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const (sc::struct csym::tm)))))
 (sc::decl (csym::wcslen)
  (sc::fn csym::size_t (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcsncat)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wcsncmp)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wcsncpy)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wcspbrk)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcsrchr)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr (sc::const csym::wchar_t))
   csym::wchar_t))
 (sc::decl (csym::wcsrtombs)
  (sc::fn csym::size_t (sc::ptr sc::char)
   (sc::ptr (sc::ptr (sc::const csym::wchar_t))) csym::size_t
   (sc::ptr csym::mbstate_t)))
 (sc::decl (csym::wcsspn)
  (sc::fn csym::size_t (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcsstr)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t))))
 (sc::decl (csym::wcsxfrm)
  (sc::fn csym::size_t (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wctob) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::wcstod)
  (sc::fn sc::double (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::ptr csym::wchar_t))))
 (sc::decl (csym::wcstok)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t)) (sc::ptr (sc::ptr csym::wchar_t))))
 (sc::decl (csym::wcstol)
  (sc::fn sc::long (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::ptr csym::wchar_t)) sc::int))
 (sc::decl (csym::wcstoul)
  (sc::fn sc::unsigned-long (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::ptr csym::wchar_t)) sc::int))
 (sc::decl (csym::wmemchr)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr (sc::const csym::wchar_t))
   csym::wchar_t csym::size_t))
 (sc::decl (csym::wmemcmp)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wmemcpy)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wmemmove)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wmemset)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr csym::wchar_t) csym::wchar_t
   csym::size_t))
 (sc::decl (csym::wprintf)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t)) sc::va-arg))
 (sc::decl (csym::wscanf)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t)) sc::va-arg))
 (sc::%line 189 "posix-out/wchar.h")
 (sc::decl (csym::vfwscanf)
  (sc::fn sc::int (sc::ptr (sc::struct csym::|__S@file|))
   (sc::ptr (sc::const csym::wchar_t)) csym::__va_list))
 (sc::decl (csym::vswscanf)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::const csym::wchar_t)) csym::__va_list))
 (sc::decl (csym::vwscanf)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t)) csym::__va_list))
 (sc::decl (csym::wcstof)
  (sc::fn sc::float (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::ptr csym::wchar_t))))
 (sc::decl (csym::wcstold)
  (sc::fn sc::long-double (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::ptr csym::wchar_t))))
 (sc::decl (csym::wcstoll)
  (sc::fn sc::long-long (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::ptr csym::wchar_t)) sc::int))
 (sc::decl (csym::wcstoull)
  (sc::fn sc::unsigned-long-long (sc::ptr (sc::const csym::wchar_t))
   (sc::ptr (sc::ptr csym::wchar_t)) sc::int))
 (sc::decl (csym::wcswidth)
  (sc::fn sc::int (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wcwidth) (sc::fn sc::int csym::wchar_t))
 (sc::decl (csym::fgetwln)
  (sc::fn (sc::ptr csym::wchar_t) (sc::ptr (sc::struct csym::|__S@file|))
   (sc::ptr csym::size_t)))
 (sc::decl (csym::mbsnrtowcs)
  (sc::fn csym::size_t (sc::ptr csym::wchar_t)
   (sc::ptr (sc::ptr (sc::const sc::char))) csym::size_t csym::size_t
   (sc::ptr csym::mbstate_t)))
 (sc::decl (csym::wcsnrtombs)
  (sc::fn csym::size_t (sc::ptr sc::char)
   (sc::ptr (sc::ptr (sc::const csym::wchar_t))) csym::size_t csym::size_t
   (sc::ptr csym::mbstate_t)))
 (sc::decl (csym::wcslcat)
  (sc::fn csym::size_t (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::decl (csym::wcslcpy)
  (sc::fn csym::size_t (sc::ptr csym::wchar_t)
   (sc::ptr (sc::const csym::wchar_t)) csym::size_t))
 (sc::%line 1 "posix-out/wctype.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h")
 (sc::%line 1 "/usr/include/_ctype.h") (sc::%line 40 "posix-out/wctype.h")
 (sc::deftype csym::wctrans_t sc::int)
 (sc::deftype csym::wctype_t sc::unsigned-long)
 (sc::%line 58 "posix-out/wctype.h")
 (sc::decl (csym::iswalnum) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswalpha) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswblank) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswcntrl) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswctype) (sc::fn sc::int csym::wint_t csym::wctype_t))
 (sc::decl (csym::iswdigit) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswgraph) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswlower) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswprint) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswpunct) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswspace) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswupper) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::iswxdigit) (sc::fn sc::int csym::wint_t))
 (sc::decl (csym::towctrans)
  (sc::fn csym::wint_t csym::wint_t csym::wctrans_t))
 (sc::decl (csym::towlower) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::towupper) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::wctrans)
  (sc::fn csym::wctrans_t (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::wctype)
  (sc::fn csym::wctype_t (sc::ptr (sc::const sc::char))))
 (sc::decl (csym::iswascii) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::iswhexnumber) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::iswideogram) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::iswnumber) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::iswphonogram) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::iswrune) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::iswspecial) (sc::fn csym::wint_t csym::wint_t))
 (sc::decl (csym::nextwctype)
  (sc::fn csym::wint_t csym::wint_t csym::wctype_t))
 (sc::%line 1 "posix-out/wordexp.h") (sc::%line 1 "/usr/include/sys/cdefs.h")
 (sc::%line 1 "/usr/include/sys/_types.h") (sc::%line 40 "posix-out/wordexp.h")
 (sc::def (sc::struct csym::unnamed25) (sc::decl csym::we_wordc csym::__size_t)
  (sc::decl csym::we_wordv (sc::ptr (sc::ptr sc::char)))
  (sc::decl csym::we_offs csym::__size_t)
  (sc::decl csym::we_strings (sc::ptr sc::char))
  (sc::decl csym::we_nbytes csym::__size_t))
 (sc::deftype csym::wordexp_t (sc::struct csym::unnamed25))
 (sc::%line 70 "posix-out/wordexp.h")
 (sc::decl (csym::wordexp)
  (sc::fn sc::int (sc::ptr (sc::const sc::char)) (sc::ptr csym::wordexp_t)
   sc::int))
 (sc::decl (csym::wordfree) (sc::fn sc::void (sc::ptr csym::wordexp_t)))
 (sc::%undef csym::|__@kame_netinet_in_h_included_|)
 (sc::%undef csym::|_@no_namespace_pollution|)
 (sc::%defconstant csym::time_t sc::double)
 (sc::%defconstant csym::pid_t sc::long)
 (sc::%defconstant csym::__complex__ (sc::c-exp ""))
 (sc::%defmacro csym::__extension__ (x) 'csym::x)
 (sc::%defmacro csym::__attribute__ (x) (list 'sc::c-exp "" x))
 (sc::%defconstant csym::__inline (sc::c-exp ""))
 (sc::%defmacro csym::__asm (x) (list 'sc::c-exp "" x))
 (sc::%defconstant csym::i386 1) (sc::%defconstant csym::unix 1)
 (sc::%defconstant csym::|__I386| 1) (sc::%defconstant csym::|__I386__| 1)
 (sc::%defconstant csym::__unix 1) (sc::%defconstant csym::__unix__ 1)
 (sc::%defconstant csym::|__@F@ree@BSD__| 1)
 (sc::%defconstant csym::|__@gnuc__| 3)
 (sc::%defconstant csym::|__@gnuc_minor__| 4)
 (sc::%defconstant csym::|__@size_type__| sc::unsigned-int)
 (sc::%defconstant csym::|__@ptrdiff_type__| sc::int)
 (sc::%defconstant csym::|__@wchar_type__| sc::int)
 (sc::%defconstant csym::|__@gnug__| 3)
 (sc::%defconstant csym::|__@line__| (sc::- 1234567890))
 (sc::%defconstant csym::|__@file__| (sc::c-exp ""))
 (sc::%defconstant csym::|__@date__| "Apr  4 2005")
 (sc::%defconstant csym::|__@time__| "17:10:49")
 (sc::%defconstant csym::|__@stdc__| 1)
 (sc::%defconstant csym::|__@stdc_hosted__| 1)
 (sc::%defconstant csym::|__@mcpp| 2)
 (sc::%defconstant csym::|_@sys_aio_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_time_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys__timeval_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys__types_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_cdefs_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|__@begin_decls| (sc::c-exp ""))
 (sc::%defconstant csym::|__@end_decls| (sc::c-exp ""))
 (sc::%defmacro csym::|__@gnuc_prereq__| (ma mi)
  (list 'sc::or
        (list 'sc::> '3 'csym::ma)
        (list 'sc::and
              (list 'sc::== '3 'csym::ma)
              (list 'sc::>= '4 'csym::mi))))
 (sc::%defmacro csym::|__@p| (protos) 'csym::protos)
 (sc::%defmacro csym::|__@concat1| (x y) '"<macro with ## operator>")
 (sc::%defmacro csym::|__@concat| (x y) 'csym::xy)
 (sc::%defmacro csym::|__@string| (x)
  (list 'csym::|_@c2sc_stringify| 'csym::x))
 (sc::%defmacro csym::|__@xstring| (x) '"x")
 (sc::%defconstant csym::__const (sc::const sc::int))
 (sc::%defconstant csym::__signed sc::signed-int)
 (sc::%defconstant csym::__volatile (sc::volatile sc::int))
 (sc::%defconstant csym::__dead2 (sc::c-exp ""))
 (sc::%defconstant csym::__pure2 (sc::c-exp ""))
 (sc::%defconstant csym::__unused (sc::c-exp ""))
 (sc::%defconstant csym::__used (sc::c-exp ""))
 (sc::%defconstant csym::__packed (sc::c-exp ""))
 (sc::%defmacro csym::__aligned (x) (list 'sc::c-exp "" x))
 (sc::%defmacro csym::__section (x) (list 'sc::c-exp "" x))
 (sc::%defconstant csym::__pure (sc::c-exp ""))
 (sc::%defconstant csym::__always_inline (sc::c-exp ""))
 (sc::%defmacro csym::__nonnull (x) (list 'sc::c-exp "" x))
 (sc::%defconstant csym::|__@long_long_supported| (sc::c-exp ""))
 (sc::%defconstant csym::__restrict (sc::c-exp ""))
 (sc::%defmacro csym::__predict_true (exp)
  (list 'csym::__builtin_expect 'csym::exp '1))
 (sc::%defmacro csym::__predict_false (exp)
  (list 'csym::__builtin_expect 'csym::exp '0))
 (sc::%defmacro csym::__offsetof (type field)
  (list 'sc::cast
        'csym::size_t
        (list 'sc::ptr
              (list 'sc::fref
                    (list 'sc::mref
                          (list 'sc::cast (list 'sc::ptr 'csym::type) '0))
                    'csym::field))))
 (sc::%defmacro csym::__rangeof (type start end)
  (list 'sc::-
        (list 'sc::cast
              'csym::size_t
              (list 'sc::ptr
                    (list 'sc::fref
                          (list 'sc::mref
                                (list 'sc::cast
                                      (list 'sc::ptr 'csym::type)
                                      '0))
                          'csym::end)))
        (list 'sc::cast
              'csym::size_t
              (list 'sc::ptr
                    (list 'sc::fref
                          (list 'sc::mref
                                (list 'sc::cast
                                      (list 'sc::ptr 'csym::type)
                                      '0))
                          'csym::start)))))
 (sc::%defmacro csym::__printflike (fmtarg firstvararg)
  (list 'sc::c-exp "" fmtarg firstvararg))
 (sc::%defmacro csym::__scanflike (fmtarg firstvararg)
  (list 'sc::c-exp "" fmtarg firstvararg))
 (sc::%defmacro csym::__printf0like (fmtarg firstvararg)
  (list 'sc::c-exp "" fmtarg firstvararg))
 (sc::%defmacro csym::__strong_reference (sym aliassym)
  (list 'sc::c-exp "extern __typeof ( ~0@*~a ) ~1@*~a ;" sym aliassym))
 (sc::%defmacro csym::__weak_reference (sym alias)
  (list 'sc::c-exp
        "__asm__ ( \".weak \" _C2SC_STRINGIFY ( ~1@*~a ) ) ; __asm__ ( \".equ \" _C2SC_STRINGIFY ( ~1@*~a ) \", \" _C2SC_STRINGIFY ( ~0@*~a ) )"
        sym
        alias))
 (sc::%defmacro csym::__warn_references (sym msg)
  (list 'sc::c-exp
        "__asm__ ( \".section .gnu.warning.\" _C2SC_STRINGIFY ( ~0@*~a ) ) ; __asm__ ( \".asciz \\\"\" ~1@*~a \"\\\"\" ) ; __asm__ ( \".previous\" )"
        sym
        msg))
 (sc::%defmacro csym::|__@idstring| (name string)
  (list 'sc::c-exp
        "__asm__ ( \".ident\\t\\\"\" ~1@*~a \"\\\"\" )"
        name
        string))
 (sc::%defmacro csym::|__@fbsdid| (s)
  (list 'sc::c-exp "__asm__ ( \".ident\\t\\\"\" ~0@*~a \"\\\"\" )" s))
 (sc::%defmacro csym::|__@rcsid| (s)
  (list 'sc::c-exp "__asm__ ( \".ident\\t\\\"\" ~0@*~a \"\\\"\" )" s))
 (sc::%defmacro csym::|__@rcsid_source| (s)
  (list 'sc::c-exp "__asm__ ( \".ident\\t\\\"\" ~0@*~a \"\\\"\" )" s))
 (sc::%defmacro csym::|__@sccsid| (s)
  (list 'sc::c-exp "__asm__ ( \".ident\\t\\\"\" ~0@*~a \"\\\"\" )" s))
 (sc::%defmacro csym::|__@copyright| (s)
  (list 'sc::c-exp "__asm__ ( \".ident\\t\\\"\" ~0@*~a \"\\\"\" )" s))
 (sc::%defmacro csym::|__@deconst| (type var)
  (list 'sc::cast
        'csym::type
        (list 'sc::cast
              'csym::uintptr_t
              (list 'sc::cast
                    (list 'sc::ptr (list 'sc::const 'sc::void))
                    'csym::var))))
 (sc::%defmacro csym::|__@devolatile| (type var)
  (list 'sc::cast
        'csym::type
        (list 'sc::cast
              'csym::uintptr_t
              (list 'sc::cast
                    (list 'sc::ptr (list 'sc::volatile 'sc::void))
                    'csym::var))))
 (sc::%defmacro csym::|__@dequalify| (type var)
  (list 'sc::cast
        'csym::type
        (list 'sc::cast
              'csym::uintptr_t
              (list 'sc::cast
                    (list 'sc::ptr (list 'sc::const 'sc::volatile 'sc::void))
                    'csym::var))))
 (sc::%defconstant csym::|__@posix_visible| 200112)
 (sc::%defconstant csym::|__@xsi_visible| 600)
 (sc::%defconstant csym::|__@bsd_visible| 1)
 (sc::%defconstant csym::|__@iso_c_visible| 1999)
 (sc::%defconstant csym::|_@machine__types_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|__@gnuc_va_list| (sc::c-exp ""))
 (sc::%defconstant csym::|_@suseconds_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@time_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_types_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@machine_endian_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@quad_highword| 1)
 (sc::%defconstant csym::|_@quad_lowword| 0)
 (sc::%defconstant csym::|_@little_endian| 1234)
 (sc::%defconstant csym::|_@big_endian| 4321)
 (sc::%defconstant csym::|_@pdp_endian| 3412)
 (sc::%defconstant csym::|_@byte_order| 1234)
 (sc::%defconstant csym::|@little_endian| 1234)
 (sc::%defconstant csym::|@big_endian| 4321)
 (sc::%defconstant csym::|@pdp_endian| 3412)
 (sc::%defconstant csym::|@byte_order| 1234)
 (sc::%defmacro csym::__word_swap_int_var (x)
  (list
   (list 'sc::begin
         (list 'sc::register-def 'csym::|__@x| 'csym::__uint32_t 'csym::x)
         'list
         'nil
         'csym::|__@x|)))
 (sc::%defmacro csym::__word_swap_int (x)
  (list
   (list 'sc::begin
         (list 'sc::register-def 'csym::|__@x| 'csym::__uint32_t 'csym::x)
         'list
         'nil
         'csym::|__@x|)))
 (sc::%defmacro csym::__byte_swap_int_var (x)
  (list
   (list 'sc::begin
         (list 'sc::register-def 'csym::|__@x| 'csym::__uint32_t 'csym::x)
         'list
         'nil
         'csym::|__@x|)))
 (sc::%defmacro csym::__byte_swap_int (x)
  (list
   (list 'sc::begin
         (list 'sc::register-def 'csym::|__@x| 'csym::__uint32_t 'csym::x)
         'list
         'nil
         'csym::|__@x|)))
 (sc::%defmacro csym::__byte_swap_word_var (x)
  (list
   (list 'sc::begin
         (list 'sc::register-def 'csym::|__@x| 'csym::__uint16_t 'csym::x)
         'list
         'nil
         'csym::|__@x|)))
 (sc::%defmacro csym::__byte_swap_word (x)
  (list
   (list 'sc::begin
         (list 'sc::register-def 'csym::|__@x| 'csym::__uint16_t 'csym::x)
         'list
         'nil
         'csym::|__@x|)))
 (sc::%defmacro csym::__htonl (x) (list 'csym::__bswap32 'csym::x))
 (sc::%defmacro csym::__htons (x) (list 'csym::__bswap16 'csym::x))
 (sc::%defmacro csym::__ntohl (x) (list 'csym::__bswap32 'csym::x))
 (sc::%defmacro csym::__ntohs (x) (list 'csym::__bswap16 'csym::x))
 (sc::%defconstant csym::|_@int8_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@int16_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@int32_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@int64_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@uint8_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@uint16_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@uint32_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@uint64_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@intptr_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@clock_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@clockid_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@dev_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@fflags_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@fsblkcnt_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@gid_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@in_addr_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@in_port_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@id_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@ino_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@key_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@lwpid_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@mode_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@nlink_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@off_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@pid_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@rlim_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@size_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@ssize_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@timer_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@uid_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@useconds_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_select_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys__sigset_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sig_words| 4)
 (sc::%defconstant csym::|_@sig_maxsig| 128)
 (sc::%defmacro csym::|_@sig_idx| (sig) (list 'sc::- 'csym::sig '1))
 (sc::%defmacro csym::|_@sig_word| (sig)
  (list 'sc::>> (list 'sc::- 'csym::sig '1) '5))
 (sc::%defmacro csym::|_@sig_bit| (sig)
  (list 'sc::<< '1 (list 'sc::bit-and (list 'sc::- 'csym::sig '1) '31)))
 (sc::%defmacro csym::|_@sig_valid| (sig)
  (list 'sc::and (list 'sc::<= 'csym::sig '128) (list 'sc::> 'csym::sig '0)))
 (sc::%defconstant csym::|_@sys_timespec_h_| (sc::c-exp ""))
 (sc::%defmacro csym::|@timeval_to_timespec| (tv ts)
  (list
   (list 'sc::do-while
         '0
         (list 'sc::=
               (list 'sc::fref (list 'sc::mref 'csym::ts) 'csym::tv_sec)
               (list 'sc::fref (list 'sc::mref 'csym::tv) 'csym::tv_sec))
         (list 'sc::=
               (list 'sc::fref (list 'sc::mref 'csym::ts) 'csym::tv_nsec)
               (list 'sc::*
                     (list 'sc::fref (list 'sc::mref 'csym::tv) 'csym::tv_usec)
                     '1000)))))
 (sc::%defmacro csym::|@timespec_to_timeval| (tv ts)
  (list
   (list 'sc::do-while
         '0
         (list 'sc::=
               (list 'sc::fref (list 'sc::mref 'csym::tv) 'csym::tv_sec)
               (list 'sc::fref (list 'sc::mref 'csym::ts) 'csym::tv_sec))
         (list 'sc::=
               (list 'sc::fref (list 'sc::mref 'csym::tv) 'csym::tv_usec)
               (list 'sc::/
                     (list 'sc::fref (list 'sc::mref 'csym::ts) 'csym::tv_nsec)
                     '1000)))))
 (sc::%defconstant csym::|_@sigset_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|@fd_setsize| (sc::cast sc::unsigned-int 1024))
 (sc::%defconstant csym::|_@nfdbits| (sc::* (sc::sizeof csym::__fd_mask) 8))
 (sc::%defconstant csym::|@nfdbits| (sc::* (sc::sizeof csym::__fd_mask) 8))
 (sc::%defmacro csym::_howmany (x y)
  (list 'sc::/ (list 'sc::+ 'csym::x (list 'sc::- 'csym::y '1)) 'csym::y))
 (sc::%defconstant csym::fds_bits csym::__fds_bits)
 (sc::%defmacro csym::__fdset_mask (n)
  (list 'sc::<<
        (list 'sc::cast 'csym::__fd_mask '1)
        (list 'sc::%
              'csym::n
              (list 'sc::* (list 'sc::sizeof 'csym::__fd_mask) '8))))
 (sc::%defmacro csym::|@fd_clr| (n p)
  (list 'sc::bit-and=
        (list 'sc::aref
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::__fds_bits)
              (list 'sc::/
                    'csym::n
                    (list 'sc::* (list 'sc::sizeof 'csym::__fd_mask) '8)))
        (list 'sc::bit-not
              (list 'sc::<<
                    (list 'sc::cast 'csym::__fd_mask '1)
                    (list 'sc::%
                          'csym::n
                          (list 'sc::*
                                (list 'sc::sizeof 'csym::__fd_mask)
                                '8))))))
 (sc::%defmacro csym::|@fd_copy| (f t)
  (list 'sc::cast
        'sc::void
        (list 'sc::= (list 'sc::mref 'csym::t) (list 'sc::mref 'csym::f))))
 (sc::%defmacro csym::|@fd_isset| (n p)
  (list 'sc::bit-and
        (list 'sc::aref
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::__fds_bits)
              (list 'sc::/
                    'csym::n
                    (list 'sc::* (list 'sc::sizeof 'csym::__fd_mask) '8)))
        (list 'sc::<<
              (list 'sc::cast 'csym::__fd_mask '1)
              (list 'sc::%
                    'csym::n
                    (list 'sc::* (list 'sc::sizeof 'csym::__fd_mask) '8)))))
 (sc::%defmacro csym::|@fd_set| (n p)
  (list 'sc::bit-or=
        (list 'sc::aref
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::__fds_bits)
              (list 'sc::/
                    'csym::n
                    (list 'sc::* (list 'sc::sizeof 'csym::__fd_mask) '8)))
        (list 'sc::<<
              (list 'sc::cast 'csym::__fd_mask '1)
              (list 'sc::%
                    'csym::n
                    (list 'sc::* (list 'sc::sizeof 'csym::__fd_mask) '8)))))
 (sc::%defmacro csym::|@fd_zero| (p)
  (list
   (list 'sc::do-while
         '0
         (list 'sc::decl 'csym::_p (list 'sc::ptr 'csym::fd_set))
         (list 'sc::decl 'csym::_n 'csym::__size_t)
         (list 'sc::= 'csym::_p 'csym::p)
         (list 'sc::=
               'csym::_n
               (list 'sc::/
                     (list 'sc::+
                           (list 'sc::cast 'sc::unsigned-int '1024)
                           (list 'sc::-
                                 (list 'sc::*
                                       (list 'sc::sizeof 'csym::__fd_mask)
                                       '8)
                                 '1))
                     (list 'sc::* (list 'sc::sizeof 'csym::__fd_mask) '8)))
         (list 'sc::while
               (list 'sc::> 'csym::_n '0)
               (list 'sc::=
                     (list 'sc::aref
                           (list 'sc::fref
                                 (list 'sc::mref 'csym::_p)
                                 'csym::__fds_bits)
                           (list 'sc::-- 'csym::_n))
                     '0)))))
 (sc::%defconstant csym::|_@select_declared| (sc::c-exp ""))
 (sc::%defmacro csym::major (x)
  (list 'sc::cast
        'sc::int
        (list 'sc::bit-and
              (list 'sc::>> (list 'sc::cast 'csym::u_int 'csym::x) '8)
              '255)))
 (sc::%defmacro csym::minor (x)
  (list 'sc::cast 'sc::int (list 'sc::bit-and 'csym::x '4294902015)))
 (sc::%defmacro csym::makedev (x y)
  (list 'sc::cast
        'csym::dev_t
        (list 'sc::bit-or (list 'sc::<< 'csym::x '8) 'csym::y)))
 (sc::%defconstant csym::|_@ftruncate_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@lseek_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@mmap_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@truncate_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|@dst_none| 0) (sc::%defconstant csym::|@dst_usa| 1)
 (sc::%defconstant csym::|@dst_aust| 2) (sc::%defconstant csym::|@dst_wet| 3)
 (sc::%defconstant csym::|@dst_met| 4) (sc::%defconstant csym::|@dst_eet| 5)
 (sc::%defconstant csym::|@dst_can| 6)
 (sc::%defmacro csym::timerclear (tvp)
  (list 'sc::=
        (list 'sc::fref (list 'sc::mref 'csym::tvp) 'csym::tv_sec)
        (list 'sc::=
              (list 'sc::fref (list 'sc::mref 'csym::tvp) 'csym::tv_usec)
              '0)))
 (sc::%defmacro csym::timerisset (tvp)
  (list 'sc::or
        (list 'sc::fref (list 'sc::mref 'csym::tvp) 'csym::tv_sec)
        (list 'sc::fref (list 'sc::mref 'csym::tvp) 'csym::tv_usec)))
 (sc::%defmacro csym::timercmp (tvp uvp cmp)
  (list 'sc::c-exp
        "( ( ( ~0@*~a ) -> tv_sec == ( ~1@*~a ) -> tv_sec ) ? ( ( ~0@*~a ) -> tv_usec ~2@*~a ( ~1@*~a ) -> tv_usec ) : ( ( ~0@*~a ) -> tv_sec ~2@*~a ( ~1@*~a ) -> tv_sec ) )"
        tvp
        uvp
        cmp))
 (sc::%defmacro csym::timeradd (tvp uvp vvp)
  (list
   (list 'sc::do-while
         '0
         (list 'sc::=
               (list 'sc::fref (list 'sc::mref 'csym::vvp) 'csym::tv_sec)
               (list 'sc::+
                     (list 'sc::fref (list 'sc::mref 'csym::tvp) 'csym::tv_sec)
                     (list 'sc::fref
                           (list 'sc::mref 'csym::uvp)
                           'csym::tv_sec)))
         (list 'sc::=
               (list 'sc::fref (list 'sc::mref 'csym::vvp) 'csym::tv_usec)
               (list 'sc::+
                     (list 'sc::fref
                           (list 'sc::mref 'csym::tvp)
                           'csym::tv_usec)
                     (list 'sc::fref
                           (list 'sc::mref 'csym::uvp)
                           'csym::tv_usec)))
         (list 'sc::if
               (list 'sc::>=
                     (list 'sc::fref
                           (list 'sc::mref 'csym::vvp)
                           'csym::tv_usec)
                     '1000000)
               (list 'sc::begin
                     (list 'sc::inc
                           (list 'sc::fref
                                 (list 'sc::mref 'csym::vvp)
                                 'csym::tv_sec))
                     (list 'sc::-=
                           (list 'sc::fref
                                 (list 'sc::mref 'csym::vvp)
                                 'csym::tv_usec)
                           '1000000))))))
 (sc::%defmacro csym::timersub (tvp uvp vvp)
  (list
   (list 'sc::do-while
         '0
         (list 'sc::=
               (list 'sc::fref (list 'sc::mref 'csym::vvp) 'csym::tv_sec)
               (list 'sc::-
                     (list 'sc::fref (list 'sc::mref 'csym::tvp) 'csym::tv_sec)
                     (list 'sc::fref
                           (list 'sc::mref 'csym::uvp)
                           'csym::tv_sec)))
         (list 'sc::=
               (list 'sc::fref (list 'sc::mref 'csym::vvp) 'csym::tv_usec)
               (list 'sc::-
                     (list 'sc::fref
                           (list 'sc::mref 'csym::tvp)
                           'csym::tv_usec)
                     (list 'sc::fref
                           (list 'sc::mref 'csym::uvp)
                           'csym::tv_usec)))
         (list 'sc::if
               (list 'sc::<
                     (list 'sc::fref
                           (list 'sc::mref 'csym::vvp)
                           'csym::tv_usec)
                     '0)
               (list 'sc::begin
                     (list 'sc::dec
                           (list 'sc::fref
                                 (list 'sc::mref 'csym::vvp)
                                 'csym::tv_sec))
                     (list 'sc::+=
                           (list 'sc::fref
                                 (list 'sc::mref 'csym::vvp)
                                 'csym::tv_usec)
                           '1000000))))))
 (sc::%defconstant csym::|@itimer_real| 0)
 (sc::%defconstant csym::|@itimer_virtual| 1)
 (sc::%defconstant csym::|@itimer_prof| 2)
 (sc::%defconstant csym::|@clock_realtime| 0)
 (sc::%defconstant csym::|@clock_virtual| 1)
 (sc::%defconstant csym::|@clock_prof| 2)
 (sc::%defconstant csym::|@clock_monotonic| 4)
 (sc::%defconstant csym::|@timer_reltime| 0)
 (sc::%defconstant csym::|@timer_abstime| 1)
 (sc::%defconstant csym::|_@time_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@null| (sc::cast (sc::ptr sc::void) 0))
 (sc::%defconstant csym::|@clk_tck| 128)
 (sc::%defconstant csym::|@clocks_per_sec| 128)
 (sc::%defconstant csym::|_@sys_signal_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@machine_signal_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@minsigstksz| (sc::* 512 4))
 (sc::%defconstant csym::|_@machine_trap_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@t_privinflt| 1)
 (sc::%defconstant csym::|@t_bptflt| 3)
 (sc::%defconstant csym::|@t_arithtrap| 6)
 (sc::%defconstant csym::|@t_protflt| 9)
 (sc::%defconstant csym::|@t_trctrap| 10)
 (sc::%defconstant csym::|@t_pageflt| 12)
 (sc::%defconstant csym::|@t_alignflt| 14)
 (sc::%defconstant csym::|@t_divide| 18) (sc::%defconstant csym::|@t_nmi| 19)
 (sc::%defconstant csym::|@t_oflow| 20) (sc::%defconstant csym::|@t_bound| 21)
 (sc::%defconstant csym::|@t_dna| 22)
 (sc::%defconstant csym::|@t_doubleflt| 23)
 (sc::%defconstant csym::|@t_fpopflt| 24)
 (sc::%defconstant csym::|@t_tssflt| 25)
 (sc::%defconstant csym::|@t_segnpflt| 26)
 (sc::%defconstant csym::|@t_stkflt| 27) (sc::%defconstant csym::|@t_mchk| 28)
 (sc::%defconstant csym::|@t_xmmflt| 29)
 (sc::%defconstant csym::|@t_reserved| 30)
 (sc::%defconstant csym::|@ill_resad_fault| csym::|@t_resadflt|)
 (sc::%defconstant csym::|@ill_privin_fault| 1)
 (sc::%defconstant csym::|@ill_resop_fault| csym::|@t_resopflt|)
 (sc::%defconstant csym::|@ill_align_fault| 14)
 (sc::%defconstant csym::|@ill_fpop_fault| 24)
 (sc::%defconstant csym::|@fpe_intovf| 1)
 (sc::%defconstant csym::|@fpe_intdiv| 2)
 (sc::%defconstant csym::|@fpe_fltdiv| 3)
 (sc::%defconstant csym::|@fpe_fltovf| 4)
 (sc::%defconstant csym::|@fpe_fltund| 5)
 (sc::%defconstant csym::|@fpe_fltres| 6)
 (sc::%defconstant csym::|@fpe_fltinv| 7)
 (sc::%defconstant csym::|@fpe_fltsub| 8)
 (sc::%defconstant csym::|@fpe_intovf_trap| 1)
 (sc::%defconstant csym::|@fpe_intdiv_trap| 2)
 (sc::%defconstant csym::|@fpe_fltdiv_trap| 3)
 (sc::%defconstant csym::|@fpe_fltovf_trap| 4)
 (sc::%defconstant csym::|@fpe_fltund_trap| 5)
 (sc::%defconstant csym::|@fpe_fpu_np_trap| 6)
 (sc::%defconstant csym::|@fpe_subrng_trap| 7)
 (sc::%defconstant csym::|@bus_page_fault| 12)
 (sc::%defconstant csym::|@bus_segnp_fault| 26)
 (sc::%defconstant csym::|@bus_stk_fault| 27)
 (sc::%defconstant csym::|@bus_segm_fault| 30)
 (sc::%defconstant csym::|@t_user| 256)
 (sc::%defconstant csym::sc_sp csym::sc_esp)
 (sc::%defconstant csym::sc_fp csym::sc_ebp)
 (sc::%defconstant csym::sc_pc csym::sc_eip)
 (sc::%defconstant csym::sc_ps csym::sc_efl)
 (sc::%defconstant csym::sc_eflags csym::sc_efl)
 (sc::%defconstant csym::|@sighup| 1) (sc::%defconstant csym::|@sigint| 2)
 (sc::%defconstant csym::|@sigquit| 3) (sc::%defconstant csym::|@sigill| 4)
 (sc::%defconstant csym::|@sigtrap| 5) (sc::%defconstant csym::|@sigabrt| 6)
 (sc::%defconstant csym::|@sigiot| 6) (sc::%defconstant csym::|@sigemt| 7)
 (sc::%defconstant csym::|@sigfpe| 8) (sc::%defconstant csym::|@sigkill| 9)
 (sc::%defconstant csym::|@sigbus| 10) (sc::%defconstant csym::|@sigsegv| 11)
 (sc::%defconstant csym::|@sigsys| 12) (sc::%defconstant csym::|@sigpipe| 13)
 (sc::%defconstant csym::|@sigalrm| 14) (sc::%defconstant csym::|@sigterm| 15)
 (sc::%defconstant csym::|@sigurg| 16) (sc::%defconstant csym::|@sigstop| 17)
 (sc::%defconstant csym::|@sigtstp| 18) (sc::%defconstant csym::|@sigcont| 19)
 (sc::%defconstant csym::|@sigchld| 20) (sc::%defconstant csym::|@sigttin| 21)
 (sc::%defconstant csym::|@sigttou| 22) (sc::%defconstant csym::|@sigio| 23)
 (sc::%defconstant csym::|@sigxcpu| 24) (sc::%defconstant csym::|@sigxfsz| 25)
 (sc::%defconstant csym::|@sigvtalrm| 26)
 (sc::%defconstant csym::|@sigprof| 27) (sc::%defconstant csym::|@sigwinch| 28)
 (sc::%defconstant csym::|@siginfo| 29) (sc::%defconstant csym::|@sigusr1| 30)
 (sc::%defconstant csym::|@sigusr2| 31) (sc::%defconstant csym::|@sigthr| 32)
 (sc::%defconstant csym::|@sig_dfl|
  (sc::cast (sc::ptr csym::__sighandler_t) 0))
 (sc::%defconstant csym::|@sig_ign|
  (sc::cast (sc::ptr csym::__sighandler_t) 1))
 (sc::%defconstant csym::|@sig_err|
  (sc::cast (sc::ptr csym::__sighandler_t) (sc::- 1)))
 (sc::%defconstant csym::sigev_signo
  (sc::fref csym::__sigev_u csym::__sigev_signo))
 (sc::%defconstant csym::sigev_notify_kqueue
  (sc::fref csym::__sigev_u csym::__sigev_notify_kqueue))
 (sc::%defconstant csym::|@sigev_none| 0)
 (sc::%defconstant csym::|@sigev_signal| 1)
 (sc::%defconstant csym::|@sigev_kevent| 3)
 (sc::%defconstant csym::sa_handler
  (sc::fref csym::__sigaction_u csym::__sa_handler))
 (sc::%defconstant csym::sa_sigaction
  (sc::fref csym::__sigaction_u csym::__sa_sigaction))
 (sc::%defconstant csym::|@sa_nocldstop| 8)
 (sc::%defconstant csym::|@sa_onstack| 1)
 (sc::%defconstant csym::|@sa_restart| 2)
 (sc::%defconstant csym::|@sa_resethand| 4)
 (sc::%defconstant csym::|@sa_nodefer| 16)
 (sc::%defconstant csym::|@sa_nocldwait| 32)
 (sc::%defconstant csym::|@sa_siginfo| 64) (sc::%defconstant csym::|@nsig| 32)
 (sc::%defconstant csym::|@si_user| 65537)
 (sc::%defconstant csym::|@si_queue| 65538)
 (sc::%defconstant csym::|@si_timer| 65539)
 (sc::%defconstant csym::|@si_asyncio| 65540)
 (sc::%defconstant csym::|@si_mesgq| 65541)
 (sc::%defconstant csym::|@si_undefined| 0)
 (sc::%defconstant csym::|@ss_onstack| 1)
 (sc::%defconstant csym::|@ss_disable| 4)
 (sc::%defconstant csym::|@sigstksz| (sc::+ (sc::* 512 4) 32768))
 (sc::%defconstant csym::|@sv_onstack| 1)
 (sc::%defconstant csym::|@sv_interrupt| 2)
 (sc::%defconstant csym::|@sv_resethand| 4)
 (sc::%defconstant csym::|@sv_nodefer| 16)
 (sc::%defconstant csym::|@sv_nocldstop| 8)
 (sc::%defconstant csym::|@sv_siginfo| 64)
 (sc::%defconstant csym::sv_onstack csym::sv_flags)
 (sc::%defmacro csym::sigmask (m) (list 'sc::<< '1 (list 'sc::- 'csym::m '1)))
 (sc::%defconstant csym::|@badsig|
  (sc::cast (sc::ptr csym::__sighandler_t) (sc::- 1)))
 (sc::%defconstant csym::|@sig_block| 1)
 (sc::%defconstant csym::|@sig_unblock| 2)
 (sc::%defconstant csym::|@sig_setmask| 3)
 (sc::%defconstant csym::|@aio_canceled| 1)
 (sc::%defconstant csym::|@aio_notcanceled| 2)
 (sc::%defconstant csym::|@aio_alldone| 3)
 (sc::%defconstant csym::|@lio_nop| 0) (sc::%defconstant csym::|@lio_write| 1)
 (sc::%defconstant csym::|@lio_read| 2)
 (sc::%defconstant csym::|@lio_nowait| 0)
 (sc::%defconstant csym::|@lio_wait| 1)
 (sc::%defconstant csym::|@aio_listio_max| 16)
 (sc::%defmacro csym::_assert (e)
  (list 'sc::c-exp
        "( ( ~0@*~a ) ? ( void ) 0 : __assert ( __func__ , , - 1234567890 , \"e\" ) )"
        e))
 (sc::%defmacro csym::assert (e)
  (list 'sc::c-exp
        "( ( ~0@*~a ) ? ( void ) 0 : __assert ( __func__ , , - 1234567890 , _C2SC_STRINGIFY ( ~0@*~a ) ) )"
        e))
 (sc::%defconstant csym::|_@complex_h| (sc::c-exp ""))
 (sc::%defconstant csym::|_@C@omplex| (sc::c-exp ""))
 (sc::%defconstant csym::|_@C@omplex_@I| (sc::c-exp "1.0fi"))
 (sc::%defconstant csym::complex (sc::c-exp ""))
 (sc::%defconstant csym::|@i| (sc::c-exp "1.0fi"))
 (sc::%defconstant csym::|_@cpio_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@c_issock| 49152)
 (sc::%defconstant csym::|@c_islnk| 40960)
 (sc::%defconstant csym::|@c_isctg| 36864)
 (sc::%defconstant csym::|@c_isreg| 32768)
 (sc::%defconstant csym::|@c_isblk| 24576)
 (sc::%defconstant csym::|@c_isdir| 16384)
 (sc::%defconstant csym::|@c_ischr| 8192)
 (sc::%defconstant csym::|@c_isfifo| 4096)
 (sc::%defconstant csym::|@c_isuid| 2048)
 (sc::%defconstant csym::|@c_isgid| 1024)
 (sc::%defconstant csym::|@c_isvtx| 512)
 (sc::%defconstant csym::|@c_irusr| 256)
 (sc::%defconstant csym::|@c_iwusr| 128) (sc::%defconstant csym::|@c_ixusr| 64)
 (sc::%defconstant csym::|@c_irgrp| 32) (sc::%defconstant csym::|@c_iwgrp| 16)
 (sc::%defconstant csym::|@c_ixgrp| 8) (sc::%defconstant csym::|@c_iroth| 4)
 (sc::%defconstant csym::|@c_iwoth| 2) (sc::%defconstant csym::|@c_ixoth| 1)
 (sc::%defconstant csym::|@magic| "070707")
 (sc::%defconstant csym::|_@ctype_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|__@ctype_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@ctype_a| (sc::cast sc::long 256))
 (sc::%defconstant csym::|_@ctype_c| (sc::cast sc::long 512))
 (sc::%defconstant csym::|_@ctype_d| (sc::cast sc::long 1024))
 (sc::%defconstant csym::|_@ctype_g| (sc::cast sc::long 2048))
 (sc::%defconstant csym::|_@ctype_l| (sc::cast sc::long 4096))
 (sc::%defconstant csym::|_@ctype_p| (sc::cast sc::long 8192))
 (sc::%defconstant csym::|_@ctype_s| (sc::cast sc::long 16384))
 (sc::%defconstant csym::|_@ctype_u| (sc::cast sc::long 32768))
 (sc::%defconstant csym::|_@ctype_x| (sc::cast sc::long 65536))
 (sc::%defconstant csym::|_@ctype_b| (sc::cast sc::long 131072))
 (sc::%defconstant csym::|_@ctype_r| (sc::cast sc::long 262144))
 (sc::%defconstant csym::|_@ctype_i| (sc::cast sc::long 524288))
 (sc::%defconstant csym::|_@ctype_t| (sc::cast sc::long 1048576))
 (sc::%defconstant csym::|_@ctype_q| (sc::cast sc::long 2097152))
 (sc::%defconstant csym::|_@ctype_sw0| (sc::cast sc::long 536870912))
 (sc::%defconstant csym::|_@ctype_sw1| (sc::cast sc::long 1073741824))
 (sc::%defconstant csym::|_@ctype_sw2| (sc::cast sc::long 2147483648))
 (sc::%defconstant csym::|_@ctype_sw3| (sc::cast sc::long 3221225472))
 (sc::%defconstant csym::|_@ctype_swm| (sc::cast sc::long 3758096384))
 (sc::%defconstant csym::|_@ctype_sws| 30)
 (sc::%defconstant csym::|_@runetype_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@cached_runes| (sc::<< 1 8))
 (sc::%defconstant csym::|_@crmask| (sc::bit-not (sc::- (sc::<< 1 8) 1)))
 (sc::%defconstant csym::|_@rune_magic_1| "RuneMagi")
 (sc::%defmacro csym::isalnum (c)
  (list 'csym::__istype
        'csym::c
        (list 'sc::bit-or
              (list 'sc::cast 'sc::long '256)
              (list 'sc::cast 'sc::long '1024))))
 (sc::%defmacro csym::isalpha (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '256)))
 (sc::%defmacro csym::iscntrl (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '512)))
 (sc::%defmacro csym::isdigit (c)
  (list 'csym::__isctype 'csym::c (list 'sc::cast 'sc::long '1024)))
 (sc::%defmacro csym::isgraph (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '2048)))
 (sc::%defmacro csym::islower (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '4096)))
 (sc::%defmacro csym::isprint (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '262144)))
 (sc::%defmacro csym::ispunct (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '8192)))
 (sc::%defmacro csym::isspace (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '16384)))
 (sc::%defmacro csym::isupper (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '32768)))
 (sc::%defmacro csym::isxdigit (c)
  (list 'csym::__isctype 'csym::c (list 'sc::cast 'sc::long '65536)))
 (sc::%defmacro csym::tolower (c) (list 'csym::__tolower 'csym::c))
 (sc::%defmacro csym::toupper (c) (list 'csym::__toupper 'csym::c))
 (sc::%defmacro csym::_tolower (c) (list 'csym::__tolower 'csym::c))
 (sc::%defmacro csym::_toupper (c) (list 'csym::__toupper 'csym::c))
 (sc::%defmacro csym::isascii (c)
  (list 'sc::== (list 'sc::bit-and 'csym::c (list 'sc::bit-not '127)) '0))
 (sc::%defmacro csym::toascii (c) (list 'sc::bit-and 'csym::c '127))
 (sc::%defmacro csym::isblank (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '131072)))
 (sc::%defmacro csym::digittoint (c) (list 'csym::__maskrune 'csym::c '255))
 (sc::%defmacro csym::ishexnumber (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '65536)))
 (sc::%defmacro csym::isideogram (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '524288)))
 (sc::%defmacro csym::isnumber (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '1024)))
 (sc::%defmacro csym::isphonogram (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '2097152)))
 (sc::%defmacro csym::isrune (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '4294967040)))
 (sc::%defmacro csym::isspecial (c)
  (list 'csym::__istype 'csym::c (list 'sc::cast 'sc::long '1048576)))
 (sc::%defconstant csym::|_@dirent_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_dirent_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@maxnamlen| 255)
 (sc::%defconstant csym::|@dt_unknown| 0) (sc::%defconstant csym::|@dt_fifo| 1)
 (sc::%defconstant csym::|@dt_chr| 2) (sc::%defconstant csym::|@dt_dir| 4)
 (sc::%defconstant csym::|@dt_blk| 6) (sc::%defconstant csym::|@dt_reg| 8)
 (sc::%defconstant csym::|@dt_lnk| 10) (sc::%defconstant csym::|@dt_sock| 12)
 (sc::%defconstant csym::|@dt_wht| 14)
 (sc::%defmacro csym::|@iftodt| (mode)
  (list 'sc::>> (list 'sc::bit-and 'csym::mode '61440) '12))
 (sc::%defmacro csym::|@dttoif| (dirtype) (list 'sc::<< 'csym::dirtype '12))
 (sc::%defmacro csym::|_@generic_dirsiz| (dp)
  (list 'sc::+
        (list 'sc::-
              (list 'sc::sizeof (list 'sc::struct 'csym::dirent))
              (list 'sc::+ '255 '1))
        (list 'sc::bit-and
              (list 'sc::+
                    (list 'sc::+
                          (list 'sc::fref
                                (list 'sc::mref 'csym::dp)
                                'csym::d_namlen)
                          '1)
                    '3)
              (list 'sc::bit-not '3))))
 (sc::%defconstant csym::d_ino csym::d_fileno)
 (sc::%defconstant csym::|@dirblksiz| 1024)
 (sc::%defmacro csym::dirfd (dirp)
  (list 'sc::fref (list 'sc::mref 'csym::dirp) 'csym::dd_fd))
 (sc::%defconstant csym::|@dtf_hidew| 1)
 (sc::%defconstant csym::|@dtf_nodup| 2)
 (sc::%defconstant csym::|@dtf_rewind| 4)
 (sc::%defconstant csym::|__@dtf_readall| 8)
 (sc::%defconstant csym::|_@dlfcn_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@rtld_lazy| 1) (sc::%defconstant csym::|@rtld_now| 2)
 (sc::%defconstant csym::|@rtld_modemask| 3)
 (sc::%defconstant csym::|@rtld_global| 256)
 (sc::%defconstant csym::|@rtld_local| 0)
 (sc::%defconstant csym::|@rtld_trace| 512)
 (sc::%defconstant csym::|@rtld_di_linkmap| 2)
 (sc::%defconstant csym::|@rtld_di_serinfo| 4)
 (sc::%defconstant csym::|@rtld_di_serinfosize| 5)
 (sc::%defconstant csym::|@rtld_di_origin| 6)
 (sc::%defconstant csym::|@rtld_di_max| 6)
 (sc::%defconstant csym::|@rtld_next| (sc::cast (sc::ptr sc::void) (sc::- 1)))
 (sc::%defconstant csym::|@rtld_default|
  (sc::cast (sc::ptr sc::void) (sc::- 2)))
 (sc::%defconstant csym::|@rtld_self| (sc::cast (sc::ptr sc::void) (sc::- 3)))
 (sc::%defconstant csym::|_@sys_errno_h_| (sc::c-exp ""))
 (sc::%defconstant csym::errno (sc::mref (csym::__error)))
 (sc::%defconstant csym::|@eperm| 1) (sc::%defconstant csym::|@enoent| 2)
 (sc::%defconstant csym::|@esrch| 3) (sc::%defconstant csym::|@eintr| 4)
 (sc::%defconstant csym::|@eio| 5) (sc::%defconstant csym::|@enxio| 6)
 (sc::%defconstant csym::|@e2big| 7) (sc::%defconstant csym::|@enoexec| 8)
 (sc::%defconstant csym::|@ebadf| 9) (sc::%defconstant csym::|@echild| 10)
 (sc::%defconstant csym::|@edeadlk| 11) (sc::%defconstant csym::|@enomem| 12)
 (sc::%defconstant csym::|@eacces| 13) (sc::%defconstant csym::|@efault| 14)
 (sc::%defconstant csym::|@enotblk| 15) (sc::%defconstant csym::|@ebusy| 16)
 (sc::%defconstant csym::|@eexist| 17) (sc::%defconstant csym::|@exdev| 18)
 (sc::%defconstant csym::|@enodev| 19) (sc::%defconstant csym::|@enotdir| 20)
 (sc::%defconstant csym::|@eisdir| 21) (sc::%defconstant csym::|@einval| 22)
 (sc::%defconstant csym::|@enfile| 23) (sc::%defconstant csym::|@emfile| 24)
 (sc::%defconstant csym::|@enotty| 25) (sc::%defconstant csym::|@etxtbsy| 26)
 (sc::%defconstant csym::|@efbig| 27) (sc::%defconstant csym::|@enospc| 28)
 (sc::%defconstant csym::|@espipe| 29) (sc::%defconstant csym::|@erofs| 30)
 (sc::%defconstant csym::|@emlink| 31) (sc::%defconstant csym::|@epipe| 32)
 (sc::%defconstant csym::|@edom| 33) (sc::%defconstant csym::|@erange| 34)
 (sc::%defconstant csym::|@eagain| 35)
 (sc::%defconstant csym::|@ewouldblock| 35)
 (sc::%defconstant csym::|@einprogress| 36)
 (sc::%defconstant csym::|@ealready| 37)
 (sc::%defconstant csym::|@enotsock| 38)
 (sc::%defconstant csym::|@edestaddrreq| 39)
 (sc::%defconstant csym::|@emsgsize| 40)
 (sc::%defconstant csym::|@eprototype| 41)
 (sc::%defconstant csym::|@enoprotoopt| 42)
 (sc::%defconstant csym::|@eprotonosupport| 43)
 (sc::%defconstant csym::|@esocktnosupport| 44)
 (sc::%defconstant csym::|@eopnotsupp| 45)
 (sc::%defconstant csym::|@enotsup| 45)
 (sc::%defconstant csym::|@epfnosupport| 46)
 (sc::%defconstant csym::|@eafnosupport| 47)
 (sc::%defconstant csym::|@eaddrinuse| 48)
 (sc::%defconstant csym::|@eaddrnotavail| 49)
 (sc::%defconstant csym::|@enetdown| 50)
 (sc::%defconstant csym::|@enetunreach| 51)
 (sc::%defconstant csym::|@enetreset| 52)
 (sc::%defconstant csym::|@econnaborted| 53)
 (sc::%defconstant csym::|@econnreset| 54)
 (sc::%defconstant csym::|@enobufs| 55) (sc::%defconstant csym::|@eisconn| 56)
 (sc::%defconstant csym::|@enotconn| 57)
 (sc::%defconstant csym::|@eshutdown| 58)
 (sc::%defconstant csym::|@etoomanyrefs| 59)
 (sc::%defconstant csym::|@etimedout| 60)
 (sc::%defconstant csym::|@econnrefused| 61)
 (sc::%defconstant csym::|@eloop| 62)
 (sc::%defconstant csym::|@enametoolong| 63)
 (sc::%defconstant csym::|@ehostdown| 64)
 (sc::%defconstant csym::|@ehostunreach| 65)
 (sc::%defconstant csym::|@enotempty| 66)
 (sc::%defconstant csym::|@eproclim| 67) (sc::%defconstant csym::|@eusers| 68)
 (sc::%defconstant csym::|@edquot| 69) (sc::%defconstant csym::|@estale| 70)
 (sc::%defconstant csym::|@eremote| 71) (sc::%defconstant csym::|@ebadrpc| 72)
 (sc::%defconstant csym::|@erpcmismatch| 73)
 (sc::%defconstant csym::|@eprogunavail| 74)
 (sc::%defconstant csym::|@eprogmismatch| 75)
 (sc::%defconstant csym::|@eprocunavail| 76)
 (sc::%defconstant csym::|@enolck| 77) (sc::%defconstant csym::|@enosys| 78)
 (sc::%defconstant csym::|@eftype| 79) (sc::%defconstant csym::|@eauth| 80)
 (sc::%defconstant csym::|@eneedauth| 81) (sc::%defconstant csym::|@eidrm| 82)
 (sc::%defconstant csym::|@enomsg| 83) (sc::%defconstant csym::|@eoverflow| 84)
 (sc::%defconstant csym::|@ecanceled| 85) (sc::%defconstant csym::|@eilseq| 86)
 (sc::%defconstant csym::|@enoattr| 87) (sc::%defconstant csym::|@edoofus| 88)
 (sc::%defconstant csym::|@elast| 88)
 (sc::%defconstant csym::|_@sys_fcntl_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@o_rdonly| 0) (sc::%defconstant csym::|@o_wronly| 1)
 (sc::%defconstant csym::|@o_rdwr| 2) (sc::%defconstant csym::|@o_accmode| 3)
 (sc::%defconstant csym::|@fread| 1) (sc::%defconstant csym::|@fwrite| 2)
 (sc::%defconstant csym::|@o_nonblock| 4)
 (sc::%defconstant csym::|@o_append| 8) (sc::%defconstant csym::|@o_shlock| 16)
 (sc::%defconstant csym::|@o_exlock| 32) (sc::%defconstant csym::|@o_async| 64)
 (sc::%defconstant csym::|@o_fsync| 128) (sc::%defconstant csym::|@o_sync| 128)
 (sc::%defconstant csym::|@o_nofollow| 256)
 (sc::%defconstant csym::|@o_creat| 512)
 (sc::%defconstant csym::|@o_trunc| 1024)
 (sc::%defconstant csym::|@o_excl| 2048)
 (sc::%defconstant csym::|@o_noctty| 32768)
 (sc::%defconstant csym::|@o_direct| 65536)
 (sc::%defconstant csym::|@fappend| 8) (sc::%defconstant csym::|@fasync| 64)
 (sc::%defconstant csym::|@ffsync| 128) (sc::%defconstant csym::|@fnonblock| 4)
 (sc::%defconstant csym::|@fndelay| 4) (sc::%defconstant csym::|@o_ndelay| 4)
 (sc::%defconstant csym::|@fposixshm| 256)
 (sc::%defconstant csym::|@f_dupfd| 0) (sc::%defconstant csym::|@f_getfd| 1)
 (sc::%defconstant csym::|@f_setfd| 2) (sc::%defconstant csym::|@f_getfl| 3)
 (sc::%defconstant csym::|@f_setfl| 4) (sc::%defconstant csym::|@f_getown| 5)
 (sc::%defconstant csym::|@f_setown| 6) (sc::%defconstant csym::|@f_getlk| 7)
 (sc::%defconstant csym::|@f_setlk| 8) (sc::%defconstant csym::|@f_setlkw| 9)
 (sc::%defconstant csym::|@fd_cloexec| 1) (sc::%defconstant csym::|@f_rdlck| 1)
 (sc::%defconstant csym::|@f_unlck| 2) (sc::%defconstant csym::|@f_wrlck| 3)
 (sc::%defconstant csym::|@lock_sh| 1) (sc::%defconstant csym::|@lock_ex| 2)
 (sc::%defconstant csym::|@lock_nb| 4) (sc::%defconstant csym::|@lock_un| 8)
 (sc::%defconstant csym::|_@fenv_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@fe_invalid| 1)
 (sc::%defconstant csym::|@fe_denormal| 2)
 (sc::%defconstant csym::|@fe_divbyzero| 4)
 (sc::%defconstant csym::|@fe_overflow| 8)
 (sc::%defconstant csym::|@fe_underflow| 16)
 (sc::%defconstant csym::|@fe_inexact| 32)
 (sc::%defconstant csym::|@fe_all_except| (sc::bit-or 4 2 32 1 8 16))
 (sc::%defconstant csym::|@fe_tonearest| 0)
 (sc::%defconstant csym::|@fe_downward| 1024)
 (sc::%defconstant csym::|@fe_upward| 2048)
 (sc::%defconstant csym::|@fe_towardzero| 3072)
 (sc::%defconstant csym::|_@round_mask| (sc::bit-or 0 1024 2048 3072))
 (sc::%defconstant csym::|@fe_dfl_env| (sc::ptr csym::__fe_dfl_env))
 (sc::%defmacro csym::__fldcw (__cw)
  (list 'sc::c-exp
        "__asm volatile ( \"fldcw %0\" : : \"m\" ( ~0@*~a ) )"
        __cw))
 (sc::%defmacro csym::__fldenv (__env)
  (list 'sc::c-exp
        "__asm volatile ( \"fldenv %0\" : : \"m\" ( ~0@*~a ) )"
        __env))
 (sc::%defmacro csym::__fnclex nil
  (list 'sc::c-exp "__asm volatile ( \"fnclex\" )"))
 (sc::%defmacro csym::__fnstenv (__env) (list 'sc::c-exp "" __env))
 (sc::%defmacro csym::__fnstcw (__cw) (list 'sc::c-exp "" __cw))
 (sc::%defmacro csym::__fnstsw (__sw) (list 'sc::c-exp "" __sw))
 (sc::%defmacro csym::__fwait nil
  (list 'sc::c-exp "__asm volatile ( \"fwait\" )"))
 (sc::%defconstant csym::|_@machine_float_h_| 1)
 (sc::%defconstant csym::|@flt_radix| 2)
 (sc::%defconstant csym::|@flt_rounds| (csym::__flt_rounds))
 (sc::%defconstant csym::|@flt_eval_method| (sc::- 1))
 (sc::%defconstant csym::|@decimal_dig| 21)
 (sc::%defconstant csym::|@flt_mant_dig| 24)
 (sc::%defconstant csym::|@flt_epsilon| (sc::cast sc::float 1.1920929d-7))
 (sc::%defconstant csym::|@flt_dig| 6)
 (sc::%defconstant csym::|@flt_min_exp| (sc::- 125))
 (sc::%defconstant csym::|@flt_min| (sc::cast sc::float 1.17549435d-38))
 (sc::%defconstant csym::|@flt_min_10_exp| (sc::- 37))
 (sc::%defconstant csym::|@flt_max_exp| 128)
 (sc::%defconstant csym::|@flt_max| (sc::cast sc::float 3.40282347d+38))
 (sc::%defconstant csym::|@flt_max_10_exp| 38)
 (sc::%defconstant csym::|@dbl_mant_dig| 53)
 (sc::%defconstant csym::|@dbl_epsilon| 2.220446049250313d-16)
 (sc::%defconstant csym::|@dbl_dig| 15)
 (sc::%defconstant csym::|@dbl_min_exp| (sc::- 1021))
 (sc::%defconstant csym::|@dbl_min| 2.2250738585072014d-308)
 (sc::%defconstant csym::|@dbl_min_10_exp| (sc::- 307))
 (sc::%defconstant csym::|@dbl_max_exp| 1024)
 (sc::%defconstant csym::|@dbl_max| 1.7976931348623157d+308)
 (sc::%defconstant csym::|@dbl_max_10_exp| 308)
 (sc::%defconstant csym::|@ldbl_mant_dig| 64)
 (sc::%defconstant csym::|@ldbl_epsilon|
  (sc::cast sc::long-double 1.8420217248550443d-19))
 (sc::%defconstant csym::|@ldbl_dig| 18)
 (sc::%defconstant csym::|@ldbl_min_exp| (sc::- 16381))
 (sc::%defconstant csym::|@ldbl_min|
  (sc::cast sc::long-double
   (sc::/ 2.9643938750474793d-323

 (sc::%defconstant csym::|@ldbl_min_10_exp| (sc::- 4931))
 (sc::%defconstant csym::|@ldbl_max_exp| 16384)
 (sc::%defconstant csym::|@ldbl_max|
  (sc::cast sc::long-double
   (sc::* 1.1897314953572318d+308

 (sc::%defconstant csym::|@ldbl_max_10_exp| 4932)
 (sc::%defconstant csym::|_@fmtmsg_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@mm_hard| 1) (sc::%defconstant csym::|@mm_soft| 2)
 (sc::%defconstant csym::|@mm_firm| 4) (sc::%defconstant csym::|@mm_appl| 16)
 (sc::%defconstant csym::|@mm_util| 32) (sc::%defconstant csym::|@mm_opsys| 64)
 (sc::%defconstant csym::|@mm_print| 256)
 (sc::%defconstant csym::|@mm_console| 512)
 (sc::%defconstant csym::|@mm_recover| 4096)
 (sc::%defconstant csym::|@mm_nrecov| 8192)
 (sc::%defconstant csym::|@mm_nosev| 0) (sc::%defconstant csym::|@mm_halt| 1)
 (sc::%defconstant csym::|@mm_error| 2)
 (sc::%defconstant csym::|@mm_warning| 3) (sc::%defconstant csym::|@mm_info| 4)
 (sc::%defconstant csym::|@mm_nulllbl| (sc::cast (sc::ptr sc::char) 0))
 (sc::%defconstant csym::|@mm_nullsev| 0)
 (sc::%defconstant csym::|@mm_nullmc| (sc::cast sc::long 0))
 (sc::%defconstant csym::|@mm_nulltxt| (sc::cast (sc::ptr sc::char) 0))
 (sc::%defconstant csym::|@mm_nullact| (sc::cast (sc::ptr sc::char) 0))
 (sc::%defconstant csym::|@mm_nulltag| (sc::cast (sc::ptr sc::char) 0))
 (sc::%defconstant csym::|@mm_ok| 0) (sc::%defconstant csym::|@mm_nomsg| 1)
 (sc::%defconstant csym::|@mm_nocon| 2) (sc::%defconstant csym::|@mm_notok| 3)
 (sc::%defconstant csym::|_@fnmatch_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@fnm_nomatch| 1)
 (sc::%defconstant csym::|@fnm_noescape| 1)
 (sc::%defconstant csym::|@fnm_pathname| 2)
 (sc::%defconstant csym::|@fnm_period| 4)
 (sc::%defconstant csym::|@fnm_nosys| (sc::- 1))
 (sc::%defconstant csym::|@fnm_leading_dir| 8)
 (sc::%defconstant csym::|@fnm_casefold| 16)
 (sc::%defconstant csym::|@fnm_ignorecase| 16)
 (sc::%defconstant csym::|@fnm_file_name| 2)
 (sc::%defconstant csym::|_@ftw_h| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_stat_h_| (sc::c-exp ""))
 (sc::%defconstant csym::st_atime (sc::fref csym::st_atimespec csym::tv_sec))
 (sc::%defconstant csym::st_mtime (sc::fref csym::st_mtimespec csym::tv_sec))
 (sc::%defconstant csym::st_ctime (sc::fref csym::st_ctimespec csym::tv_sec))
 (sc::%defconstant csym::st_birthtime
  (sc::fref csym::st_birthtimespec csym::tv_sec))
 (sc::%defconstant csym::|@s_isuid| 2048)
 (sc::%defconstant csym::|@s_isgid| 1024)
 (sc::%defconstant csym::|@s_istxt| 512)
 (sc::%defconstant csym::|@s_irwxu| 448)
 (sc::%defconstant csym::|@s_irusr| 256)
 (sc::%defconstant csym::|@s_iwusr| 128) (sc::%defconstant csym::|@s_ixusr| 64)
 (sc::%defconstant csym::|@s_iread| 256)
 (sc::%defconstant csym::|@s_iwrite| 128)
 (sc::%defconstant csym::|@s_iexec| 64) (sc::%defconstant csym::|@s_irwxg| 56)
 (sc::%defconstant csym::|@s_irgrp| 32) (sc::%defconstant csym::|@s_iwgrp| 16)
 (sc::%defconstant csym::|@s_ixgrp| 8) (sc::%defconstant csym::|@s_irwxo| 7)
 (sc::%defconstant csym::|@s_iroth| 4) (sc::%defconstant csym::|@s_iwoth| 2)
 (sc::%defconstant csym::|@s_ixoth| 1) (sc::%defconstant csym::|@s_ifmt| 61440)
 (sc::%defconstant csym::|@s_ififo| 4096)
 (sc::%defconstant csym::|@s_ifchr| 8192)
 (sc::%defconstant csym::|@s_ifdir| 16384)
 (sc::%defconstant csym::|@s_ifblk| 24576)
 (sc::%defconstant csym::|@s_ifreg| 32768)
 (sc::%defconstant csym::|@s_iflnk| 40960)
 (sc::%defconstant csym::|@s_ifsock| 49152)
 (sc::%defconstant csym::|@s_isvtx| 512)
 (sc::%defconstant csym::|@s_ifwht| 57344)
 (sc::%defmacro csym::|@s_isdir| (m)
  (list 'sc::== (list 'sc::bit-and 'csym::m '61440) '16384))
 (sc::%defmacro csym::|@s_ischr| (m)
  (list 'sc::== (list 'sc::bit-and 'csym::m '61440) '8192))
 (sc::%defmacro csym::|@s_isblk| (m)
  (list 'sc::== (list 'sc::bit-and 'csym::m '61440) '24576))
 (sc::%defmacro csym::|@s_isreg| (m)
  (list 'sc::== (list 'sc::bit-and 'csym::m '61440) '32768))
 (sc::%defmacro csym::|@s_isfifo| (m)
  (list 'sc::== (list 'sc::bit-and 'csym::m '61440) '4096))
 (sc::%defmacro csym::|@s_islnk| (m)
  (list 'sc::== (list 'sc::bit-and 'csym::m '61440) '40960))
 (sc::%defmacro csym::|@s_issock| (m)
  (list 'sc::== (list 'sc::bit-and 'csym::m '61440) '49152))
 (sc::%defmacro csym::|@s_iswht| (m)
  (list 'sc::== (list 'sc::bit-and 'csym::m '61440) '57344))
 (sc::%defconstant csym::|@accessperms| (sc::bit-or 448 56 7))
 (sc::%defconstant csym::|@allperms| (sc::bit-or 2048 1024 512 448 56 7))
 (sc::%defconstant csym::|@deffilemode| (sc::bit-or 256 128 32 16 4 2))
 (sc::%defconstant csym::|@s_blksize| 512)
 (sc::%defconstant csym::|@uf_settable| 65535)
 (sc::%defconstant csym::|@uf_nodump| 1)
 (sc::%defconstant csym::|@uf_immutable| 2)
 (sc::%defconstant csym::|@uf_append| 4)
 (sc::%defconstant csym::|@uf_opaque| 8)
 (sc::%defconstant csym::|@uf_nounlink| 16)
 (sc::%defconstant csym::|@sf_settable| 4294901760)
 (sc::%defconstant csym::|@sf_archived| 65536)
 (sc::%defconstant csym::|@sf_immutable| 131072)
 (sc::%defconstant csym::|@sf_append| 262144)
 (sc::%defconstant csym::|@sf_nounlink| 1048576)
 (sc::%defconstant csym::|@sf_snapshot| 2097152)
 (sc::%defconstant csym::|@ftw_f| 0) (sc::%defconstant csym::|@ftw_d| 1)
 (sc::%defconstant csym::|@ftw_dnr| 2) (sc::%defconstant csym::|@ftw_dp| 3)
 (sc::%defconstant csym::|@ftw_ns| 4) (sc::%defconstant csym::|@ftw_sl| 5)
 (sc::%defconstant csym::|@ftw_sln| 6) (sc::%defconstant csym::|@ftw_phys| 1)
 (sc::%defconstant csym::|@ftw_mount| 2)
 (sc::%defconstant csym::|@ftw_depth| 4)
 (sc::%defconstant csym::|@ftw_chdir| 8)
 (sc::%defconstant csym::|_@glob_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@glob_append| 1)
 (sc::%defconstant csym::|@glob_dooffs| 2)
 (sc::%defconstant csym::|@glob_err| 4) (sc::%defconstant csym::|@glob_mark| 8)
 (sc::%defconstant csym::|@glob_nocheck| 16)
 (sc::%defconstant csym::|@glob_nosort| 32)
 (sc::%defconstant csym::|@glob_noescape| 8192)
 (sc::%defconstant csym::|@glob_nospace| (sc::- 1))
 (sc::%defconstant csym::|@glob_aborted| (sc::- 2))
 (sc::%defconstant csym::|@glob_nomatch| (sc::- 3))
 (sc::%defconstant csym::|@glob_nosys| (sc::- 4))
 (sc::%defconstant csym::|@glob_altdirfunc| 64)
 (sc::%defconstant csym::|@glob_brace| 128)
 (sc::%defconstant csym::|@glob_magchar| 256)
 (sc::%defconstant csym::|@glob_nomagic| 512)
 (sc::%defconstant csym::|@glob_quote| 1024)
 (sc::%defconstant csym::|@glob_tilde| 2048)
 (sc::%defconstant csym::|@glob_limit| 4096)
 (sc::%defconstant csym::|@glob_maxpath| 4096)
 (sc::%defconstant csym::|@glob_abend| (sc::- 2))
 (sc::%defconstant csym::|_@grp_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@path_group| "/etc/group")
 (sc::%defconstant csym::|_@net_if_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@if_namesize| 16)
 (sc::%defconstant csym::|@ifnamsiz| 16)
 (sc::%defconstant csym::|@if_maxunit| 32767)
 (sc::%defconstant csym::|@iff_up| 1)
 (sc::%defconstant csym::|@iff_broadcast| 2)
 (sc::%defconstant csym::|@iff_debug| 4)
 (sc::%defconstant csym::|@iff_loopback| 8)
 (sc::%defconstant csym::|@iff_pointopoint| 16)
 (sc::%defconstant csym::|@iff_smart| 32)
 (sc::%defconstant csym::|@iff_running| 64)
 (sc::%defconstant csym::|@iff_noarp| 128)
 (sc::%defconstant csym::|@iff_promisc| 256)
 (sc::%defconstant csym::|@iff_allmulti| 512)
 (sc::%defconstant csym::|@iff_oactive| 1024)
 (sc::%defconstant csym::|@iff_simplex| 2048)
 (sc::%defconstant csym::|@iff_link0| 4096)
 (sc::%defconstant csym::|@iff_link1| 8192)
 (sc::%defconstant csym::|@iff_link2| 16384)
 (sc::%defconstant csym::|@iff_altphys| 16384)
 (sc::%defconstant csym::|@iff_multicast| 32768)
 (sc::%defconstant csym::|@iff_polling| 65536)
 (sc::%defconstant csym::|@iff_ppromisc| 131072)
 (sc::%defconstant csym::|@iff_monitor| 262144)
 (sc::%defconstant csym::|@iff_staticarp| 524288)
 (sc::%defconstant csym::|@iff_needsgiant| 1048576)
 (sc::%defconstant csym::|@iff_cantchange|
  (sc::bit-or 2 16 64 1024 2048 32768 512 32 256 65536))
 (sc::%defconstant csym::|@link_state_unknown| 0)
 (sc::%defconstant csym::|@link_state_down| 1)
 (sc::%defconstant csym::|@link_state_up| 2)
 (sc::%defmacro csym::|@IF_K@bps| (x) (list 'sc::* 'csym::x '1000))
 (sc::%defmacro csym::|@IF_M@bps| (x)
  (list 'sc::* (list 'sc::* 'csym::x '1000) '1000))
 (sc::%defmacro csym::|@IF_G@bps| (x)
  (list 'sc::* (list 'sc::* (list 'sc::* 'csym::x '1000) '1000) '1000))
 (sc::%defconstant csym::|@ifcap_rxcsum| 1)
 (sc::%defconstant csym::|@ifcap_txcsum| 2)
 (sc::%defconstant csym::|@ifcap_netcons| 4)
 (sc::%defconstant csym::|@ifcap_vlan_mtu| 8)
 (sc::%defconstant csym::|@ifcap_vlan_hwtagging| 16)
 (sc::%defconstant csym::|@ifcap_jumbo_mtu| 32)
 (sc::%defconstant csym::|@ifcap_polling| 64)
 (sc::%defconstant csym::|@ifcap_hwcsum| (sc::bit-or 1 2))
 (sc::%defconstant csym::|@ifq_maxlen| 50)
 (sc::%defconstant csym::|@ifnet_slowhz| 1)
 (sc::%defconstant csym::|@ifan_arrival| 0)
 (sc::%defconstant csym::|@ifan_departure| 1)
 (sc::%defconstant csym::ifr_addr (sc::fref csym::ifr_ifru csym::ifru_addr))
 (sc::%defconstant csym::ifr_dstaddr
  (sc::fref csym::ifr_ifru csym::ifru_dstaddr))
 (sc::%defconstant csym::ifr_broadaddr
  (sc::fref csym::ifr_ifru csym::ifru_broadaddr))
 (sc::%defconstant csym::ifr_flags
  (sc::aref (sc::fref csym::ifr_ifru csym::ifru_flags) 0))
 (sc::%defconstant csym::ifr_flagshigh
  (sc::aref (sc::fref csym::ifr_ifru csym::ifru_flags) 1))
 (sc::%defconstant csym::ifr_metric
  (sc::fref csym::ifr_ifru csym::ifru_metric))
 (sc::%defconstant csym::ifr_mtu (sc::fref csym::ifr_ifru csym::ifru_mtu))
 (sc::%defconstant csym::ifr_phys (sc::fref csym::ifr_ifru csym::ifru_phys))
 (sc::%defconstant csym::ifr_media (sc::fref csym::ifr_ifru csym::ifru_media))
 (sc::%defconstant csym::ifr_data (sc::fref csym::ifr_ifru csym::ifru_data))
 (sc::%defconstant csym::ifr_reqcap
  (sc::aref (sc::fref csym::ifr_ifru csym::ifru_cap) 0))
 (sc::%defconstant csym::ifr_curcap
  (sc::aref (sc::fref csym::ifr_ifru csym::ifru_cap) 1))
 (sc::%defconstant csym::ifr_index (sc::fref csym::ifr_ifru csym::ifru_index))
 (sc::%defmacro csym::|_@sizeof_addr_ifreq| (ifr)
  (list 'sc::if-exp
        (list 'sc::>
              (list 'sc::fref
                    (list 'sc::fref
                          (list 'sc::fref 'csym::ifr 'csym::ifr_ifru)
                          'csym::ifru_addr)
                    'csym::sa_len)
              (list 'sc::sizeof (list 'sc::struct 'csym::sockaddr)))
        (list 'sc::+
              (list 'sc::-
                    (list 'sc::sizeof (list 'sc::struct 'csym::ifreq))
                    (list 'sc::sizeof (list 'sc::struct 'csym::sockaddr)))
              (list 'sc::fref
                    (list 'sc::fref
                          (list 'sc::fref 'csym::ifr 'csym::ifr_ifru)
                          'csym::ifru_addr)
                    'csym::sa_len))
        (list 'sc::sizeof (list 'sc::struct 'csym::ifreq))))
 (sc::%defconstant csym::|@ifstatmax| 800)
 (sc::%defconstant csym::ifc_buf (sc::fref csym::ifc_ifcu csym::ifcu_buf))
 (sc::%defconstant csym::ifc_req (sc::fref csym::ifc_ifcu csym::ifcu_req))
 (sc::%defconstant csym::|@iflr_prefix| 32768)
 (sc::%defconstant csym::|_@netinet_in_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@ipproto_ip| 0)
 (sc::%defconstant csym::|@ipproto_icmp| 1)
 (sc::%defconstant csym::|@ipproto_tcp| 6)
 (sc::%defconstant csym::|@ipproto_udp| 17)
 (sc::%defconstant csym::|@inaddr_any| (sc::cast csym::u_int32_t 0))
 (sc::%defconstant csym::|@inaddr_broadcast|
  (sc::cast csym::u_int32_t 4294967295))
 (sc::%defconstant csym::|_@sa_family_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@struct_in_addr_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@byteorder_prototyped| (sc::c-exp ""))
 (sc::%defconstant csym::|_@byteorder_func_defined| (sc::c-exp ""))
 (sc::%defmacro csym::htonl (x) (list 'csym::__bswap32 'csym::x))
 (sc::%defmacro csym::htons (x) (list 'csym::__bswap16 'csym::x))
 (sc::%defmacro csym::ntohl (x) (list 'csym::__bswap32 'csym::x))
 (sc::%defmacro csym::ntohs (x) (list 'csym::__bswap16 'csym::x))
 (sc::%defconstant csym::|@ipproto_raw| 255)
 (sc::%defconstant csym::|@inet_addrstrlen| 16)
 (sc::%defconstant csym::|@ipproto_hopopts| 0)
 (sc::%defconstant csym::|@ipproto_igmp| 2)
 (sc::%defconstant csym::|@ipproto_ggp| 3)
 (sc::%defconstant csym::|@ipproto_ipv4| 4)
 (sc::%defconstant csym::|@ipproto_ipip| 4)
 (sc::%defconstant csym::|@ipproto_st| 7)
 (sc::%defconstant csym::|@ipproto_egp| 8)
 (sc::%defconstant csym::|@ipproto_pigp| 9)
 (sc::%defconstant csym::|@ipproto_rccmon| 10)
 (sc::%defconstant csym::|@ipproto_nvpii| 11)
 (sc::%defconstant csym::|@ipproto_pup| 12)
 (sc::%defconstant csym::|@ipproto_argus| 13)
 (sc::%defconstant csym::|@ipproto_emcon| 14)
 (sc::%defconstant csym::|@ipproto_xnet| 15)
 (sc::%defconstant csym::|@ipproto_chaos| 16)
 (sc::%defconstant csym::|@ipproto_mux| 18)
 (sc::%defconstant csym::|@ipproto_meas| 19)
 (sc::%defconstant csym::|@ipproto_hmp| 20)
 (sc::%defconstant csym::|@ipproto_prm| 21)
 (sc::%defconstant csym::|@ipproto_idp| 22)
 (sc::%defconstant csym::|@ipproto_trunk1| 23)
 (sc::%defconstant csym::|@ipproto_trunk2| 24)
 (sc::%defconstant csym::|@ipproto_leaf1| 25)
 (sc::%defconstant csym::|@ipproto_leaf2| 26)
 (sc::%defconstant csym::|@ipproto_rdp| 27)
 (sc::%defconstant csym::|@ipproto_irtp| 28)
 (sc::%defconstant csym::|@ipproto_tp| 29)
 (sc::%defconstant csym::|@ipproto_blt| 30)
 (sc::%defconstant csym::|@ipproto_nsp| 31)
 (sc::%defconstant csym::|@ipproto_inp| 32)
 (sc::%defconstant csym::|@ipproto_sep| 33)
 (sc::%defconstant csym::|@ipproto_3pc| 34)
 (sc::%defconstant csym::|@ipproto_idpr| 35)
 (sc::%defconstant csym::|@ipproto_xtp| 36)
 (sc::%defconstant csym::|@ipproto_ddp| 37)
 (sc::%defconstant csym::|@ipproto_cmtp| 38)
 (sc::%defconstant csym::|@ipproto_tpxx| 39)
 (sc::%defconstant csym::|@ipproto_il| 40)
 (sc::%defconstant csym::|@ipproto_ipv6| 41)
 (sc::%defconstant csym::|@ipproto_sdrp| 42)
 (sc::%defconstant csym::|@ipproto_routing| 43)
 (sc::%defconstant csym::|@ipproto_fragment| 44)
 (sc::%defconstant csym::|@ipproto_idrp| 45)
 (sc::%defconstant csym::|@ipproto_rsvp| 46)
 (sc::%defconstant csym::|@ipproto_gre| 47)
 (sc::%defconstant csym::|@ipproto_mhrp| 48)
 (sc::%defconstant csym::|@ipproto_bha| 49)
 (sc::%defconstant csym::|@ipproto_esp| 50)
 (sc::%defconstant csym::|@ipproto_ah| 51)
 (sc::%defconstant csym::|@ipproto_inlsp| 52)
 (sc::%defconstant csym::|@ipproto_swipe| 53)
 (sc::%defconstant csym::|@ipproto_nhrp| 54)
 (sc::%defconstant csym::|@ipproto_mobile| 55)
 (sc::%defconstant csym::|@ipproto_tlsp| 56)
 (sc::%defconstant csym::|@ipproto_skip| 57)
 (sc::%defconstant csym::|@ipproto_icmpv6| 58)
 (sc::%defconstant csym::|@ipproto_none| 59)
 (sc::%defconstant csym::|@ipproto_dstopts| 60)
 (sc::%defconstant csym::|@ipproto_ahip| 61)
 (sc::%defconstant csym::|@ipproto_cftp| 62)
 (sc::%defconstant csym::|@ipproto_hello| 63)
 (sc::%defconstant csym::|@ipproto_satexpak| 64)
 (sc::%defconstant csym::|@ipproto_kryptolan| 65)
 (sc::%defconstant csym::|@ipproto_rvd| 66)
 (sc::%defconstant csym::|@ipproto_ippc| 67)
 (sc::%defconstant csym::|@ipproto_adfs| 68)
 (sc::%defconstant csym::|@ipproto_satmon| 69)
 (sc::%defconstant csym::|@ipproto_visa| 70)
 (sc::%defconstant csym::|@ipproto_ipcv| 71)
 (sc::%defconstant csym::|@ipproto_cpnx| 72)
 (sc::%defconstant csym::|@ipproto_cphb| 73)
 (sc::%defconstant csym::|@ipproto_wsn| 74)
 (sc::%defconstant csym::|@ipproto_pvp| 75)
 (sc::%defconstant csym::|@ipproto_brsatmon| 76)
 (sc::%defconstant csym::|@ipproto_nd| 77)
 (sc::%defconstant csym::|@ipproto_wbmon| 78)
 (sc::%defconstant csym::|@ipproto_wbexpak| 79)
 (sc::%defconstant csym::|@ipproto_eon| 80)
 (sc::%defconstant csym::|@ipproto_vmtp| 81)
 (sc::%defconstant csym::|@ipproto_svmtp| 82)
 (sc::%defconstant csym::|@ipproto_vines| 83)
 (sc::%defconstant csym::|@ipproto_ttp| 84)
 (sc::%defconstant csym::|@ipproto_igp| 85)
 (sc::%defconstant csym::|@ipproto_dgp| 86)
 (sc::%defconstant csym::|@ipproto_tcf| 87)
 (sc::%defconstant csym::|@ipproto_igrp| 88)
 (sc::%defconstant csym::|@ipproto_ospfigp| 89)
 (sc::%defconstant csym::|@ipproto_srpc| 90)
 (sc::%defconstant csym::|@ipproto_larp| 91)
 (sc::%defconstant csym::|@ipproto_mtp| 92)
 (sc::%defconstant csym::|@ipproto_ax25| 93)
 (sc::%defconstant csym::|@ipproto_ipeip| 94)
 (sc::%defconstant csym::|@ipproto_micp| 95)
 (sc::%defconstant csym::|@ipproto_sccsp| 96)
 (sc::%defconstant csym::|@ipproto_etherip| 97)
 (sc::%defconstant csym::|@ipproto_encap| 98)
 (sc::%defconstant csym::|@ipproto_apes| 99)
 (sc::%defconstant csym::|@ipproto_gmtp| 100)
 (sc::%defconstant csym::|@ipproto_ipcomp| 108)
 (sc::%defconstant csym::|@ipproto_pim| 103)
 (sc::%defconstant csym::|@ipproto_pgm| 113)
 (sc::%defconstant csym::|@ipproto_pfsync| 240)
 (sc::%defconstant csym::|@ipproto_old_divert| 254)
 (sc::%defconstant csym::|@ipproto_max| 256)
 (sc::%defconstant csym::|@ipproto_done| 257)
 (sc::%defconstant csym::|@ipproto_divert| 258)
 (sc::%defconstant csym::|@ipport_reserved| 1024)
 (sc::%defconstant csym::|@ipport_hifirstauto| 49152)
 (sc::%defconstant csym::|@ipport_hilastauto| 65535)
 (sc::%defconstant csym::|@ipport_reservedstart| 600)
 (sc::%defconstant csym::|@ipport_max| 65535)
 (sc::%defmacro csym::|@in_classa| (i)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::cast 'csym::u_int32_t 'csym::i)
              '2147483648)
        '0))
 (sc::%defconstant csym::|@in_classa_net| 4278190080)
 (sc::%defconstant csym::|@in_classa_nshift| 24)
 (sc::%defconstant csym::|@in_classa_host| 16777215)
 (sc::%defconstant csym::|@in_classa_max| 128)
 (sc::%defmacro csym::|@in_classb| (i)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::cast 'csym::u_int32_t 'csym::i)
              '3221225472)
        '2147483648))
 (sc::%defconstant csym::|@in_classb_net| 4294901760)
 (sc::%defconstant csym::|@in_classb_nshift| 16)
 (sc::%defconstant csym::|@in_classb_host| 65535)
 (sc::%defconstant csym::|@in_classb_max| 65536)
 (sc::%defmacro csym::|@in_classc| (i)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::cast 'csym::u_int32_t 'csym::i)
              '3758096384)
        '3221225472))
 (sc::%defconstant csym::|@in_classc_net| 4294967040)
 (sc::%defconstant csym::|@in_classc_nshift| 8)
 (sc::%defconstant csym::|@in_classc_host| 255)
 (sc::%defmacro csym::|@in_classd| (i)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::cast 'csym::u_int32_t 'csym::i)
              '4026531840)
        '3758096384))
 (sc::%defconstant csym::|@in_classd_net| 4026531840)
 (sc::%defconstant csym::|@in_classd_nshift| 28)
 (sc::%defconstant csym::|@in_classd_host| 268435455)
 (sc::%defmacro csym::|@in_multicast| (i)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::cast 'csym::u_int32_t 'csym::i)
              '4026531840)
        '3758096384))
 (sc::%defmacro csym::|@in_experimental| (i)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::cast 'csym::u_int32_t 'csym::i)
              '4026531840)
        '4026531840))
 (sc::%defmacro csym::|@in_badclass| (i)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::cast 'csym::u_int32_t 'csym::i)
              '4026531840)
        '4026531840))
 (sc::%defconstant csym::|@inaddr_loopback|
  (sc::cast csym::u_int32_t 2130706433))
 (sc::%defconstant csym::|@inaddr_none| 4294967295)
 (sc::%defconstant csym::|@inaddr_unspec_group|
  (sc::cast csym::u_int32_t 3758096384))
 (sc::%defconstant csym::|@inaddr_allhosts_group|
  (sc::cast csym::u_int32_t 3758096385))
 (sc::%defconstant csym::|@inaddr_allrtrs_group|
  (sc::cast csym::u_int32_t 3758096386))
 (sc::%defconstant csym::|@inaddr_pfsync_group|
  (sc::cast csym::u_int32_t 3758096624))
 (sc::%defconstant csym::|@inaddr_allmdns_group|
  (sc::cast csym::u_int32_t 3758096635))
 (sc::%defconstant csym::|@inaddr_max_local_group|
  (sc::cast csym::u_int32_t 3758096639))
 (sc::%defconstant csym::|@in_loopbacknet| 127)
 (sc::%defconstant csym::|@ip_options| 1)
 (sc::%defconstant csym::|@ip_hdrincl| 2) (sc::%defconstant csym::|@ip_tos| 3)
 (sc::%defconstant csym::|@ip_ttl| 4) (sc::%defconstant csym::|@ip_recvopts| 5)
 (sc::%defconstant csym::|@ip_recvretopts| 6)
 (sc::%defconstant csym::|@ip_recvdstaddr| 7)
 (sc::%defconstant csym::|@ip_sendsrcaddr| 7)
 (sc::%defconstant csym::|@ip_retopts| 8)
 (sc::%defconstant csym::|@ip_multicast_if| 9)
 (sc::%defconstant csym::|@ip_multicast_ttl| 10)
 (sc::%defconstant csym::|@ip_multicast_loop| 11)
 (sc::%defconstant csym::|@ip_add_membership| 12)
 (sc::%defconstant csym::|@ip_drop_membership| 13)
 (sc::%defconstant csym::|@ip_multicast_vif| 14)
 (sc::%defconstant csym::|@ip_rsvp_on| 15)
 (sc::%defconstant csym::|@ip_rsvp_off| 16)
 (sc::%defconstant csym::|@ip_rsvp_vif_on| 17)
 (sc::%defconstant csym::|@ip_rsvp_vif_off| 18)
 (sc::%defconstant csym::|@ip_portrange| 19)
 (sc::%defconstant csym::|@ip_recvif| 20)
 (sc::%defconstant csym::|@ip_ipsec_policy| 21)
 (sc::%defconstant csym::|@ip_faith| 22)
 (sc::%defconstant csym::|@ip_onesbcast| 23)
 (sc::%defconstant csym::|@ip_fw_table_add| 40)
 (sc::%defconstant csym::|@ip_fw_table_del| 41)
 (sc::%defconstant csym::|@ip_fw_table_flush| 42)
 (sc::%defconstant csym::|@ip_fw_table_getsize| 43)
 (sc::%defconstant csym::|@ip_fw_table_list| 44)
 (sc::%defconstant csym::|@ip_fw_add| 50)
 (sc::%defconstant csym::|@ip_fw_del| 51)
 (sc::%defconstant csym::|@ip_fw_flush| 52)
 (sc::%defconstant csym::|@ip_fw_zero| 53)
 (sc::%defconstant csym::|@ip_fw_get| 54)
 (sc::%defconstant csym::|@ip_fw_resetlog| 55)
 (sc::%defconstant csym::|@ip_dummynet_configure| 60)
 (sc::%defconstant csym::|@ip_dummynet_del| 61)
 (sc::%defconstant csym::|@ip_dummynet_flush| 62)
 (sc::%defconstant csym::|@ip_dummynet_get| 64)
 (sc::%defconstant csym::|@ip_recvttl| 65)
 (sc::%defconstant csym::|@ip_default_multicast_ttl| 1)
 (sc::%defconstant csym::|@ip_default_multicast_loop| 1)
 (sc::%defconstant csym::|@ip_max_memberships| 20)
 (sc::%defconstant csym::|@ip_portrange_default| 0)
 (sc::%defconstant csym::|@ip_portrange_high| 1)
 (sc::%defconstant csym::|@ip_portrange_low| 2)
 (sc::%defconstant csym::|@ipproto_maxid| (sc::+ 51 1))
 (sc::%defconstant csym::|@ctl_ipproto_names|
  (sc::c-exp
   "{ { \"ip\", CTLTYPE_NODE }, { \"icmp\", CTLTYPE_NODE }, { \"igmp\", CTLTYPE_NODE }, { \"ggp\", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { \"tcp\", CTLTYPE_NODE }, { 0, 0 }, { \"egp\", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { \"pup\", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { \"udp\", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { \"idp\", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { \"ipsec\", CTLTYPE_NODE }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 }, { \"pim\", CTLTYPE_NODE }, }"))
 (sc::%defconstant csym::|@ipctl_forwarding| 1)
 (sc::%defconstant csym::|@ipctl_sendredirects| 2)
 (sc::%defconstant csym::|@ipctl_defttl| 3)
 (sc::%defconstant csym::|@ipctl_rtexpire| 5)
 (sc::%defconstant csym::|@ipctl_rtminexpire| 6)
 (sc::%defconstant csym::|@ipctl_rtmaxcache| 7)
 (sc::%defconstant csym::|@ipctl_sourceroute| 8)
 (sc::%defconstant csym::|@ipctl_directedbroadcast| 9)
 (sc::%defconstant csym::|@ipctl_intrqmaxlen| 10)
 (sc::%defconstant csym::|@ipctl_intrqdrops| 11)
 (sc::%defconstant csym::|@ipctl_stats| 12)
 (sc::%defconstant csym::|@ipctl_acceptsourceroute| 13)
 (sc::%defconstant csym::|@ipctl_fastforwarding| 14)
 (sc::%defconstant csym::|@ipctl_keepfaith| 15)
 (sc::%defconstant csym::|@ipctl_gif_ttl| 16)
 (sc::%defconstant csym::|@ipctl_maxid| 17)
 (sc::%defconstant csym::|@ipctl_names|
  (sc::c-exp
   "{ { 0, 0 }, { \"forwarding\", CTLTYPE_INT }, { \"redirect\", CTLTYPE_INT }, { \"ttl\", CTLTYPE_INT }, { \"mtu\", CTLTYPE_INT }, { \"rtexpire\", CTLTYPE_INT }, { \"rtminexpire\", CTLTYPE_INT }, { \"rtmaxcache\", CTLTYPE_INT }, { \"sourceroute\", CTLTYPE_INT }, { \"directed-broadcast\", CTLTYPE_INT }, { \"intr-queue-maxlen\", CTLTYPE_INT }, { \"intr-queue-drops\", CTLTYPE_INT }, { \"stats\", CTLTYPE_STRUCT }, { \"accept_sourceroute\", CTLTYPE_INT }, { \"fastforwarding\", CTLTYPE_INT }, }"))
 (sc::%defconstant csym::|__@kame_netinet_in_h_included_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@netinet6_in6_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|__@kame__| (sc::c-exp ""))
 (sc::%defconstant csym::|__@kame_version| "20010528/FreeBSD")
 (sc::%defconstant csym::|@ipv6port_reserved| 1024)
 (sc::%defconstant csym::|@ipv6port_anonmin| 49152)
 (sc::%defconstant csym::|@ipv6port_anonmax| 65535)
 (sc::%defconstant csym::|@ipv6port_reservedmin| 600)
 (sc::%defconstant csym::|@ipv6port_reservedmax| (sc::- 1024 1))
 (sc::%defconstant csym::s6_addr (sc::fref csym::__u6_addr csym::__u6_addr8))
 (sc::%defconstant csym::|@inet6_addrstrlen| 46)
 (sc::%defconstant csym::|@sin6_len| (sc::c-exp ""))
 (sc::%defconstant csym::|@in6addr_any_init|
  (sc::c-exp
   "{{{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }}}"))
 (sc::%defconstant csym::|@in6addr_loopback_init|
  (sc::c-exp
   "{{{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}"))
 (sc::%defconstant csym::|@in6addr_nodelocal_allnodes_init|
  (sc::c-exp
   "{{{ 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}"))
 (sc::%defconstant csym::|@in6addr_intfacelocal_allnodes_init|
  (sc::c-exp
   "{{{ 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}"))
 (sc::%defconstant csym::|@in6addr_linklocal_allnodes_init|
  (sc::c-exp
   "{{{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 }}}"))
 (sc::%defconstant csym::|@in6addr_linklocal_allrouters_init|
  (sc::c-exp
   "{{{ 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 }}}"))
 (sc::%defmacro csym::|@in6_are_addr_equal| (a b)
  (list 'sc::==
        (list 'csym::memcmp
              (list 'sc::ptr
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::a)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '0))
              (list 'sc::ptr
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::b)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '0))
              (list 'sc::sizeof (list 'sc::struct 'csym::in6_addr)))
        '0))
 (sc::%defmacro csym::|@in6_is_addr_unspecified| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '0)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '4)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '8)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '12)))))
              '0)))
 (sc::%defmacro csym::|@in6_is_addr_loopback| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '0)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '4)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '8)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '12)))))
              (list 'csym::__bswap32 '1))))
 (sc::%defmacro csym::|@in6_is_addr_v4compat| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '0)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '4)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '8)))))
              '0)
        (list 'sc::!=
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '12)))))
              '0)
        (list 'sc::!=
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '12)))))
              (list 'csym::__bswap32 '1))))
 (sc::%defmacro csym::|@in6_is_addr_v4mapped| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '0)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '4)))))
              '0)
        (list 'sc::==
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr (list 'sc::const 'csym::u_int32_t))
                          (list 'sc::cast
                                (list 'sc::ptr (list 'sc::const 'sc::void))
                                (list 'sc::ptr
                                      (list 'sc::aref
                                            (list 'sc::fref
                                                  (list 'sc::fref
                                                        (list 'sc::mref
                                                              'csym::a)
                                                        'csym::__u6_addr)
                                                  'csym::__u6_addr8)
                                            '8)))))
              (list 'csym::__bswap32 '65535))))
 (sc::%defconstant csym::|__@ipv6_addr_scope_nodelocal| 1)
 (sc::%defconstant csym::|__@ipv6_addr_scope_intfacelocal| 1)
 (sc::%defconstant csym::|__@ipv6_addr_scope_linklocal| 2)
 (sc::%defconstant csym::|__@ipv6_addr_scope_sitelocal| 5)
 (sc::%defconstant csym::|__@ipv6_addr_scope_orglocal| 8)
 (sc::%defconstant csym::|__@ipv6_addr_scope_global| 14)
 (sc::%defmacro csym::|@in6_is_addr_linklocal| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::aref
                    (list 'sc::fref
                          (list 'sc::fref
                                (list 'sc::mref 'csym::a)
                                'csym::__u6_addr)
                          'csym::__u6_addr8)
                    '0)
              '254)
        (list 'sc::==
              (list 'sc::bit-and
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::a)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '1)
                    '192)
              '128)))
 (sc::%defmacro csym::|@in6_is_addr_sitelocal| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::aref
                    (list 'sc::fref
                          (list 'sc::fref
                                (list 'sc::mref 'csym::a)
                                'csym::__u6_addr)
                          'csym::__u6_addr8)
                    '0)
              '254)
        (list 'sc::==
              (list 'sc::bit-and
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::a)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '1)
                    '192)
              '192)))
 (sc::%defmacro csym::|@in6_is_addr_multicast| (a)
  (list 'sc::==
        (list 'sc::aref
              (list 'sc::fref
                    (list 'sc::fref (list 'sc::mref 'csym::a) 'csym::__u6_addr)
                    'csym::__u6_addr8)
              '0)
        '255))
 (sc::%defmacro csym::|__@ipv6_addr_mc_scope| (a)
  (list 'sc::bit-and
        (list 'sc::aref
              (list 'sc::fref
                    (list 'sc::fref (list 'sc::mref 'csym::a) 'csym::__u6_addr)
                    'csym::__u6_addr8)
              '1)
        '15))
 (sc::%defmacro csym::|@in6_is_addr_mc_nodelocal| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::aref
                    (list 'sc::fref
                          (list 'sc::fref
                                (list 'sc::mref 'csym::a)
                                'csym::__u6_addr)
                          'csym::__u6_addr8)
                    '0)
              '255)
        (list 'sc::==
              (list 'sc::bit-and
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::a)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '1)
                    '15)
              '1)))
 (sc::%defmacro csym::|@in6_is_addr_mc_linklocal| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::aref
                    (list 'sc::fref
                          (list 'sc::fref
                                (list 'sc::mref 'csym::a)
                                'csym::__u6_addr)
                          'csym::__u6_addr8)
                    '0)
              '255)
        (list 'sc::==
              (list 'sc::bit-and
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::a)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '1)
                    '15)
              '2)))
 (sc::%defmacro csym::|@in6_is_addr_mc_sitelocal| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::aref
                    (list 'sc::fref
                          (list 'sc::fref
                                (list 'sc::mref 'csym::a)
                                'csym::__u6_addr)
                          'csym::__u6_addr8)
                    '0)
              '255)
        (list 'sc::==
              (list 'sc::bit-and
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::a)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '1)
                    '15)
              '5)))
 (sc::%defmacro csym::|@in6_is_addr_mc_orglocal| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::aref
                    (list 'sc::fref
                          (list 'sc::fref
                                (list 'sc::mref 'csym::a)
                                'csym::__u6_addr)
                          'csym::__u6_addr8)
                    '0)
              '255)
        (list 'sc::==
              (list 'sc::bit-and
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::a)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '1)
                    '15)
              '8)))
 (sc::%defmacro csym::|@in6_is_addr_mc_global| (a)
  (list 'sc::and
        (list 'sc::==
              (list 'sc::aref
                    (list 'sc::fref
                          (list 'sc::fref
                                (list 'sc::mref 'csym::a)
                                'csym::__u6_addr)
                          'csym::__u6_addr8)
                    '0)
              '255)
        (list 'sc::==
              (list 'sc::bit-and
                    (list 'sc::aref
                          (list 'sc::fref
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::a)
                                      'csym::__u6_addr)
                                'csym::__u6_addr8)
                          '1)
                    '15)
              '14)))
 (sc::%defconstant csym::|@ipv6_sockopt_reserved1| 3)
 (sc::%defconstant csym::|@ipv6_unicast_hops| 4)
 (sc::%defconstant csym::|@ipv6_multicast_if| 9)
 (sc::%defconstant csym::|@ipv6_multicast_hops| 10)
 (sc::%defconstant csym::|@ipv6_multicast_loop| 11)
 (sc::%defconstant csym::|@ipv6_join_group| 12)
 (sc::%defconstant csym::|@ipv6_leave_group| 13)
 (sc::%defconstant csym::|@ipv6_portrange| 14)
 (sc::%defconstant csym::|@icmp6_filter| 18)
 (sc::%defconstant csym::|@ipv6_checksum| 26)
 (sc::%defconstant csym::|@ipv6_v6only| 27)
 (sc::%defconstant csym::|@ipv6_bindv6only| 27)
 (sc::%defconstant csym::|@ipv6_ipsec_policy| 28)
 (sc::%defconstant csym::|@ipv6_faith| 29)
 (sc::%defconstant csym::|@ipv6_fw_add| 30)
 (sc::%defconstant csym::|@ipv6_fw_del| 31)
 (sc::%defconstant csym::|@ipv6_fw_flush| 32)
 (sc::%defconstant csym::|@ipv6_fw_zero| 33)
 (sc::%defconstant csym::|@ipv6_fw_get| 34)
 (sc::%defconstant csym::|@ipv6_rthdrdstopts| 35)
 (sc::%defconstant csym::|@ipv6_recvpktinfo| 36)
 (sc::%defconstant csym::|@ipv6_recvhoplimit| 37)
 (sc::%defconstant csym::|@ipv6_recvrthdr| 38)
 (sc::%defconstant csym::|@ipv6_recvhopopts| 39)
 (sc::%defconstant csym::|@ipv6_recvdstopts| 40)
 (sc::%defconstant csym::|@ipv6_use_min_mtu| 42)
 (sc::%defconstant csym::|@ipv6_recvpathmtu| 43)
 (sc::%defconstant csym::|@ipv6_pathmtu| 44)
 (sc::%defconstant csym::|@ipv6_pktinfo| 46)
 (sc::%defconstant csym::|@ipv6_hoplimit| 47)
 (sc::%defconstant csym::|@ipv6_nexthop| 48)
 (sc::%defconstant csym::|@ipv6_hopopts| 49)
 (sc::%defconstant csym::|@ipv6_dstopts| 50)
 (sc::%defconstant csym::|@ipv6_rthdr| 51)
 (sc::%defconstant csym::|@ipv6_recvtclass| 57)
 (sc::%defconstant csym::|@ipv6_autoflowlabel| 59)
 (sc::%defconstant csym::|@ipv6_tclass| 61)
 (sc::%defconstant csym::|@ipv6_dontfrag| 62)
 (sc::%defconstant csym::|@ipv6_prefer_tempaddr| 63)
 (sc::%defconstant csym::|@ipv6_rthdr_loose| 0)
 (sc::%defconstant csym::|@ipv6_rthdr_strict| 1)
 (sc::%defconstant csym::|@ipv6_rthdr_type_0| 0)
 (sc::%defconstant csym::|@ipv6_default_multicast_hops| 1)
 (sc::%defconstant csym::|@ipv6_default_multicast_loop| 1)
 (sc::%defconstant csym::|@ipv6_portrange_default| 0)
 (sc::%defconstant csym::|@ipv6_portrange_high| 1)
 (sc::%defconstant csym::|@ipv6_portrange_low| 2)
 (sc::%defconstant csym::|@ipv6proto_maxid| (sc::+ 103 1))
 (sc::%defconstant csym::|@ipv6ctl_forwarding| 1)
 (sc::%defconstant csym::|@ipv6ctl_sendredirects| 2)
 (sc::%defconstant csym::|@ipv6ctl_defhlim| 3)
 (sc::%defconstant csym::|@ipv6ctl_forwsrcrt| 5)
 (sc::%defconstant csym::|@ipv6ctl_stats| 6)
 (sc::%defconstant csym::|@ipv6ctl_mrtstats| 7)
 (sc::%defconstant csym::|@ipv6ctl_mrtproto| 8)
 (sc::%defconstant csym::|@ipv6ctl_maxfragpackets| 9)
 (sc::%defconstant csym::|@ipv6ctl_sourcecheck| 10)
 (sc::%defconstant csym::|@ipv6ctl_sourcecheck_logint| 11)
 (sc::%defconstant csym::|@ipv6ctl_accept_rtadv| 12)
 (sc::%defconstant csym::|@ipv6ctl_keepfaith| 13)
 (sc::%defconstant csym::|@ipv6ctl_log_interval| 14)
 (sc::%defconstant csym::|@ipv6ctl_hdrnestlimit| 15)
 (sc::%defconstant csym::|@ipv6ctl_dad_count| 16)
 (sc::%defconstant csym::|@ipv6ctl_auto_flowlabel| 17)
 (sc::%defconstant csym::|@ipv6ctl_defmcasthlim| 18)
 (sc::%defconstant csym::|@ipv6ctl_gif_hlim| 19)
 (sc::%defconstant csym::|@ipv6ctl_kame_version| 20)
 (sc::%defconstant csym::|@ipv6ctl_use_deprecated| 21)
 (sc::%defconstant csym::|@ipv6ctl_rr_prune| 22)
 (sc::%defconstant csym::|@ipv6ctl_v6only| 24)
 (sc::%defconstant csym::|@ipv6ctl_rtexpire| 25)
 (sc::%defconstant csym::|@ipv6ctl_rtminexpire| 26)
 (sc::%defconstant csym::|@ipv6ctl_rtmaxcache| 27)
 (sc::%defconstant csym::|@ipv6ctl_usetempaddr| 32)
 (sc::%defconstant csym::|@ipv6ctl_temppltime| 33)
 (sc::%defconstant csym::|@ipv6ctl_tempvltime| 34)
 (sc::%defconstant csym::|@ipv6ctl_auto_linklocal| 35)
 (sc::%defconstant csym::|@ipv6ctl_rip6stats| 36)
 (sc::%defconstant csym::|@ipv6ctl_prefer_tempaddr| 37)
 (sc::%defconstant csym::|@ipv6ctl_addrctlpolicy| 38)
 (sc::%defconstant csym::|@ipv6ctl_maxfrags| 41)
 (sc::%defconstant csym::|@ipv6ctl_maxid| 42)
 (sc::%defconstant csym::|@m_authiphdr| csym::|@m_proto2|)
 (sc::%defconstant csym::|@m_decrypted| csym::|@m_proto3|)
 (sc::%defconstant csym::|@m_loop| csym::|@m_proto4|)
 (sc::%defconstant csym::|@m_authipdgm| csym::|@m_proto5|)
 (sc::%defconstant csym::|_@socklen_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@arpa_inet_h_| (sc::c-exp ""))
 (sc::%defconstant csym::inet_addr csym::__inet_addr)
 (sc::%defconstant csym::inet_aton csym::__inet_aton)
 (sc::%defconstant csym::inet_lnaof csym::__inet_lnaof)
 (sc::%defconstant csym::inet_makeaddr csym::__inet_makeaddr)
 (sc::%defconstant csym::inet_neta csym::__inet_neta)
 (sc::%defconstant csym::inet_netof csym::__inet_netof)
 (sc::%defconstant csym::inet_network csym::__inet_network)
 (sc::%defconstant csym::inet_net_ntop csym::__inet_net_ntop)
 (sc::%defconstant csym::inet_net_pton csym::__inet_net_pton)
 (sc::%defconstant csym::inet_ntoa csym::__inet_ntoa)
 (sc::%defconstant csym::inet_pton csym::__inet_pton)
 (sc::%defconstant csym::inet_ntop csym::__inet_ntop)
 (sc::%defconstant csym::inet_nsap_addr csym::__inet_nsap_addr)
 (sc::%defconstant csym::inet_nsap_ntoa csym::__inet_nsap_ntoa)
 (sc::%defconstant csym::|_@inttypes_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@machine_inttypes_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@PRI@d8| "d") (sc::%defconstant csym::|@PRI@d16| "d")
 (sc::%defconstant csym::|@PRI@d32| "d")
 (sc::%defconstant csym::|@PRI@d64| "lld")
 (sc::%defconstant csym::|@PRI@d@LEAST8| "d")
 (sc::%defconstant csym::|@PRI@d@LEAST16| "d")
 (sc::%defconstant csym::|@PRI@d@LEAST32| "d")
 (sc::%defconstant csym::|@PRI@d@LEAST64| "lld")
 (sc::%defconstant csym::|@PRI@d@FAST8| "d")
 (sc::%defconstant csym::|@PRI@d@FAST16| "d")
 (sc::%defconstant csym::|@PRI@d@FAST32| "d")
 (sc::%defconstant csym::|@PRI@d@FAST64| "lld")
 (sc::%defconstant csym::|@PRI@d@MAX| "jd")
 (sc::%defconstant csym::|@PRI@d@PTR| "d")
 (sc::%defconstant csym::|@PRI@i8| "i") (sc::%defconstant csym::|@PRI@i16| "i")
 (sc::%defconstant csym::|@PRI@i32| "i")
 (sc::%defconstant csym::|@PRI@i64| "lli")
 (sc::%defconstant csym::|@PRI@i@LEAST8| "i")
 (sc::%defconstant csym::|@PRI@i@LEAST16| "i")
 (sc::%defconstant csym::|@PRI@i@LEAST32| "i")
 (sc::%defconstant csym::|@PRI@i@LEAST64| "lli")
 (sc::%defconstant csym::|@PRI@i@FAST8| "i")
 (sc::%defconstant csym::|@PRI@i@FAST16| "i")
 (sc::%defconstant csym::|@PRI@i@FAST32| "i")
 (sc::%defconstant csym::|@PRI@i@FAST64| "lli")
 (sc::%defconstant csym::|@PRI@i@MAX| "ji")
 (sc::%defconstant csym::|@PRI@i@PTR| "i")
 (sc::%defconstant csym::|@PRI@o8| "o") (sc::%defconstant csym::|@PRI@o16| "o")
 (sc::%defconstant csym::|@PRI@o32| "o")
 (sc::%defconstant csym::|@PRI@o64| "llo")
 (sc::%defconstant csym::|@PRI@o@LEAST8| "o")
 (sc::%defconstant csym::|@PRI@o@LEAST16| "o")
 (sc::%defconstant csym::|@PRI@o@LEAST32| "o")
 (sc::%defconstant csym::|@PRI@o@LEAST64| "llo")
 (sc::%defconstant csym::|@PRI@o@FAST8| "o")
 (sc::%defconstant csym::|@PRI@o@FAST16| "o")
 (sc::%defconstant csym::|@PRI@o@FAST32| "o")
 (sc::%defconstant csym::|@PRI@o@FAST64| "llo")
 (sc::%defconstant csym::|@PRI@o@MAX| "jo")
 (sc::%defconstant csym::|@PRI@o@PTR| "o")
 (sc::%defconstant csym::|@PRI@u8| "u") (sc::%defconstant csym::|@PRI@u16| "u")
 (sc::%defconstant csym::|@PRI@u32| "u")
 (sc::%defconstant csym::|@PRI@u64| "llu")
 (sc::%defconstant csym::|@PRI@u@LEAST8| "u")
 (sc::%defconstant csym::|@PRI@u@LEAST16| "u")
 (sc::%defconstant csym::|@PRI@u@LEAST32| "u")
 (sc::%defconstant csym::|@PRI@u@LEAST64| "llu")
 (sc::%defconstant csym::|@PRI@u@FAST8| "u")
 (sc::%defconstant csym::|@PRI@u@FAST16| "u")
 (sc::%defconstant csym::|@PRI@u@FAST32| "u")
 (sc::%defconstant csym::|@PRI@u@FAST64| "llu")
 (sc::%defconstant csym::|@PRI@u@MAX| "ju")
 (sc::%defconstant csym::|@PRI@u@PTR| "u")
 (sc::%defconstant csym::|@PRI@x8| "x") (sc::%defconstant csym::|@PRI@x16| "x")
 (sc::%defconstant csym::|@PRI@x32| "x")
 (sc::%defconstant csym::|@PRI@x64| "llx")
 (sc::%defconstant csym::|@PRI@x@LEAST8| "x")
 (sc::%defconstant csym::|@PRI@x@LEAST16| "x")
 (sc::%defconstant csym::|@PRI@x@LEAST32| "x")
 (sc::%defconstant csym::|@PRI@x@LEAST64| "llx")
 (sc::%defconstant csym::|@PRI@x@FAST8| "x")
 (sc::%defconstant csym::|@PRI@x@FAST16| "x")
 (sc::%defconstant csym::|@PRI@x@FAST32| "x")
 (sc::%defconstant csym::|@PRI@x@FAST64| "llx")
 (sc::%defconstant csym::|@PRI@x@MAX| "jx")
 (sc::%defconstant csym::|@PRI@x@PTR| "x")
 (sc::%defconstant csym::|@prix8| "X") (sc::%defconstant csym::|@prix16| "X")
 (sc::%defconstant csym::|@prix32| "X")
 (sc::%defconstant csym::|@prix64| "llX")
 (sc::%defconstant csym::|@prixleast8| "X")
 (sc::%defconstant csym::|@prixleast16| "X")
 (sc::%defconstant csym::|@prixleast32| "X")
 (sc::%defconstant csym::|@prixleast64| "llX")
 (sc::%defconstant csym::|@prixfast8| "X")
 (sc::%defconstant csym::|@prixfast16| "X")
 (sc::%defconstant csym::|@prixfast32| "X")
 (sc::%defconstant csym::|@prixfast64| "llX")
 (sc::%defconstant csym::|@prixmax| "jX")
 (sc::%defconstant csym::|@prixptr| "X")
 (sc::%defconstant csym::|@SCN@d8| "hhd")
 (sc::%defconstant csym::|@SCN@d16| "hd")
 (sc::%defconstant csym::|@SCN@d32| "d")
 (sc::%defconstant csym::|@SCN@d64| "lld")
 (sc::%defconstant csym::|@SCN@d@LEAST8| "hhd")
 (sc::%defconstant csym::|@SCN@d@LEAST16| "hd")
 (sc::%defconstant csym::|@SCN@d@LEAST32| "d")
 (sc::%defconstant csym::|@SCN@d@LEAST64| "lld")
 (sc::%defconstant csym::|@SCN@d@FAST8| "d")
 (sc::%defconstant csym::|@SCN@d@FAST16| "d")
 (sc::%defconstant csym::|@SCN@d@FAST32| "d")
 (sc::%defconstant csym::|@SCN@d@FAST64| "lld")
 (sc::%defconstant csym::|@SCN@d@MAX| "jd")
 (sc::%defconstant csym::|@SCN@d@PTR| "d")
 (sc::%defconstant csym::|@SCN@i8| "hhi")
 (sc::%defconstant csym::|@SCN@i16| "hi")
 (sc::%defconstant csym::|@SCN@i32| "i")
 (sc::%defconstant csym::|@SCN@i64| "lli")
 (sc::%defconstant csym::|@SCN@i@LEAST8| "hhi")
 (sc::%defconstant csym::|@SCN@i@LEAST16| "hi")
 (sc::%defconstant csym::|@SCN@i@LEAST32| "i")
 (sc::%defconstant csym::|@SCN@i@LEAST64| "lli")
 (sc::%defconstant csym::|@SCN@i@FAST8| "i")
 (sc::%defconstant csym::|@SCN@i@FAST16| "i")
 (sc::%defconstant csym::|@SCN@i@FAST32| "i")
 (sc::%defconstant csym::|@SCN@i@FAST64| "lli")
 (sc::%defconstant csym::|@SCN@i@MAX| "ji")
 (sc::%defconstant csym::|@SCN@i@PTR| "i")
 (sc::%defconstant csym::|@SCN@o8| "hho")
 (sc::%defconstant csym::|@SCN@o16| "ho")
 (sc::%defconstant csym::|@SCN@o32| "o")
 (sc::%defconstant csym::|@SCN@o64| "llo")
 (sc::%defconstant csym::|@SCN@o@LEAST8| "hho")
 (sc::%defconstant csym::|@SCN@o@LEAST16| "ho")
 (sc::%defconstant csym::|@SCN@o@LEAST32| "o")
 (sc::%defconstant csym::|@SCN@o@LEAST64| "llo")
 (sc::%defconstant csym::|@SCN@o@FAST8| "o")
 (sc::%defconstant csym::|@SCN@o@FAST16| "o")
 (sc::%defconstant csym::|@SCN@o@FAST32| "o")
 (sc::%defconstant csym::|@SCN@o@FAST64| "llo")
 (sc::%defconstant csym::|@SCN@o@MAX| "jo")
 (sc::%defconstant csym::|@SCN@o@PTR| "o")
 (sc::%defconstant csym::|@SCN@u8| "hhu")
 (sc::%defconstant csym::|@SCN@u16| "hu")
 (sc::%defconstant csym::|@SCN@u32| "u")
 (sc::%defconstant csym::|@SCN@u64| "llu")
 (sc::%defconstant csym::|@SCN@u@LEAST8| "hhu")
 (sc::%defconstant csym::|@SCN@u@LEAST16| "hu")
 (sc::%defconstant csym::|@SCN@u@LEAST32| "u")
 (sc::%defconstant csym::|@SCN@u@LEAST64| "llu")
 (sc::%defconstant csym::|@SCN@u@FAST8| "u")
 (sc::%defconstant csym::|@SCN@u@FAST16| "u")
 (sc::%defconstant csym::|@SCN@u@FAST32| "u")
 (sc::%defconstant csym::|@SCN@u@FAST64| "llu")
 (sc::%defconstant csym::|@SCN@u@MAX| "ju")
 (sc::%defconstant csym::|@SCN@u@PTR| "u")
 (sc::%defconstant csym::|@SCN@x8| "hhx")
 (sc::%defconstant csym::|@SCN@x16| "hx")
 (sc::%defconstant csym::|@SCN@x32| "x")
 (sc::%defconstant csym::|@SCN@x64| "llx")
 (sc::%defconstant csym::|@SCN@x@LEAST8| "hhx")
 (sc::%defconstant csym::|@SCN@x@LEAST16| "hx")
 (sc::%defconstant csym::|@SCN@x@LEAST32| "x")
 (sc::%defconstant csym::|@SCN@x@LEAST64| "llx")
 (sc::%defconstant csym::|@SCN@x@FAST8| "x")
 (sc::%defconstant csym::|@SCN@x@FAST16| "x")
 (sc::%defconstant csym::|@SCN@x@FAST32| "x")
 (sc::%defconstant csym::|@SCN@x@FAST64| "llx")
 (sc::%defconstant csym::|@SCN@x@MAX| "jx")
 (sc::%defconstant csym::|@SCN@x@PTR| "x")
 (sc::%defconstant csym::|_@sys_stdint_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@machine__stdint_h_| (sc::c-exp ""))
 (sc::%defmacro csym::|@int8_c| (c) 'csym::c)
 (sc::%defmacro csym::|@int16_c| (c) 'csym::c)
 (sc::%defmacro csym::|@int32_c| (c) 'csym::c)
 (sc::%defmacro csym::|@int64_c| (c) '"<macro with ## operator>")
 (sc::%defmacro csym::|@uint8_c| (c) 'csym::c)
 (sc::%defmacro csym::|@uint16_c| (c) 'csym::c)
 (sc::%defmacro csym::|@uint32_c| (c) '"<macro with ## operator>")
 (sc::%defmacro csym::|@uint64_c| (c) '"<macro with ## operator>")
 (sc::%defmacro csym::|@intmax_c| (c) '"<macro with ## operator>")
 (sc::%defmacro csym::|@uintmax_c| (c) '"<macro with ## operator>")
 (sc::%defconstant csym::|@int8_min| (sc::- (sc::- 127) 1))
 (sc::%defconstant csym::|@int16_min| (sc::- (sc::- 32767) 1))
 (sc::%defconstant csym::|@int32_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@int64_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|@int8_max| 127)
 (sc::%defconstant csym::|@int16_max| 32767)
 (sc::%defconstant csym::|@int32_max| 2147483647)
 (sc::%defconstant csym::|@int64_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|@uint8_max| 255)
 (sc::%defconstant csym::|@uint16_max| 65535)
 (sc::%defconstant csym::|@uint32_max| (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@uint64_max|
  (sc::cast sc::unsigned-long-long 18446744073709551615))
 (sc::%defconstant csym::|@int_least8_min| (sc::- (sc::- 127) 1))
 (sc::%defconstant csym::|@int_least16_min| (sc::- (sc::- 32767) 1))
 (sc::%defconstant csym::|@int_least32_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@int_least64_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|@int_least8_max| 127)
 (sc::%defconstant csym::|@int_least16_max| 32767)
 (sc::%defconstant csym::|@int_least32_max| 2147483647)
 (sc::%defconstant csym::|@int_least64_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|@uint_least8_max| 255)
 (sc::%defconstant csym::|@uint_least16_max| 65535)
 (sc::%defconstant csym::|@uint_least32_max|
  (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@uint_least64_max|
  (sc::cast sc::unsigned-long-long 18446744073709551615))
 (sc::%defconstant csym::|@int_fast8_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@int_fast16_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@int_fast32_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@int_fast64_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|@int_fast8_max| 2147483647)
 (sc::%defconstant csym::|@int_fast16_max| 2147483647)
 (sc::%defconstant csym::|@int_fast32_max| 2147483647)
 (sc::%defconstant csym::|@int_fast64_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|@uint_fast8_max|
  (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@uint_fast16_max|
  (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@uint_fast32_max|
  (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@uint_fast64_max|
  (sc::cast sc::unsigned-long-long 18446744073709551615))
 (sc::%defconstant csym::|@intptr_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@intptr_max| 2147483647)
 (sc::%defconstant csym::|@uintptr_max| (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@intmax_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|@intmax_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|@uintmax_max|
  (sc::cast sc::unsigned-long-long 18446744073709551615))
 (sc::%defconstant csym::|@ptrdiff_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@ptrdiff_max| 2147483647)
 (sc::%defconstant csym::|@sig_atomic_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@sig_atomic_max| 2147483647)
 (sc::%defconstant csym::|@size_max| (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@wchar_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@wchar_max| 2147483647)
 (sc::%defconstant csym::|@wint_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@wint_max| 2147483647)
 (sc::%defconstant csym::|_@sys_ipc_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@ipc_r| 256) (sc::%defconstant csym::|@ipc_w| 128)
 (sc::%defconstant csym::|@ipc_m| 4096)
 (sc::%defconstant csym::|@ipc_creat| 512)
 (sc::%defconstant csym::|@ipc_excl| 1024)
 (sc::%defconstant csym::|@ipc_nowait| 2048)
 (sc::%defconstant csym::|@ipc_private| (sc::cast csym::key_t 0))
 (sc::%defconstant csym::|@ipc_rmid| 0) (sc::%defconstant csym::|@ipc_set| 1)
 (sc::%defconstant csym::|@ipc_stat| 2) (sc::%defconstant csym::|@ipc_info| 3)
 (sc::%defconstant csym::|_@iso646_h_| (sc::c-exp ""))
 (sc::%defconstant csym::and (sc::c-exp "&&"))
 (sc::%defconstant csym::and_eq (sc::c-exp "&="))
 (sc::%defconstant csym::bitand (sc::c-exp "&"))
 (sc::%defconstant csym::bitor (sc::c-exp "|"))
 (sc::%defconstant csym::compl (sc::c-exp "~"))
 (sc::%defconstant csym::not (sc::c-exp "!"))
 (sc::%defconstant csym::not_eq (sc::c-exp "!="))
 (sc::%defconstant csym::or (sc::c-exp "||"))
 (sc::%defconstant csym::or_eq (sc::c-exp "|="))
 (sc::%defconstant csym::xor (sc::c-exp "^"))
 (sc::%defconstant csym::xor_eq (sc::c-exp "^="))
 (sc::%defconstant csym::|_@langinfo_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@nl_item_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|@codeset| 0) (sc::%defconstant csym::|@d_t_fmt| 1)
 (sc::%defconstant csym::|@d_fmt| 2) (sc::%defconstant csym::|@t_fmt| 3)
 (sc::%defconstant csym::|@t_fmt_ampm| 4) (sc::%defconstant csym::|@am_str| 5)
 (sc::%defconstant csym::|@pm_str| 6) (sc::%defconstant csym::|@day_1| 7)
 (sc::%defconstant csym::|@day_2| 8) (sc::%defconstant csym::|@day_3| 9)
 (sc::%defconstant csym::|@day_4| 10) (sc::%defconstant csym::|@day_5| 11)
 (sc::%defconstant csym::|@day_6| 12) (sc::%defconstant csym::|@day_7| 13)
 (sc::%defconstant csym::|@abday_1| 14) (sc::%defconstant csym::|@abday_2| 15)
 (sc::%defconstant csym::|@abday_3| 16) (sc::%defconstant csym::|@abday_4| 17)
 (sc::%defconstant csym::|@abday_5| 18) (sc::%defconstant csym::|@abday_6| 19)
 (sc::%defconstant csym::|@abday_7| 20) (sc::%defconstant csym::|@mon_1| 21)
 (sc::%defconstant csym::|@mon_2| 22) (sc::%defconstant csym::|@mon_3| 23)
 (sc::%defconstant csym::|@mon_4| 24) (sc::%defconstant csym::|@mon_5| 25)
 (sc::%defconstant csym::|@mon_6| 26) (sc::%defconstant csym::|@mon_7| 27)
 (sc::%defconstant csym::|@mon_8| 28) (sc::%defconstant csym::|@mon_9| 29)
 (sc::%defconstant csym::|@mon_10| 30) (sc::%defconstant csym::|@mon_11| 31)
 (sc::%defconstant csym::|@mon_12| 32) (sc::%defconstant csym::|@abmon_1| 33)
 (sc::%defconstant csym::|@abmon_2| 34) (sc::%defconstant csym::|@abmon_3| 35)
 (sc::%defconstant csym::|@abmon_4| 36) (sc::%defconstant csym::|@abmon_5| 37)
 (sc::%defconstant csym::|@abmon_6| 38) (sc::%defconstant csym::|@abmon_7| 39)
 (sc::%defconstant csym::|@abmon_8| 40) (sc::%defconstant csym::|@abmon_9| 41)
 (sc::%defconstant csym::|@abmon_10| 42)
 (sc::%defconstant csym::|@abmon_11| 43)
 (sc::%defconstant csym::|@abmon_12| 44) (sc::%defconstant csym::|@era| 45)
 (sc::%defconstant csym::|@era_d_fmt| 46)
 (sc::%defconstant csym::|@era_d_t_fmt| 47)
 (sc::%defconstant csym::|@era_t_fmt| 48)
 (sc::%defconstant csym::|@alt_digits| 49)
 (sc::%defconstant csym::|@radixchar| 50)
 (sc::%defconstant csym::|@thousep| 51) (sc::%defconstant csym::|@yesexpr| 52)
 (sc::%defconstant csym::|@noexpr| 53) (sc::%defconstant csym::|@yesstr| 54)
 (sc::%defconstant csym::|@nostr| 55) (sc::%defconstant csym::|@crncystr| 56)
 (sc::%defconstant csym::|@d_md_order| 57)
 (sc::%defconstant csym::|_@libgen_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@limits_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@posix_arg_max| 4096)
 (sc::%defconstant csym::|_@posix_child_max| 25)
 (sc::%defconstant csym::|_@posix_link_max| 8)
 (sc::%defconstant csym::|_@posix_max_canon| 255)
 (sc::%defconstant csym::|_@posix_max_input| 255)
 (sc::%defconstant csym::|_@posix_name_max| 14)
 (sc::%defconstant csym::|_@posix_ngroups_max| 8)
 (sc::%defconstant csym::|_@posix_open_max| 20)
 (sc::%defconstant csym::|_@posix_path_max| 256)
 (sc::%defconstant csym::|_@posix_pipe_buf| 512)
 (sc::%defconstant csym::|_@posix_ssize_max| 32767)
 (sc::%defconstant csym::|_@posix_stream_max| 8)
 (sc::%defconstant csym::|_@posix_tzname_max| 6)
 (sc::%defconstant csym::|@bc_base_max| 99)
 (sc::%defconstant csym::|@bc_dim_max| 2048)
 (sc::%defconstant csym::|@bc_scale_max| 99)
 (sc::%defconstant csym::|@bc_string_max| 1000)
 (sc::%defconstant csym::|@coll_weights_max| 0)
 (sc::%defconstant csym::|@expr_nest_max| 32)
 (sc::%defconstant csym::|@line_max| 2048)
 (sc::%defconstant csym::|@re_dup_max| 255)
 (sc::%defconstant csym::|_@posix2_bc_base_max| 99)
 (sc::%defconstant csym::|_@posix2_bc_dim_max| 2048)
 (sc::%defconstant csym::|_@posix2_bc_scale_max| 99)
 (sc::%defconstant csym::|_@posix2_bc_string_max| 1000)
 (sc::%defconstant csym::|_@posix2_equiv_class_max| 2)
 (sc::%defconstant csym::|_@posix2_expr_nest_max| 32)
 (sc::%defconstant csym::|_@posix2_line_max| 2048)
 (sc::%defconstant csym::|_@posix2_re_dup_max| 255)
 (sc::%defconstant csym::|_@posix_aio_listio_max| 16)
 (sc::%defconstant csym::|_@posix_aio_max| 1)
 (sc::%defconstant csym::|_@posix_delaytimer_max| 32)
 (sc::%defconstant csym::|_@posix_mq_open_max| 8)
 (sc::%defconstant csym::|_@posix_mq_prio_max| 32)
 (sc::%defconstant csym::|_@posix_rtsig_max| 8)
 (sc::%defconstant csym::|_@posix_sem_nsems_max| 256)
 (sc::%defconstant csym::|_@posix_sem_value_max| 32767)
 (sc::%defconstant csym::|_@posix_sigqueue_max| 32)
 (sc::%defconstant csym::|_@posix_timer_max| 32)
 (sc::%defconstant csym::|_@posix_thread_destructor_iterations| 4)
 (sc::%defconstant csym::|_@posix_thread_keys_max| 128)
 (sc::%defconstant csym::|_@posix_thread_threads_max| 64)
 (sc::%defconstant csym::|_@posix_host_name_max| 255)
 (sc::%defconstant csym::|_@posix_login_name_max| 9)
 (sc::%defconstant csym::|_@posix_ss_repl_max| 4)
 (sc::%defconstant csym::|_@posix_symlink_max| 255)
 (sc::%defconstant csym::|_@posix_symloop_max| 8)
 (sc::%defconstant csym::|_@posix_trace_event_name_max| 30)
 (sc::%defconstant csym::|_@posix_trace_name_max| 8)
 (sc::%defconstant csym::|_@posix_trace_sys_max| 8)
 (sc::%defconstant csym::|_@posix_trace_user_event_max| 32)
 (sc::%defconstant csym::|_@posix_tty_name_max| 9)
 (sc::%defconstant csym::|_@posix2_charclass_name_max| 14)
 (sc::%defconstant csym::|_@posix2_coll_weights_max| 2)
 (sc::%defconstant csym::|_@posix_re_dup_max| 255)
 (sc::%defconstant csym::|_@xopen_iov_max| 16)
 (sc::%defconstant csym::|_@xopen_name_max| 255)
 (sc::%defconstant csym::|_@xopen_path_max| 1024)
 (sc::%defconstant csym::|@pass_max| 128)
 (sc::%defconstant csym::|@nl_argmax| 99)
 (sc::%defconstant csym::|@nl_langmax| 31)
 (sc::%defconstant csym::|@nl_msgmax| 32767)
 (sc::%defconstant csym::|@nl_nmax| 1)
 (sc::%defconstant csym::|@nl_setmax| 255)
 (sc::%defconstant csym::|@nl_textmax| 2048)
 (sc::%defconstant csym::|@mb_len_max| 6)
 (sc::%defconstant csym::|_@sys_limits_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@machine__limits_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|__@char_bit| 8)
 (sc::%defconstant csym::|__@schar_max| 127)
 (sc::%defconstant csym::|__@schar_min| (sc::- (sc::- 127) 1))
 (sc::%defconstant csym::|__@uchar_max| 255)
 (sc::%defconstant csym::|__@ushrt_max| 65535)
 (sc::%defconstant csym::|__@shrt_max| 32767)
 (sc::%defconstant csym::|__@shrt_min| (sc::- (sc::- 32767) 1))
 (sc::%defconstant csym::|__@uint_max| (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|__@int_max| 2147483647)
 (sc::%defconstant csym::|__@int_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|__@ulong_max|
  (sc::cast sc::unsigned-long 4294967295))
 (sc::%defconstant csym::|__@long_max| (sc::cast sc::long 2147483647))
 (sc::%defconstant csym::|__@long_min|
  (sc::- (sc::- (sc::cast sc::long 2147483647)) 1))
 (sc::%defconstant csym::|__@ullong_max|
  (sc::cast sc::unsigned-long-long 18446744073709551615))
 (sc::%defconstant csym::|__@llong_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|__@llong_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|__@ssize_max| 2147483647)
 (sc::%defconstant csym::|__@size_t_max|
  (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|__@off_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|__@off_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|__@uquad_max|
  (sc::cast sc::unsigned-long-long 18446744073709551615))
 (sc::%defconstant csym::|__@quad_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|__@quad_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|__@long_bit| 32)
 (sc::%defconstant csym::|__@word_bit| 32)
 (sc::%defconstant csym::|@char_bit| 8)
 (sc::%defconstant csym::|@schar_max| 127)
 (sc::%defconstant csym::|@schar_min| (sc::- (sc::- 127) 1))
 (sc::%defconstant csym::|@uchar_max| 255)
 (sc::%defconstant csym::|@char_max| 127)
 (sc::%defconstant csym::|@char_min| (sc::- (sc::- 127) 1))
 (sc::%defconstant csym::|@ushrt_max| 65535)
 (sc::%defconstant csym::|@shrt_max| 32767)
 (sc::%defconstant csym::|@shrt_min| (sc::- (sc::- 32767) 1))
 (sc::%defconstant csym::|@uint_max| (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@int_max| 2147483647)
 (sc::%defconstant csym::|@int_min| (sc::- (sc::- 2147483647) 1))
 (sc::%defconstant csym::|@ulong_max| (sc::cast sc::unsigned-long 4294967295))
 (sc::%defconstant csym::|@long_max| (sc::cast sc::long 2147483647))
 (sc::%defconstant csym::|@long_min|
  (sc::- (sc::- (sc::cast sc::long 2147483647)) 1))
 (sc::%defconstant csym::|@ullong_max|
  (sc::cast sc::unsigned-long-long 18446744073709551615))
 (sc::%defconstant csym::|@llong_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|@llong_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|@ssize_max| 2147483647)
 (sc::%defconstant csym::|@size_t_max| (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@off_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|@off_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|@gid_max| (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@uid_max| (sc::cast sc::unsigned-int 4294967295))
 (sc::%defconstant csym::|@uquad_max|
  (sc::cast sc::unsigned-long-long 18446744073709551615))
 (sc::%defconstant csym::|@quad_max|
  (sc::cast sc::long-long 9223372036854775807))
 (sc::%defconstant csym::|@quad_min|
  (sc::- (sc::- (sc::cast sc::long-long 9223372036854775807)) 1))
 (sc::%defconstant csym::|@long_bit| 32)
 (sc::%defconstant csym::|@word_bit| 32)
 (sc::%defconstant csym::|_@sys_syslimits_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@arg_max| 65536)
 (sc::%defconstant csym::|@child_max| 40)
 (sc::%defconstant csym::|@link_max| 32767)
 (sc::%defconstant csym::|@max_canon| 255)
 (sc::%defconstant csym::|@max_input| 255)
 (sc::%defconstant csym::|@name_max| 255)
 (sc::%defconstant csym::|@ngroups_max| 16)
 (sc::%defconstant csym::|@open_max| 64)
 (sc::%defconstant csym::|@path_max| 1024)
 (sc::%defconstant csym::|@pipe_buf| 512)
 (sc::%defconstant csym::|@iov_max| 1024)
 (sc::%defconstant csym::|_@locale_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@lc_all| 0) (sc::%defconstant csym::|@lc_collate| 1)
 (sc::%defconstant csym::|@lc_ctype| 2)
 (sc::%defconstant csym::|@lc_monetary| 3)
 (sc::%defconstant csym::|@lc_numeric| 4) (sc::%defconstant csym::|@lc_time| 5)
 (sc::%defconstant csym::|@lc_messages| 6)
 (sc::%defconstant csym::|_@lc_last| 7)
 (sc::%defconstant csym::|_@math_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|__@math_builtin_constants| (sc::c-exp ""))
 (sc::%defconstant csym::|__@math_builtin_relops| (sc::c-exp ""))
 (sc::%defconstant csym::|@huge_val| (csym::__builtin_huge_val))
 (sc::%defconstant csym::|@fp_ilogb0| (sc::- 2147483647))
 (sc::%defconstant csym::|@fp_ilogbnan| 2147483647)
 (sc::%defconstant csym::|@huge_valf| (csym::__builtin_huge_valf))
 (sc::%defconstant csym::|@huge_vall| (csym::__builtin_huge_vall))
 (sc::%defconstant csym::|@infinity| (csym::__builtin_inf))
 (sc::%defconstant csym::|@nan| (csym::__builtin_nan ""))
 (sc::%defconstant csym::|@math_errno| 1)
 (sc::%defconstant csym::|@math_errexcept| 2)
 (sc::%defconstant csym::math_errhandling 0)
 (sc::%defconstant csym::|@fp_infinite| 1) (sc::%defconstant csym::|@fp_nan| 2)
 (sc::%defconstant csym::|@fp_normal| 4)
 (sc::%defconstant csym::|@fp_subnormal| 8)
 (sc::%defconstant csym::|@fp_zero| 16)
 (sc::%defmacro csym::fpclassify (x)
  (list 'sc::if-exp
        (list 'sc::==
              (list 'sc::sizeof 'csym::x)
              (list 'sc::sizeof 'sc::float))
        (list 'csym::__fpclassifyf 'csym::x)
        (list 'sc::if-exp
              (list 'sc::==
                    (list 'sc::sizeof 'csym::x)
                    (list 'sc::sizeof 'sc::double))
              (list 'csym::__fpclassifyd 'csym::x)
              (list 'csym::__fpclassifyl 'csym::x))))
 (sc::%defmacro csym::isfinite (x)
  (list 'sc::if-exp
        (list 'sc::==
              (list 'sc::sizeof 'csym::x)
              (list 'sc::sizeof 'sc::float))
        (list 'csym::__isfinitef 'csym::x)
        (list 'sc::if-exp
              (list 'sc::==
                    (list 'sc::sizeof 'csym::x)
                    (list 'sc::sizeof 'sc::double))
              (list 'csym::__isfinite 'csym::x)
              (list 'csym::__isfinitel 'csym::x))))
 (sc::%defmacro csym::isinf (x)
  (list 'sc::if-exp
        (list 'sc::==
              (list 'sc::sizeof 'csym::x)
              (list 'sc::sizeof 'sc::float))
        (list 'csym::__isinff 'csym::x)
        (list 'sc::if-exp
              (list 'sc::==
                    (list 'sc::sizeof 'csym::x)
                    (list 'sc::sizeof 'sc::double))
              (list 'sc::if-exp
                    (list 'sc::==
                          (list 'sc::sizeof 'csym::x)
                          (list 'sc::sizeof 'sc::float))
                    (list 'csym::__isinff 'csym::x)
                    (list 'sc::if-exp
                          (list 'sc::==
                                (list 'sc::sizeof 'csym::x)
                                (list 'sc::sizeof 'sc::double))
                          (list 'csym::isinf 'csym::x)
                          (list 'csym::__isinfl 'csym::x)))
              (list 'csym::__isinfl 'csym::x))))
 (sc::%defmacro csym::isnan (x)
  (list 'sc::if-exp
        (list 'sc::==
              (list 'sc::sizeof 'csym::x)
              (list 'sc::sizeof 'sc::float))
        (list 'csym::isnanf 'csym::x)
        (list 'sc::if-exp
              (list 'sc::==
                    (list 'sc::sizeof 'csym::x)
                    (list 'sc::sizeof 'sc::double))
              (list 'sc::if-exp
                    (list 'sc::==
                          (list 'sc::sizeof 'csym::x)
                          (list 'sc::sizeof 'sc::float))
                    (list 'csym::isnanf 'csym::x)
                    (list 'sc::if-exp
                          (list 'sc::==
                                (list 'sc::sizeof 'csym::x)
                                (list 'sc::sizeof 'sc::double))
                          (list 'csym::isnan 'csym::x)
                          (list 'csym::__isnanl 'csym::x)))
              (list 'csym::__isnanl 'csym::x))))
 (sc::%defmacro csym::isnormal (x)
  (list 'sc::if-exp
        (list 'sc::==
              (list 'sc::sizeof 'csym::x)
              (list 'sc::sizeof 'sc::float))
        (list 'csym::__isnormalf 'csym::x)
        (list 'sc::if-exp
              (list 'sc::==
                    (list 'sc::sizeof 'csym::x)
                    (list 'sc::sizeof 'sc::double))
              (list 'csym::__isnormal 'csym::x)
              (list 'csym::__isnormall 'csym::x))))
 (sc::%defmacro csym::isgreater (x y)
  (list 'csym::__builtin_isgreater 'csym::x 'csym::y))
 (sc::%defmacro csym::isgreaterequal (x y)
  (list 'csym::__builtin_isgreaterequal 'csym::x 'csym::y))
 (sc::%defmacro csym::isless (x y)
  (list 'csym::__builtin_isless 'csym::x 'csym::y))
 (sc::%defmacro csym::islessequal (x y)
  (list 'csym::__builtin_islessequal 'csym::x 'csym::y))
 (sc::%defmacro csym::islessgreater (x y)
  (list 'csym::__builtin_islessgreater 'csym::x 'csym::y))
 (sc::%defmacro csym::isunordered (x y)
  (list 'csym::__builtin_isunordered 'csym::x 'csym::y))
 (sc::%defmacro csym::signbit (x)
  (list 'sc::if-exp
        (list 'sc::==
              (list 'sc::sizeof 'csym::x)
              (list 'sc::sizeof 'sc::float))
        (list 'csym::__signbitf 'csym::x)
        (list 'sc::if-exp
              (list 'sc::==
                    (list 'sc::sizeof 'csym::x)
                    (list 'sc::sizeof 'sc::double))
              (list 'csym::__signbit 'csym::x)
              (list 'csym::__signbitl 'csym::x))))
 (sc::%defconstant csym::|@m_e| 2.718281828459045d0)
 (sc::%defconstant csym::|@m_log2e| 1.4426950408889634d0)
 (sc::%defconstant csym::|@m_log10e| 0.4342944819032518d0)
 (sc::%defconstant csym::|@m_ln2| 0.6931471805599453d0)
 (sc::%defconstant csym::|@m_ln10| 2.302585092994046d0)
 (sc::%defconstant csym::|@m_pi| 3.141592653589793d0)
 (sc::%defconstant csym::|@m_pi_2| 1.5707963267948966d0)
 (sc::%defconstant csym::|@m_pi_4| 0.7853981633974483d0)
 (sc::%defconstant csym::|@m_1_pi| 0.3183098861837907d0)
 (sc::%defconstant csym::|@m_2_pi| 0.6366197723675814d0)
 (sc::%defconstant csym::|@m_2_sqrtpi| 1.1283791670955126d0)
 (sc::%defconstant csym::|@m_sqrt2| 1.4142135623730951d0)
 (sc::%defconstant csym::|@m_sqrt1_2| 0.7071067811865476d0)
 (sc::%defconstant csym::|@maxfloat|
  (sc::cast sc::float 3.4028234663852886d+38))
 (sc::%defconstant csym::|_@lib_version_type| (sc::enum csym::fdversion))
 (sc::%defconstant csym::|_@lib_version| csym::_fdlib_version)
 (sc::%defconstant csym::|_@ieee_| csym::fdlibm_ieee)
 (sc::%defconstant csym::|_@svid_| csym::fdlibm_svid)
 (sc::%defconstant csym::|_@xopen_| csym::fdlibm_xopen)
 (sc::%defconstant csym::|_@posix_| csym::fdlibm_posix)
 (sc::%defconstant csym::|@huge| (sc::cast sc::float 3.4028234663852886d+38))
 (sc::%defconstant csym::|@x_tloss| 1.414847550405688d+16)
 (sc::%defconstant csym::|@domain| 1) (sc::%defconstant csym::|@sing| 2)
 (sc::%defconstant csym::|@overflow| 3) (sc::%defconstant csym::|@underflow| 4)
 (sc::%defconstant csym::|@tloss| 5) (sc::%defconstant csym::|@ploss| 6)
 (sc::%defconstant csym::|_@sys_mman_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@inherit_share| 0)
 (sc::%defconstant csym::|@inherit_copy| 1)
 (sc::%defconstant csym::|@inherit_none| 2)
 (sc::%defconstant csym::|@prot_none| 0)
 (sc::%defconstant csym::|@prot_read| 1)
 (sc::%defconstant csym::|@prot_write| 2)
 (sc::%defconstant csym::|@prot_exec| 4)
 (sc::%defconstant csym::|@map_shared| 1)
 (sc::%defconstant csym::|@map_private| 2)
 (sc::%defconstant csym::|@map_copy| 2)
 (sc::%defconstant csym::|@map_fixed| 16)
 (sc::%defconstant csym::|@map_rename| 32)
 (sc::%defconstant csym::|@map_noreserve| 64)
 (sc::%defconstant csym::|@map_reserved0080| 128)
 (sc::%defconstant csym::|@map_reserved0100| 256)
 (sc::%defconstant csym::|@map_hassemaphore| 512)
 (sc::%defconstant csym::|@map_stack| 1024)
 (sc::%defconstant csym::|@map_nosync| 2048)
 (sc::%defconstant csym::|@map_file| 0)
 (sc::%defconstant csym::|@map_anon| 4096)
 (sc::%defconstant csym::|@map_nocore| 131072)
 (sc::%defconstant csym::|@mcl_current| 1)
 (sc::%defconstant csym::|@mcl_future| 2)
 (sc::%defconstant csym::|@map_failed| (sc::cast (sc::ptr sc::void) (sc::- 1)))
 (sc::%defconstant csym::|@ms_sync| 0) (sc::%defconstant csym::|@ms_async| 1)
 (sc::%defconstant csym::|@ms_invalidate| 2)
 (sc::%defconstant csym::|@madv_normal| 0)
 (sc::%defconstant csym::|@madv_random| 1)
 (sc::%defconstant csym::|@madv_sequential| 2)
 (sc::%defconstant csym::|@madv_willneed| 3)
 (sc::%defconstant csym::|@madv_dontneed| 4)
 (sc::%defconstant csym::|@madv_free| 5)
 (sc::%defconstant csym::|@madv_nosync| 6)
 (sc::%defconstant csym::|@madv_autosync| 7)
 (sc::%defconstant csym::|@madv_nocore| 8)
 (sc::%defconstant csym::|@madv_core| 9)
 (sc::%defconstant csym::|@madv_protect| 10)
 (sc::%defconstant csym::|@mincore_incore| 1)
 (sc::%defconstant csym::|@mincore_referenced| 2)
 (sc::%defconstant csym::|@mincore_modified| 4)
 (sc::%defconstant csym::|@mincore_referenced_other| 8)
 (sc::%defconstant csym::|@mincore_modified_other| 16)
 (sc::%defconstant csym::|@posix_madv_normal| 0)
 (sc::%defconstant csym::|@posix_madv_random| 1)
 (sc::%defconstant csym::|@posix_madv_sequential| 2)
 (sc::%defconstant csym::|@posix_madv_willneed| 3)
 (sc::%defconstant csym::|@posix_madv_dontneed| 4)
 (sc::%defconstant csym::|_@monetary_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_msg_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@msg_noerror| 4096)
 (sc::%defconstant csym::|_@ndbm_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@db_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@ret_error| (sc::- 1))
 (sc::%defconstant csym::|@ret_success| 0)
 (sc::%defconstant csym::|@ret_special| 1)
 (sc::%defconstant csym::|@max_page_number| 4294967295)
 (sc::%defconstant csym::|@max_page_offset| 65535)
 (sc::%defconstant csym::|@max_rec_number| 4294967295)
 (sc::%defconstant csym::|@r_cursor| 1)
 (sc::%defconstant csym::|__@r_unused| 2) (sc::%defconstant csym::|@r_first| 3)
 (sc::%defconstant csym::|@r_iafter| 4) (sc::%defconstant csym::|@r_ibefore| 5)
 (sc::%defconstant csym::|@r_last| 6) (sc::%defconstant csym::|@r_next| 7)
 (sc::%defconstant csym::|@r_nooverwrite| 8)
 (sc::%defconstant csym::|@r_prev| 9)
 (sc::%defconstant csym::|@r_setcursor| 10)
 (sc::%defconstant csym::|@r_recnosync| 11)
 (sc::%defconstant csym::|@db_lock| 536870912)
 (sc::%defconstant csym::|@db_shmem| 1073741824)
 (sc::%defconstant csym::|@db_txn| 2147483648)
 (sc::%defconstant csym::|@btreemagic| 340322)
 (sc::%defconstant csym::|@btreeversion| 3) (sc::%defconstant csym::|@r_dup| 1)
 (sc::%defconstant csym::|@hashmagic| 398689)
 (sc::%defconstant csym::|@hashversion| 2)
 (sc::%defconstant csym::|@r_fixedlen| 1) (sc::%defconstant csym::|@r_nokey| 2)
 (sc::%defconstant csym::|@r_snapshot| 4)
 (sc::%defconstant csym::|@dbm_rdonly| 0)
 (sc::%defconstant csym::|@dbm_insert| 0)
 (sc::%defconstant csym::|@dbm_replace| 1)
 (sc::%defconstant csym::|@dbm_suffix| ".db")
 (sc::%defmacro csym::dbm_pagfno (a) 'csym::|@dbm_pagfno_not_available|)
 (sc::%defconstant csym::|_@netdb_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@path_hequiv| "/etc/hosts.equiv")
 (sc::%defconstant csym::|_@path_hosts| "/etc/hosts")
 (sc::%defconstant csym::|_@path_networks| "/etc/networks")
 (sc::%defconstant csym::|_@path_protocols| "/etc/protocols")
 (sc::%defconstant csym::|_@path_services| "/etc/services")
 (sc::%defconstant csym::h_errno (sc::mref (csym::__h_error)))
 (sc::%defconstant csym::h_addr (sc::aref csym::h_addr_list 0))
 (sc::%defconstant csym::|@netdb_internal| (sc::- 1))
 (sc::%defconstant csym::|@netdb_success| 0)
 (sc::%defconstant csym::|@host_not_found| 1)
 (sc::%defconstant csym::|@try_again| 2)
 (sc::%defconstant csym::|@no_recovery| 3)
 (sc::%defconstant csym::|@no_data| 4) (sc::%defconstant csym::|@no_address| 4)
 (sc::%defconstant csym::|@eai_again| 2)
 (sc::%defconstant csym::|@eai_badflags| 3)
 (sc::%defconstant csym::|@eai_fail| 4)
 (sc::%defconstant csym::|@eai_family| 5)
 (sc::%defconstant csym::|@eai_memory| 6)
 (sc::%defconstant csym::|@eai_noname| 8)
 (sc::%defconstant csym::|@eai_service| 9)
 (sc::%defconstant csym::|@eai_socktype| 10)
 (sc::%defconstant csym::|@eai_system| 11)
 (sc::%defconstant csym::|@eai_badhints| 12)
 (sc::%defconstant csym::|@eai_protocol| 13)
 (sc::%defconstant csym::|@eai_max| 14)
 (sc::%defconstant csym::|@ai_passive| 1)
 (sc::%defconstant csym::|@ai_canonname| 2)
 (sc::%defconstant csym::|@ai_numerichost| 4)
 (sc::%defconstant csym::|@ai_mask| (sc::bit-or 1 2 4 1024))
 (sc::%defconstant csym::|@ai_all| 256)
 (sc::%defconstant csym::|@ai_v4mapped_cfg| 512)
 (sc::%defconstant csym::|@ai_addrconfig| 1024)
 (sc::%defconstant csym::|@ai_v4mapped| 2048)
 (sc::%defconstant csym::|@ai_default| (sc::bit-or 512 1024))
 (sc::%defconstant csym::|@ni_maxhost| 1025)
 (sc::%defconstant csym::|@ni_maxserv| 32)
 (sc::%defconstant csym::|@ni_nofqdn| 1)
 (sc::%defconstant csym::|@ni_numerichost| 2)
 (sc::%defconstant csym::|@ni_namereqd| 4)
 (sc::%defconstant csym::|@ni_numericserv| 8)
 (sc::%defconstant csym::|@ni_dgram| 16)
 (sc::%defconstant csym::|@ni_withscopeid| 32)
 (sc::%defconstant csym::|@scope_delimiter| #\%)
 (sc::%defconstant csym::|_@nl_types_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@nl_setd| 0)
 (sc::%defconstant csym::|@nl_cat_locale| 1)
 (sc::%defconstant csym::|_@sys_poll_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@pollin| 1) (sc::%defconstant csym::|@pollpri| 2)
 (sc::%defconstant csym::|@pollout| 4)
 (sc::%defconstant csym::|@pollrdnorm| 64)
 (sc::%defconstant csym::|@pollwrnorm| 4)
 (sc::%defconstant csym::|@pollrdband| 128)
 (sc::%defconstant csym::|@pollwrband| 256)
 (sc::%defconstant csym::|@pollinigneof| 8192)
 (sc::%defconstant csym::|@pollerr| 8) (sc::%defconstant csym::|@pollhup| 16)
 (sc::%defconstant csym::|@pollnval| 32)
 (sc::%defconstant csym::|@pollstandard| (sc::bit-or 1 2 4 64 128 256 8 16 32))
 (sc::%defconstant csym::|@inftim| (sc::- 1))
 (sc::%defconstant csym::|_@pthread_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sched_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@sched_fifo| 1)
 (sc::%defconstant csym::|@sched_other| 2)
 (sc::%defconstant csym::|@sched_rr| 3)
 (sc::%defconstant csym::|@pthread_destructor_iterations| 4)
 (sc::%defconstant csym::|@pthread_keys_max| 256)
 (sc::%defconstant csym::|@pthread_stack_min| 1024)
 (sc::%defconstant csym::|@pthread_threads_max|
  (sc::cast sc::unsigned-long 4294967295))
 (sc::%defconstant csym::|@pthread_barrier_serial_thread| (sc::- 1))
 (sc::%defconstant csym::|@pthread_detached| 1)
 (sc::%defconstant csym::|@pthread_scope_system| 2)
 (sc::%defconstant csym::|@pthread_inherit_sched| 4)
 (sc::%defconstant csym::|@pthread_nofloat| 8)
 (sc::%defconstant csym::|@pthread_create_detached| 1)
 (sc::%defconstant csym::|@pthread_create_joinable| 0)
 (sc::%defconstant csym::|@pthread_scope_process| 0)
 (sc::%defconstant csym::|@pthread_explicit_sched| 0)
 (sc::%defconstant csym::|@pthread_process_private| 0)
 (sc::%defconstant csym::|@pthread_process_shared| 1)
 (sc::%defconstant csym::|@pthread_cancel_enable| 0)
 (sc::%defconstant csym::|@pthread_cancel_disable| 1)
 (sc::%defconstant csym::|@pthread_cancel_deferred| 0)
 (sc::%defconstant csym::|@pthread_cancel_asynchronous| 2)
 (sc::%defconstant csym::|@pthread_canceled| (sc::cast (sc::ptr sc::void) 1))
 (sc::%defconstant csym::|@pthread_needs_init| 0)
 (sc::%defconstant csym::|@pthread_done_init| 1)
 (sc::%defconstant csym::|@pthread_once_init|
  (sc::c-exp "{ 0 , ((void *)0) }"))
 (sc::%defconstant csym::|@pthread_mutex_initializer|
  (sc::cast (sc::ptr sc::void) 0))
 (sc::%defconstant csym::|@pthread_cond_initializer|
  (sc::cast (sc::ptr sc::void) 0))
 (sc::%defconstant csym::|@pthread_rwlock_initializer|
  (sc::cast (sc::ptr sc::void) 0))
 (sc::%defconstant csym::pthread_condattr_default
  (sc::cast (sc::ptr sc::void) 0))
 (sc::%defconstant csym::pthread_mutexattr_default
  (sc::cast (sc::ptr sc::void) 0))
 (sc::%defconstant csym::pthread_attr_default (sc::cast (sc::ptr sc::void) 0))
 (sc::%defconstant csym::|@pthread_prio_none| 0)
 (sc::%defconstant csym::|@pthread_prio_inherit| 1)
 (sc::%defconstant csym::|@pthread_prio_protect| 2)
 (sc::%defconstant csym::|@pthread_mutex_default|
  csym::|@pthread_mutex_errorcheck|)
 (sc::%defconstant csym::|@mutex_type_fast| csym::|@pthread_mutex_normal|)
 (sc::%defconstant csym::|@mutex_type_counting_fast|
  csym::|@pthread_mutex_recursive|)
 (sc::%defconstant csym::|_@pwd_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@path_pwd| "/etc")
 (sc::%defconstant csym::|_@path_passwd| "/etc/passwd")
 (sc::%defconstant csym::|_@passwd| "passwd")
 (sc::%defconstant csym::|_@path_masterpasswd| "/etc/master.passwd")
 (sc::%defconstant csym::|_@masterpasswd| "master.passwd")
 (sc::%defconstant csym::|_@path_mp_db| "/etc/pwd.db")
 (sc::%defconstant csym::|_@mp_db| "pwd.db")
 (sc::%defconstant csym::|_@path_smp_db| "/etc/spwd.db")
 (sc::%defconstant csym::|_@smp_db| "spwd.db")
 (sc::%defconstant csym::|_@path_pwd_mkdb| "/usr/sbin/pwd_mkdb")
 (sc::%defconstant csym::|_@pw_version_mask| #\.ANp)
 (sc::%defmacro csym::|_@pw_versioned| (x v)
  (list 'sc::cast
        'sc::unsigned-char
        (list 'sc::bit-or
              (list 'sc::bit-and 'csym::x '207)
              (list 'sc::<< 'csym::v '4))))
 (sc::%defconstant csym::|_@pw_keybyname| #\1)
 (sc::%defconstant csym::|_@pw_keybynum| #\2)
 (sc::%defconstant csym::|_@pw_keybyuid| #\3)
 (sc::%defconstant csym::|_@pw_keyypenabled| #\4)
 (sc::%defconstant csym::|_@pw_keyypbynum| #\5)
 (sc::%defconstant csym::|_@pwd_version_key| "~|377|VERSION")
 (sc::%defconstant csym::|_@pwd_current_version| #\^d)
 (sc::%defconstant csym::|_@password_efmt1| #\_)
 (sc::%defconstant csym::|_@password_len| 128)
 (sc::%defmacro csym::|_@pwf| (x) (list 'sc::<< '1 'csym::x))
 (sc::%defconstant csym::|_@pwf_name| (sc::<< 1 0))
 (sc::%defconstant csym::|_@pwf_passwd| (sc::<< 1 1))
 (sc::%defconstant csym::|_@pwf_uid| (sc::<< 1 2))
 (sc::%defconstant csym::|_@pwf_gid| (sc::<< 1 3))
 (sc::%defconstant csym::|_@pwf_change| (sc::<< 1 4))
 (sc::%defconstant csym::|_@pwf_class| (sc::<< 1 5))
 (sc::%defconstant csym::|_@pwf_gecos| (sc::<< 1 6))
 (sc::%defconstant csym::|_@pwf_dir| (sc::<< 1 7))
 (sc::%defconstant csym::|_@pwf_shell| (sc::<< 1 8))
 (sc::%defconstant csym::|_@pwf_expire| (sc::<< 1 9))
 (sc::%defconstant csym::|_@pwf_source| 12288)
 (sc::%defconstant csym::|_@pwf_files| 4096)
 (sc::%defconstant csym::|_@pwf_nis| 8192)
 (sc::%defconstant csym::|_@pwf_hesiod| 12288)
 (sc::%defconstant csym::|_@regex_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@reg_basic| 0)
 (sc::%defconstant csym::|@reg_extended| 1)
 (sc::%defconstant csym::|@reg_icase| 2)
 (sc::%defconstant csym::|@reg_nosub| 4)
 (sc::%defconstant csym::|@reg_newline| 8)
 (sc::%defconstant csym::|@reg_nospec| 16)
 (sc::%defconstant csym::|@reg_pend| 32)
 (sc::%defconstant csym::|@reg_dump| 128)
 (sc::%defconstant csym::|@reg_enosys| (sc::- 1))
 (sc::%defconstant csym::|@reg_nomatch| 1)
 (sc::%defconstant csym::|@reg_badpat| 2)
 (sc::%defconstant csym::|@reg_ecollate| 3)
 (sc::%defconstant csym::|@reg_ectype| 4)
 (sc::%defconstant csym::|@reg_eescape| 5)
 (sc::%defconstant csym::|@reg_esubreg| 6)
 (sc::%defconstant csym::|@reg_ebrack| 7)
 (sc::%defconstant csym::|@reg_eparen| 8)
 (sc::%defconstant csym::|@reg_ebrace| 9)
 (sc::%defconstant csym::|@reg_badbr| 10)
 (sc::%defconstant csym::|@reg_erange| 11)
 (sc::%defconstant csym::|@reg_espace| 12)
 (sc::%defconstant csym::|@reg_badrpt| 13)
 (sc::%defconstant csym::|@reg_empty| 14)
 (sc::%defconstant csym::|@reg_assert| 15)
 (sc::%defconstant csym::|@reg_invarg| 16)
 (sc::%defconstant csym::|@reg_illseq| 17)
 (sc::%defconstant csym::|@reg_atoi| 255)
 (sc::%defconstant csym::|@reg_itoa| 256)
 (sc::%defconstant csym::|@reg_notbol| 1)
 (sc::%defconstant csym::|@reg_noteol| 2)
 (sc::%defconstant csym::|@reg_startend| 4)
 (sc::%defconstant csym::|@reg_trace| 256)
 (sc::%defconstant csym::|@reg_large| 512)
 (sc::%defconstant csym::|@reg_backr| 1024)
 (sc::%defconstant csym::|_@sys_resource_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@prio_min| (sc::- 20))
 (sc::%defconstant csym::|@prio_max| 20)
 (sc::%defconstant csym::|@prio_process| 0)
 (sc::%defconstant csym::|@prio_pgrp| 1)
 (sc::%defconstant csym::|@prio_user| 2)
 (sc::%defconstant csym::|@rusage_self| 0)
 (sc::%defconstant csym::|@rusage_children| (sc::- 1))
 (sc::%defconstant csym::ru_first csym::ru_ixrss)
 (sc::%defconstant csym::ru_last csym::ru_nivcsw)
 (sc::%defconstant csym::|@rlimit_cpu| 0)
 (sc::%defconstant csym::|@rlimit_fsize| 1)
 (sc::%defconstant csym::|@rlimit_data| 2)
 (sc::%defconstant csym::|@rlimit_stack| 3)
 (sc::%defconstant csym::|@rlimit_core| 4)
 (sc::%defconstant csym::|@rlimit_rss| 5)
 (sc::%defconstant csym::|@rlimit_memlock| 6)
 (sc::%defconstant csym::|@rlimit_nproc| 7)
 (sc::%defconstant csym::|@rlimit_nofile| 8)
 (sc::%defconstant csym::|@rlimit_sbsize| 9)
 (sc::%defconstant csym::|@rlimit_vmem| 10)
 (sc::%defconstant csym::|@rlimit_as| 10)
 (sc::%defconstant csym::|@rlim_nlimits| 11)
 (sc::%defconstant csym::|@rlim_infinity|
  (sc::cast csym::rlim_t (sc::- (sc::<< (sc::cast csym::u_quad_t 1) 63) 1)))
 (sc::%defconstant csym::|@cp_user| 0) (sc::%defconstant csym::|@cp_nice| 1)
 (sc::%defconstant csym::|@cp_sys| 2) (sc::%defconstant csym::|@cp_intr| 3)
 (sc::%defconstant csym::|@cp_idle| 4) (sc::%defconstant csym::|@cpustates| 5)
 (sc::%defconstant csym::|_@search_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_sem_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@sem_undo| 4096)
 (sc::%defconstant csym::|@getncnt| 3) (sc::%defconstant csym::|@getpid| 4)
 (sc::%defconstant csym::|@getval| 5) (sc::%defconstant csym::|@getall| 6)
 (sc::%defconstant csym::|@getzcnt| 7) (sc::%defconstant csym::|@setval| 8)
 (sc::%defconstant csym::|@setall| 9) (sc::%defconstant csym::|@sem_stat| 10)
 (sc::%defconstant csym::|@sem_info| 11) (sc::%defconstant csym::|@sem_a| 128)
 (sc::%defconstant csym::|@sem_r| 256)
 (sc::%defconstant csym::|_@semaphore_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@sem_failed| (sc::cast (sc::ptr csym::sem_t) 0))
 (sc::%defconstant csym::|@sem_value_max|
  (sc::bit-not (sc::cast sc::unsigned-int 0)))
 (sc::%defconstant csym::|_@setjmp_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@machine_setjmp_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@jblen| 11)
 (sc::%defconstant csym::|_@sys_shm_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@shm_rdonly| 4096)
 (sc::%defconstant csym::|@shm_rnd| 8192)
 (sc::%defconstant csym::|@shmlba| csym::|@page_size|)
 (sc::%defconstant csym::|@shm_r| 256) (sc::%defconstant csym::|@shm_w| 128)
 (sc::%defconstant csym::|@shm_lock| 11)
 (sc::%defconstant csym::|@shm_unlock| 12)
 (sc::%defconstant csym::|@shm_stat| 13)
 (sc::%defconstant csym::|@shm_info| 14)
 (sc::%defconstant csym::|_@signal_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_socket_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys__iovec_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@no_namespace_pollution| (sc::c-exp ""))
 (sc::%defconstant csym::|_@alignbytes| (sc::- (sc::sizeof sc::int) 1))
 (sc::%defmacro csym::|_@align| (p)
  (list 'sc::bit-and
        (list 'sc::+
              (list 'sc::cast 'sc::unsigned-int 'csym::p)
              (list 'sc::- (list 'sc::sizeof 'sc::int) '1))
        (list 'sc::bit-not (list 'sc::- (list 'sc::sizeof 'sc::int) '1))))
 (sc::%defconstant csym::|_@machine| 1)
 (sc::%defconstant csym::|_@machine_arch| 1)
 (sc::%defconstant csym::|@sock_stream| 1)
 (sc::%defconstant csym::|@sock_dgram| 2)
 (sc::%defconstant csym::|@sock_raw| 3) (sc::%defconstant csym::|@sock_rdm| 4)
 (sc::%defconstant csym::|@sock_seqpacket| 5)
 (sc::%defconstant csym::|@so_debug| 1)
 (sc::%defconstant csym::|@so_acceptconn| 2)
 (sc::%defconstant csym::|@so_reuseaddr| 4)
 (sc::%defconstant csym::|@so_keepalive| 8)
 (sc::%defconstant csym::|@so_dontroute| 16)
 (sc::%defconstant csym::|@so_broadcast| 32)
 (sc::%defconstant csym::|@so_useloopback| 64)
 (sc::%defconstant csym::|@so_linger| 128)
 (sc::%defconstant csym::|@so_oobinline| 256)
 (sc::%defconstant csym::|@so_reuseport| 512)
 (sc::%defconstant csym::|@so_timestamp| 1024)
 (sc::%defconstant csym::|@so_nosigpipe| 2048)
 (sc::%defconstant csym::|@so_acceptfilter| 4096)
 (sc::%defconstant csym::|@so_bintime| 8192)
 (sc::%defconstant csym::|@so_sndbuf| 4097)
 (sc::%defconstant csym::|@so_rcvbuf| 4098)
 (sc::%defconstant csym::|@so_sndlowat| 4099)
 (sc::%defconstant csym::|@so_rcvlowat| 4100)
 (sc::%defconstant csym::|@so_sndtimeo| 4101)
 (sc::%defconstant csym::|@so_rcvtimeo| 4102)
 (sc::%defconstant csym::|@so_error| 4103)
 (sc::%defconstant csym::|@so_type| 4104)
 (sc::%defconstant csym::|@so_label| 4105)
 (sc::%defconstant csym::|@so_peerlabel| 4112)
 (sc::%defconstant csym::|@sol_socket| 65535)
 (sc::%defconstant csym::|@af_unspec| 0) (sc::%defconstant csym::|@af_local| 1)
 (sc::%defconstant csym::|@af_unix| 1) (sc::%defconstant csym::|@af_inet| 2)
 (sc::%defconstant csym::|@af_implink| 3) (sc::%defconstant csym::|@af_pup| 4)
 (sc::%defconstant csym::|@af_chaos| 5)
 (sc::%defconstant csym::|@af_netbios| 6) (sc::%defconstant csym::|@af_iso| 7)
 (sc::%defconstant csym::|@af_osi| 7) (sc::%defconstant csym::|@af_ecma| 8)
 (sc::%defconstant csym::|@af_datakit| 9)
 (sc::%defconstant csym::|@af_ccitt| 10) (sc::%defconstant csym::|@af_sna| 11)
 (sc::%defconstant csym::|@AF_DEC@net| 12)
 (sc::%defconstant csym::|@af_dli| 13) (sc::%defconstant csym::|@af_lat| 14)
 (sc::%defconstant csym::|@af_hylink| 15)
 (sc::%defconstant csym::|@af_appletalk| 16)
 (sc::%defconstant csym::|@af_route| 17) (sc::%defconstant csym::|@af_link| 18)
 (sc::%defconstant csym::|pseudo_@AF_XTP| 19)
 (sc::%defconstant csym::|@af_coip| 20) (sc::%defconstant csym::|@af_cnt| 21)
 (sc::%defconstant csym::|pseudo_@AF_RTIP| 22)
 (sc::%defconstant csym::|@af_ipx| 23) (sc::%defconstant csym::|@af_sip| 24)
 (sc::%defconstant csym::|pseudo_@AF_PIP| 25)
 (sc::%defconstant csym::|@af_isdn| 26) (sc::%defconstant csym::|@af_e164| 26)
 (sc::%defconstant csym::|pseudo_@AF_KEY| 27)
 (sc::%defconstant csym::|@af_inet6| 28) (sc::%defconstant csym::|@af_natm| 29)
 (sc::%defconstant csym::|@af_atm| 30)
 (sc::%defconstant csym::|pseudo_@AF_HDRCMPLT| 31)
 (sc::%defconstant csym::|@af_netgraph| 32)
 (sc::%defconstant csym::|@af_slow| 33)
 (sc::%defconstant csym::|@af_scluster| 34)
 (sc::%defconstant csym::|@af_arp| 35)
 (sc::%defconstant csym::|@af_bluetooth| 36)
 (sc::%defconstant csym::|@af_max| 37)
 (sc::%defconstant csym::|@sock_maxaddrlen| 255)
 (sc::%defconstant csym::|_@ss_maxsize| (sc::cast sc::unsigned-int 128))
 (sc::%defconstant csym::|_@ss_alignsize| (sc::sizeof csym::__int64_t))
 (sc::%defconstant csym::|_@ss_pad1size|
  (sc::- (sc::- (sc::sizeof csym::__int64_t) (sc::sizeof sc::unsigned-char))
   (sc::sizeof csym::sa_family_t)))
 (sc::%defconstant csym::|_@ss_pad2size|
  (sc::-
   (sc::-
    (sc::-
     (sc::- (sc::cast sc::unsigned-int 128) (sc::sizeof sc::unsigned-char))
     (sc::sizeof csym::sa_family_t))
    (sc::- (sc::- (sc::sizeof csym::__int64_t) (sc::sizeof sc::unsigned-char))
     (sc::sizeof csym::sa_family_t)))
   (sc::sizeof csym::__int64_t)))
 (sc::%defconstant csym::|@pf_unspec| 0) (sc::%defconstant csym::|@pf_local| 1)
 (sc::%defconstant csym::|@pf_unix| 1) (sc::%defconstant csym::|@pf_inet| 2)
 (sc::%defconstant csym::|@pf_implink| 3) (sc::%defconstant csym::|@pf_pup| 4)
 (sc::%defconstant csym::|@pf_chaos| 5)
 (sc::%defconstant csym::|@pf_netbios| 6) (sc::%defconstant csym::|@pf_iso| 7)
 (sc::%defconstant csym::|@pf_osi| 7) (sc::%defconstant csym::|@pf_ecma| 8)
 (sc::%defconstant csym::|@pf_datakit| 9)
 (sc::%defconstant csym::|@pf_ccitt| 10) (sc::%defconstant csym::|@pf_sna| 11)
 (sc::%defconstant csym::|@PF_DEC@net| 12)
 (sc::%defconstant csym::|@pf_dli| 13) (sc::%defconstant csym::|@pf_lat| 14)
 (sc::%defconstant csym::|@pf_hylink| 15)
 (sc::%defconstant csym::|@pf_appletalk| 16)
 (sc::%defconstant csym::|@pf_route| 17) (sc::%defconstant csym::|@pf_link| 18)
 (sc::%defconstant csym::|@pf_xtp| 19) (sc::%defconstant csym::|@pf_coip| 20)
 (sc::%defconstant csym::|@pf_cnt| 21) (sc::%defconstant csym::|@pf_sip| 24)
 (sc::%defconstant csym::|@pf_ipx| 23) (sc::%defconstant csym::|@pf_rtip| 22)
 (sc::%defconstant csym::|@pf_pip| 25) (sc::%defconstant csym::|@pf_isdn| 26)
 (sc::%defconstant csym::|@pf_key| 27) (sc::%defconstant csym::|@pf_inet6| 28)
 (sc::%defconstant csym::|@pf_natm| 29) (sc::%defconstant csym::|@pf_atm| 30)
 (sc::%defconstant csym::|@pf_netgraph| 32)
 (sc::%defconstant csym::|@pf_slow| 33)
 (sc::%defconstant csym::|@pf_scluster| 34)
 (sc::%defconstant csym::|@pf_arp| 35)
 (sc::%defconstant csym::|@pf_bluetooth| 36)
 (sc::%defconstant csym::|@pf_max| 37) (sc::%defconstant csym::|@net_maxid| 37)
 (sc::%defconstant csym::|@ctl_net_names|
  (sc::c-exp
   "{ { 0, 0 }, { \"unix\", CTLTYPE_NODE }, { \"inet\", CTLTYPE_NODE }, { \"implink\", CTLTYPE_NODE }, { \"pup\", CTLTYPE_NODE }, { \"chaos\", CTLTYPE_NODE }, { \"xerox_ns\", CTLTYPE_NODE }, { \"iso\", CTLTYPE_NODE }, { \"emca\", CTLTYPE_NODE }, { \"datakit\", CTLTYPE_NODE }, { \"ccitt\", CTLTYPE_NODE }, { \"ibm_sna\", CTLTYPE_NODE }, { \"decnet\", CTLTYPE_NODE }, { \"dec_dli\", CTLTYPE_NODE }, { \"lat\", CTLTYPE_NODE }, { \"hylink\", CTLTYPE_NODE }, { \"appletalk\", CTLTYPE_NODE }, { \"route\", CTLTYPE_NODE }, { \"link_layer\", CTLTYPE_NODE }, { \"xtp\", CTLTYPE_NODE }, { \"coip\", CTLTYPE_NODE }, { \"cnt\", CTLTYPE_NODE }, { \"rtip\", CTLTYPE_NODE }, { \"ipx\", CTLTYPE_NODE }, { \"sip\", CTLTYPE_NODE }, { \"pip\", CTLTYPE_NODE }, { \"isdn\", CTLTYPE_NODE }, { \"key\", CTLTYPE_NODE }, { \"inet6\", CTLTYPE_NODE }, { \"natm\", CTLTYPE_NODE }, { \"atm\", CTLTYPE_NODE }, { \"hdrcomplete\", CTLTYPE_NODE }, { \"netgraph\", CTLTYPE_NODE }, { \"snp\", CTLTYPE_NODE }, { \"scp\", CTLTYPE_NODE }, }"))
 (sc::%defconstant csym::|@net_rt_dump| 1)
 (sc::%defconstant csym::|@net_rt_flags| 2)
 (sc::%defconstant csym::|@net_rt_iflist| 3)
 (sc::%defconstant csym::|@net_rt_ifmalist| 4)
 (sc::%defconstant csym::|@net_rt_maxid| 5)
 (sc::%defconstant csym::|@ctl_net_rt_names|
  (sc::c-exp
   "{ { 0, 0 }, { \"dump\", CTLTYPE_STRUCT }, { \"flags\", CTLTYPE_STRUCT }, { \"iflist\", CTLTYPE_STRUCT }, { \"ifmalist\", CTLTYPE_STRUCT }, }"))
 (sc::%defconstant csym::|@somaxconn| 128)
 (sc::%defconstant csym::|@msg_oob| 1) (sc::%defconstant csym::|@msg_peek| 2)
 (sc::%defconstant csym::|@msg_dontroute| 4)
 (sc::%defconstant csym::|@msg_eor| 8) (sc::%defconstant csym::|@msg_trunc| 16)
 (sc::%defconstant csym::|@msg_ctrunc| 32)
 (sc::%defconstant csym::|@msg_waitall| 64)
 (sc::%defconstant csym::|@msg_dontwait| 128)
 (sc::%defconstant csym::|@msg_eof| 256)
 (sc::%defconstant csym::|@msg_nbio| 16384)
 (sc::%defconstant csym::|@msg_compat| 32768)
 (sc::%defconstant csym::|@cmgroup_max| 16)
 (sc::%defmacro csym::|@cmsg_data| (cmsg)
  (list 'sc::+
        (list 'sc::cast (list 'sc::ptr 'sc::unsigned-char) 'csym::cmsg)
        (list 'sc::bit-and
              (list 'sc::+
                    (list 'sc::cast
                          'sc::unsigned-int
                          (list 'sc::sizeof (list 'sc::struct 'csym::cmsghdr)))
                    (list 'sc::- (list 'sc::sizeof 'sc::int) '1))
              (list 'sc::bit-not
                    (list 'sc::- (list 'sc::sizeof 'sc::int) '1)))))
 (sc::%defmacro csym::|@cmsg_nxthdr| (mhdr cmsg)
  (list 'sc::if-exp
        (list 'sc::>
              (list 'sc::+
                    (list 'sc::+
                          (list 'sc::cast
                                (list 'sc::ptr 'sc::char)
                                'csym::cmsg)
                          (list 'sc::bit-and
                                (list 'sc::+
                                      (list 'sc::cast
                                            'sc::unsigned-int
                                            (list 'sc::fref
                                                  (list 'sc::mref 'csym::cmsg)
                                                  'csym::cmsg_len))
                                      (list 'sc::-
                                            (list 'sc::sizeof 'sc::int)
                                            '1))
                                (list 'sc::bit-not
                                      (list 'sc::-
                                            (list 'sc::sizeof 'sc::int)
                                            '1))))
                    (list 'sc::bit-and
                          (list 'sc::+
                                (list 'sc::cast
                                      'sc::unsigned-int
                                      (list 'sc::sizeof
                                            (list 'sc::struct 'csym::cmsghdr)))
                                (list 'sc::- (list 'sc::sizeof 'sc::int) '1))
                          (list 'sc::bit-not
                                (list 'sc::- (list 'sc::sizeof 'sc::int) '1))))
              (list 'sc::+
                    (list 'sc::cast
                          (list 'sc::ptr 'sc::char)
                          (list 'sc::fref
                                (list 'sc::mref 'csym::mhdr)
                                'csym::msg_control))
                    (list 'sc::fref
                          (list 'sc::mref 'csym::mhdr)
                          'csym::msg_controllen)))
        (list 'sc::cast (list 'sc::ptr (list 'sc::struct 'csym::cmsghdr)) '0)
        (list 'sc::cast
              (list 'sc::ptr (list 'sc::struct 'csym::cmsghdr))
              (list 'sc::+
                    (list 'sc::cast (list 'sc::ptr 'sc::char) 'csym::cmsg)
                    (list 'sc::bit-and
                          (list 'sc::+
                                (list 'sc::cast
                                      'sc::unsigned-int
                                      (list 'sc::fref
                                            (list 'sc::mref 'csym::cmsg)
                                            'csym::cmsg_len))
                                (list 'sc::- (list 'sc::sizeof 'sc::int) '1))
                          (list 'sc::bit-not
                                (list 'sc::-
                                      (list 'sc::sizeof 'sc::int)
                                      '1)))))))
 (sc::%defmacro csym::|@cmsg_firsthdr| (mhdr)
  (list 'sc::if-exp
        (list 'sc::>=
              (list 'sc::fref
                    (list 'sc::mref 'csym::mhdr)
                    'csym::msg_controllen)
              (list 'sc::sizeof (list 'sc::struct 'csym::cmsghdr)))
        (list 'sc::cast
              (list 'sc::ptr (list 'sc::struct 'csym::cmsghdr))
              (list 'sc::fref (list 'sc::mref 'csym::mhdr) 'csym::msg_control))
        (list 'sc::cast
              (list 'sc::ptr (list 'sc::struct 'csym::cmsghdr))
              (list 'sc::cast (list 'sc::ptr 'sc::void) '0))))
 (sc::%defmacro csym::|@cmsg_space| (l)
  (list 'sc::+
        (list 'sc::bit-and
              (list 'sc::+
                    (list 'sc::cast
                          'sc::unsigned-int
                          (list 'sc::sizeof (list 'sc::struct 'csym::cmsghdr)))
                    (list 'sc::- (list 'sc::sizeof 'sc::int) '1))
              (list 'sc::bit-not (list 'sc::- (list 'sc::sizeof 'sc::int) '1)))
        (list 'sc::bit-and
              (list 'sc::+
                    (list 'sc::cast 'sc::unsigned-int 'csym::l)
                    (list 'sc::- (list 'sc::sizeof 'sc::int) '1))
              (list 'sc::bit-not
                    (list 'sc::- (list 'sc::sizeof 'sc::int) '1)))))
 (sc::%defmacro csym::|@cmsg_len| (l)
  (list 'sc::+
        (list 'sc::bit-and
              (list 'sc::+
                    (list 'sc::cast
                          'sc::unsigned-int
                          (list 'sc::sizeof (list 'sc::struct 'csym::cmsghdr)))
                    (list 'sc::- (list 'sc::sizeof 'sc::int) '1))
              (list 'sc::bit-not (list 'sc::- (list 'sc::sizeof 'sc::int) '1)))
        'csym::l))
 (sc::%defconstant csym::|@scm_rights| 1)
 (sc::%defconstant csym::|@scm_timestamp| 2)
 (sc::%defconstant csym::|@scm_creds| 3)
 (sc::%defconstant csym::|@scm_bintime| 4)
 (sc::%defconstant csym::|@shut_rd| 0) (sc::%defconstant csym::|@shut_wr| 1)
 (sc::%defconstant csym::|@shut_rdwr| 2)
 (sc::%defconstant csym::|@sf_nodiskio| 1)
 (sc::%defconstant csym::|_@sys_statvfs_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@st_rdonly| 1)
 (sc::%defconstant csym::|@st_nosuid| 2)
 (sc::%defconstant csym::|_@machine_stdarg_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@va_list_declared| (sc::c-exp ""))
 (sc::%defmacro csym::va_start (ap last)
  (list 'csym::__builtin_stdarg_start 'csym::ap 'csym::last))
 (sc::%defmacro csym::va_arg (ap type)
  (list 'csym::__builtin_va_arg 'csym::ap 'csym::type))
 (sc::%defmacro csym::va_copy (dest src)
  (list 'csym::__builtin_va_copy 'csym::dest 'csym::src))
 (sc::%defmacro csym::va_end (ap) (list 'csym::__builtin_va_end 'csym::ap))
 (sc::%defconstant csym::|_@stdbool_h_| (sc::c-exp ""))
 (sc::%defconstant csym::__bool_true_false_are_defined 1)
 (sc::%defconstant csym::false 0) (sc::%defconstant csym::true 1)
 (sc::%defconstant csym::bool (sc::c-exp "_Bool"))
 (sc::%defconstant csym::|_@stddef_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@rune_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@wchar_t_declared| (sc::c-exp ""))
 (sc::%defmacro csym::offsetof (type member)
  (list 'sc::cast
        'csym::size_t
        (list 'sc::ptr
              (list 'sc::fref
                    (list 'sc::mref
                          (list 'sc::cast (list 'sc::ptr 'csym::type) '0))
                    'csym::member))))
 (sc::%defconstant csym::|_@stdio_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@fstdio| (sc::c-exp ""))
 (sc::%defconstant csym::|_@stdstream_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|__@slbf| 1) (sc::%defconstant csym::|__@snbf| 2)
 (sc::%defconstant csym::|__@srd| 4) (sc::%defconstant csym::|__@swr| 8)
 (sc::%defconstant csym::|__@srw| 16) (sc::%defconstant csym::|__@seof| 32)
 (sc::%defconstant csym::|__@serr| 64) (sc::%defconstant csym::|__@smbf| 128)
 (sc::%defconstant csym::|__@sapp| 256) (sc::%defconstant csym::|__@sstr| 512)
 (sc::%defconstant csym::|__@sopt| 1024)
 (sc::%defconstant csym::|__@snpt| 2048)
 (sc::%defconstant csym::|__@soff| 4096)
 (sc::%defconstant csym::|__@smod| 8192)
 (sc::%defconstant csym::|__@salc| 16384)
 (sc::%defconstant csym::|__@sign| 32768) (sc::%defconstant csym::|_@iofbf| 0)
 (sc::%defconstant csym::|_@iolbf| 1) (sc::%defconstant csym::|_@ionbf| 2)
 (sc::%defconstant csym::|@bufsiz| 1024)
 (sc::%defconstant csym::|@eof| (sc::- 1))
 (sc::%defconstant csym::|@fopen_max| 20)
 (sc::%defconstant csym::|@filename_max| 1024)
 (sc::%defconstant csym::|@P_@tmpdir| "/var/tmp/")
 (sc::%defconstant csym::|@L_@tmpnam| 1024)
 (sc::%defconstant csym::|@tmp_max| 308915776)
 (sc::%defconstant csym::|@seek_set| 0) (sc::%defconstant csym::|@seek_cur| 1)
 (sc::%defconstant csym::|@seek_end| 2)
 (sc::%defconstant csym::stdin csym::__stdinp)
 (sc::%defconstant csym::stdout csym::__stdoutp)
 (sc::%defconstant csym::stderr csym::__stderrp)
 (sc::%defconstant csym::|@L_@cuserid| 17)
 (sc::%defconstant csym::|@L_@ctermid| 1024)
 (sc::%defconstant csym::|__@attr_format_arg| (sc::c-exp ""))
 (sc::%defmacro csym::fropen (cookie fn)
  (list 'sc::c-exp "funopen ( ~0@*~a , ~1@*~a , 0 , 0 , 0 )" cookie fn))
 (sc::%defmacro csym::fwopen (cookie fn)
  (list 'sc::c-exp "funopen ( ~0@*~a , 0 , ~1@*~a , 0 , 0 )" cookie fn))
 (sc::%defmacro csym::__sgetc (p)
  (list 'sc::if-exp
        (list 'sc::<
              (list 'sc::--
                    (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_r))
              '0)
        (list 'csym::__srget 'csym::p)
        (list 'sc::cast
              'sc::int
              (list 'sc::mref
                    (list 'sc::inc
                          (list 'sc::fref
                                (list 'sc::mref 'csym::p)
                                'csym::_p))))))
 (sc::%defmacro csym::__sfeof (p)
  (list 'sc::!=
        (list 'sc::bit-and
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
              '32)
        '0))
 (sc::%defmacro csym::__sferror (p)
  (list 'sc::!=
        (list 'sc::bit-and
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
              '64)
        '0))
 (sc::%defmacro csym::__sclearerr (p)
  (list 'sc::cast
        'sc::void
        (list 'sc::bit-and=
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
              (list 'sc::bit-not (list 'sc::bit-or '64 '32)))))
 (sc::%defmacro csym::__sfileno (p)
  (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_file))
 (sc::%defmacro csym::feof (p)
  (list 'sc::if-exp
        (list 'sc::not 'csym::__isthreaded)
        (list 'sc::!=
              (list 'sc::bit-and
                    (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
                    '32)
              '0)
        (list 'csym::feof 'csym::p)))
 (sc::%defmacro csym::ferror (p)
  (list 'sc::if-exp
        (list 'sc::not 'csym::__isthreaded)
        (list 'sc::!=
              (list 'sc::bit-and
                    (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
                    '64)
              '0)
        (list 'csym::ferror 'csym::p)))
 (sc::%defmacro csym::clearerr (p)
  (list 'sc::if-exp
        (list 'sc::not 'csym::__isthreaded)
        (list 'sc::cast
              'sc::void
              (list 'sc::bit-and=
                    (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
                    (list 'sc::bit-not (list 'sc::bit-or '64 '32))))
        (list 'csym::clearerr 'csym::p)))
 (sc::%defmacro csym::fileno (p)
  (list 'sc::if-exp
        (list 'sc::not 'csym::__isthreaded)
        (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_file)
        (list 'csym::fileno 'csym::p)))
 (sc::%defmacro csym::getc (fp)
  (list 'sc::if-exp
        (list 'sc::not 'csym::__isthreaded)
        (list 'sc::if-exp
              (list 'sc::<
                    (list 'sc::--
                          (list 'sc::fref
                                (list 'sc::mref 'csym::fp)
                                'csym::_r))
                    '0)
              (list 'csym::__srget 'csym::fp)
              (list 'sc::cast
                    'sc::int
                    (list 'sc::mref
                          (list 'sc::inc
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::fp)
                                      'csym::_p)))))
        (list 'csym::getc 'csym::fp)))
 (sc::%defmacro csym::putc (x fp)
  (list 'sc::if-exp
        (list 'sc::not 'csym::__isthreaded)
        (list 'csym::__sputc 'csym::x 'csym::fp)
        (list 'csym::putc 'csym::x 'csym::fp)))
 (sc::%defmacro csym::getchar nil
  (list 'sc::if-exp
        (list 'sc::not 'csym::__isthreaded)
        (list 'sc::if-exp
              (list 'sc::<
                    (list 'sc::--
                          (list 'sc::fref
                                (list 'sc::mref 'csym::__stdinp)
                                'csym::_r))
                    '0)
              (list 'csym::__srget 'csym::__stdinp)
              (list 'sc::cast
                    'sc::int
                    (list 'sc::mref
                          (list 'sc::inc
                                (list 'sc::fref
                                      (list 'sc::mref 'csym::__stdinp)
                                      'csym::_p)))))
        (list 'csym::getc 'csym::__stdinp)))
 (sc::%defmacro csym::putchar (x)
  (list 'sc::if-exp
        (list 'sc::not 'csym::__isthreaded)
        (list 'csym::__sputc 'csym::x 'csym::__stdoutp)
        (list 'csym::putc 'csym::x 'csym::__stdoutp)))
 (sc::%defmacro csym::feof_unlocked (p)
  (list 'sc::!=
        (list 'sc::bit-and
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
              '32)
        '0))
 (sc::%defmacro csym::ferror_unlocked (p)
  (list 'sc::!=
        (list 'sc::bit-and
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
              '64)
        '0))
 (sc::%defmacro csym::clearerr_unlocked (p)
  (list 'sc::cast
        'sc::void
        (list 'sc::bit-and=
              (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_flags)
              (list 'sc::bit-not (list 'sc::bit-or '64 '32)))))
 (sc::%defmacro csym::fileno_unlocked (p)
  (list 'sc::fref (list 'sc::mref 'csym::p) 'csym::_file))
 (sc::%defmacro csym::getc_unlocked (fp)
  (list 'sc::if-exp
        (list 'sc::<
              (list 'sc::--
                    (list 'sc::fref (list 'sc::mref 'csym::fp) 'csym::_r))
              '0)
        (list 'csym::__srget 'csym::fp)
        (list 'sc::cast
              'sc::int
              (list 'sc::mref
                    (list 'sc::inc
                          (list 'sc::fref
                                (list 'sc::mref 'csym::fp)
                                'csym::_p))))))
 (sc::%defmacro csym::putc_unlocked (x fp)
  (list 'csym::__sputc 'csym::x 'csym::fp))
 (sc::%defmacro csym::getchar_unlocked nil
  (list 'sc::if-exp
        (list 'sc::<
              (list 'sc::--
                    (list 'sc::fref
                          (list 'sc::mref 'csym::__stdinp)
                          'csym::_r))
              '0)
        (list 'csym::__srget 'csym::__stdinp)
        (list 'sc::cast
              'sc::int
              (list 'sc::mref
                    (list 'sc::inc
                          (list 'sc::fref
                                (list 'sc::mref 'csym::__stdinp)
                                'csym::_p))))))
 (sc::%defmacro csym::putchar_unlocked (x)
  (list 'csym::__sputc 'csym::x 'csym::__stdoutp))
 (sc::%defconstant csym::|_@stdlib_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@exit_failure| 1)
 (sc::%defconstant csym::|@exit_success| 0)
 (sc::%defconstant csym::|@rand_max| 2147483647)
 (sc::%defconstant csym::|@mb_cur_max| csym::__mb_cur_max)
 (sc::%defconstant csym::|_@mkstemp_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@mktemp_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@setkey_declared| (sc::c-exp ""))
 (sc::%defmacro csym::alloca (sz) (list 'csym::__builtin_alloca 'csym::sz))
 (sc::%defconstant csym::|_@string_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@strings_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_syslog_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@path_log| "/var/run/log")
 (sc::%defconstant csym::|_@path_log_priv| "/var/run/logpriv")
 (sc::%defconstant csym::|_@path_oldlog| "/dev/log")
 (sc::%defconstant csym::|@log_emerg| 0)
 (sc::%defconstant csym::|@log_alert| 1) (sc::%defconstant csym::|@log_crit| 2)
 (sc::%defconstant csym::|@log_err| 3)
 (sc::%defconstant csym::|@log_warning| 4)
 (sc::%defconstant csym::|@log_notice| 5)
 (sc::%defconstant csym::|@log_info| 6) (sc::%defconstant csym::|@log_debug| 7)
 (sc::%defconstant csym::|@log_primask| 7)
 (sc::%defmacro csym::|@log_pri| (p) (list 'sc::bit-and 'csym::p '7))
 (sc::%defmacro csym::|@log_makepri| (fac pri)
  (list 'sc::bit-or 'csym::fac 'csym::pri))
 (sc::%defconstant csym::|@log_kern| (sc::<< 0 3))
 (sc::%defconstant csym::|@log_user| (sc::<< 1 3))
 (sc::%defconstant csym::|@log_mail| (sc::<< 2 3))
 (sc::%defconstant csym::|@log_daemon| (sc::<< 3 3))
 (sc::%defconstant csym::|@log_auth| (sc::<< 4 3))
 (sc::%defconstant csym::|@log_syslog| (sc::<< 5 3))
 (sc::%defconstant csym::|@log_lpr| (sc::<< 6 3))
 (sc::%defconstant csym::|@log_news| (sc::<< 7 3))
 (sc::%defconstant csym::|@log_uucp| (sc::<< 8 3))
 (sc::%defconstant csym::|@log_cron| (sc::<< 9 3))
 (sc::%defconstant csym::|@log_authpriv| (sc::<< 10 3))
 (sc::%defconstant csym::|@log_ftp| (sc::<< 11 3))
 (sc::%defconstant csym::|@log_ntp| (sc::<< 12 3))
 (sc::%defconstant csym::|@log_security| (sc::<< 13 3))
 (sc::%defconstant csym::|@log_console| (sc::<< 14 3))
 (sc::%defconstant csym::|@log_local0| (sc::<< 16 3))
 (sc::%defconstant csym::|@log_local1| (sc::<< 17 3))
 (sc::%defconstant csym::|@log_local2| (sc::<< 18 3))
 (sc::%defconstant csym::|@log_local3| (sc::<< 19 3))
 (sc::%defconstant csym::|@log_local4| (sc::<< 20 3))
 (sc::%defconstant csym::|@log_local5| (sc::<< 21 3))
 (sc::%defconstant csym::|@log_local6| (sc::<< 22 3))
 (sc::%defconstant csym::|@log_local7| (sc::<< 23 3))
 (sc::%defconstant csym::|@log_nfacilities| 24)
 (sc::%defconstant csym::|@log_facmask| 1016)
 (sc::%defmacro csym::|@log_fac| (p)
  (list 'sc::>> (list 'sc::bit-and 'csym::p '1016) '3))
 (sc::%defmacro csym::|@log_mask| (pri) (list 'sc::<< '1 'csym::pri))
 (sc::%defmacro csym::|@log_upto| (pri)
  (list 'sc::- (list 'sc::<< '1 (list 'sc::+ 'csym::pri '1)) '1))
 (sc::%defconstant csym::|@log_pid| 1) (sc::%defconstant csym::|@log_cons| 2)
 (sc::%defconstant csym::|@log_odelay| 4)
 (sc::%defconstant csym::|@log_ndelay| 8)
 (sc::%defconstant csym::|@log_nowait| 16)
 (sc::%defconstant csym::|@log_perror| 32)
 (sc::%defconstant csym::|_@tar_h| (sc::c-exp ""))
 (sc::%defconstant csym::|@tmagic| "ustar")
 (sc::%defconstant csym::|@tmaglen| 6)
 (sc::%defconstant csym::|@tversion| "00")
 (sc::%defconstant csym::|@tverslen| 2) (sc::%defconstant csym::|@regtype| #\0)
 (sc::%defconstant csym::|@aregtype| #\Null)
 (sc::%defconstant csym::|@lnktype| #\1)
 (sc::%defconstant csym::|@symtype| #\2)
 (sc::%defconstant csym::|@chrtype| #\3)
 (sc::%defconstant csym::|@blktype| #\4)
 (sc::%defconstant csym::|@dirtype| #\5)
 (sc::%defconstant csym::|@fifotype| #\6)
 (sc::%defconstant csym::|@conttype| #\7)
 (sc::%defconstant csym::|@tsuid| 2048) (sc::%defconstant csym::|@tsgid| 1024)
 (sc::%defconstant csym::|@tsvtx| 512) (sc::%defconstant csym::|@turead| 256)
 (sc::%defconstant csym::|@tuwrite| 128) (sc::%defconstant csym::|@tuexec| 64)
 (sc::%defconstant csym::|@tgread| 32) (sc::%defconstant csym::|@tgwrite| 16)
 (sc::%defconstant csym::|@tgexec| 8) (sc::%defconstant csym::|@toread| 4)
 (sc::%defconstant csym::|@towrite| 2) (sc::%defconstant csym::|@toexec| 1)
 (sc::%defconstant csym::|_@netinet_tcp_h_| (sc::c-exp ""))
 (sc::%defconstant csym::tcp6_seq csym::tcp_seq)
 (sc::%defconstant csym::tcp6hdr csym::tcphdr)
 (sc::%defconstant csym::|@th_fin| 1) (sc::%defconstant csym::|@th_syn| 2)
 (sc::%defconstant csym::|@th_rst| 4) (sc::%defconstant csym::|@th_push| 8)
 (sc::%defconstant csym::|@th_ack| 16) (sc::%defconstant csym::|@th_urg| 32)
 (sc::%defconstant csym::|@th_ece| 64) (sc::%defconstant csym::|@th_cwr| 128)
 (sc::%defconstant csym::|@th_flags| (sc::bit-or 1 2 4 16 32 64 128))
 (sc::%defconstant csym::|@tcpopt_eol| 0)
 (sc::%defconstant csym::|@tcpopt_nop| 1)
 (sc::%defconstant csym::|@tcpopt_maxseg| 2)
 (sc::%defconstant csym::|@tcpolen_maxseg| 4)
 (sc::%defconstant csym::|@tcpopt_window| 3)
 (sc::%defconstant csym::|@tcpolen_window| 3)
 (sc::%defconstant csym::|@tcpopt_sack_permitted| 4)
 (sc::%defconstant csym::|@tcpolen_sack_permitted| 2)
 (sc::%defconstant csym::|@tcpopt_sack| 5)
 (sc::%defconstant csym::|@tcpolen_sack| 8)
 (sc::%defconstant csym::|@tcpopt_timestamp| 8)
 (sc::%defconstant csym::|@tcpolen_timestamp| 10)
 (sc::%defconstant csym::|@tcpolen_tstamp_appa| (sc::+ 10 2))
 (sc::%defconstant csym::|@tcpopt_tstamp_hdr|
  (sc::bit-or (sc::<< 1 24) (sc::<< 1 16) (sc::<< 8 8) 10))
 (sc::%defconstant csym::|@max_tcpoptlen| 40)
 (sc::%defconstant csym::|@tcpopt_cc| 11)
 (sc::%defconstant csym::|@tcpopt_ccnew| 12)
 (sc::%defconstant csym::|@tcpopt_ccecho| 13)
 (sc::%defconstant csym::|@tcpolen_cc| 6)
 (sc::%defconstant csym::|@tcpolen_cc_appa| (sc::+ 6 2))
 (sc::%defmacro csym::|@tcpopt_cc_hdr| (ccopt)
  (list 'sc::bit-or
        (list 'sc::<< '1 '24)
        (list 'sc::<< '1 '16)
        (list 'sc::<< 'csym::ccopt '8)
        '6))
 (sc::%defconstant csym::|@tcpopt_signature| 19)
 (sc::%defconstant csym::|@tcpolen_signature| 18)
 (sc::%defconstant csym::|@tcpopt_sack_permit_hdr|
  (sc::bit-or (sc::<< 1 24) (sc::<< 1 16) (sc::<< 4 8) 2))
 (sc::%defconstant csym::|@tcpopt_sack_hdr|
  (sc::bit-or (sc::<< 1 24) (sc::<< 1 16) (sc::<< 5 8)))
 (sc::%defconstant csym::|@max_sack_blks| 6)
 (sc::%defconstant csym::|@tcp_max_sack| 3)
 (sc::%defconstant csym::|@tcp_mss| 512)
 (sc::%defconstant csym::|@tcp_minmss| 216)
 (sc::%defconstant csym::|@tcp_minmssoverload| 0)
 (sc::%defconstant csym::|@tcp6_mss| 1024)
 (sc::%defconstant csym::|@tcp_maxwin| 65535)
 (sc::%defconstant csym::|@ttcp_client_snd_wnd| 4096)
 (sc::%defconstant csym::|@tcp_max_winshift| 14)
 (sc::%defconstant csym::|@tcp_maxburst| 4)
 (sc::%defconstant csym::|@tcp_maxhlen| (sc::<< 15 2))
 (sc::%defconstant csym::|@tcp_maxolen|
  (sc::- (sc::<< 15 2) (sc::sizeof (sc::struct csym::tcphdr))))
 (sc::%defconstant csym::|@tcp_nodelay| 1)
 (sc::%defconstant csym::|@tcp_maxseg| 2)
 (sc::%defconstant csym::|@tcp_nopush| 4)
 (sc::%defconstant csym::|@tcp_noopt| 8)
 (sc::%defconstant csym::|@tcp_md5sig| 16)
 (sc::%defconstant csym::|_@sys_termios_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@veof| 0) (sc::%defconstant csym::|@veol| 1)
 (sc::%defconstant csym::|@veol2| 2) (sc::%defconstant csym::|@verase| 3)
 (sc::%defconstant csym::|@vwerase| 4) (sc::%defconstant csym::|@vkill| 5)
 (sc::%defconstant csym::|@vreprint| 6) (sc::%defconstant csym::|@verase2| 7)
 (sc::%defconstant csym::|@vintr| 8) (sc::%defconstant csym::|@vquit| 9)
 (sc::%defconstant csym::|@vsusp| 10) (sc::%defconstant csym::|@vdsusp| 11)
 (sc::%defconstant csym::|@vstart| 12) (sc::%defconstant csym::|@vstop| 13)
 (sc::%defconstant csym::|@vlnext| 14) (sc::%defconstant csym::|@vdiscard| 15)
 (sc::%defconstant csym::|@vmin| 16) (sc::%defconstant csym::|@vtime| 17)
 (sc::%defconstant csym::|@vstatus| 18) (sc::%defconstant csym::|@nccs| 20)
 (sc::%defconstant csym::|_@posix_vdisable| 255)
 (sc::%defmacro csym::|@cceq| (val c)
  (list 'sc::if-exp
        (list 'sc::== 'csym::c 'csym::val)
        (list 'sc::!= 'csym::val '255)
        '0))
 (sc::%defconstant csym::|@ignbrk| 1) (sc::%defconstant csym::|@brkint| 2)
 (sc::%defconstant csym::|@ignpar| 4) (sc::%defconstant csym::|@parmrk| 8)
 (sc::%defconstant csym::|@inpck| 16) (sc::%defconstant csym::|@istrip| 32)
 (sc::%defconstant csym::|@inlcr| 64) (sc::%defconstant csym::|@igncr| 128)
 (sc::%defconstant csym::|@icrnl| 256) (sc::%defconstant csym::|@ixon| 512)
 (sc::%defconstant csym::|@ixoff| 1024) (sc::%defconstant csym::|@ixany| 2048)
 (sc::%defconstant csym::|@imaxbel| 8192) (sc::%defconstant csym::|@opost| 1)
 (sc::%defconstant csym::|@onlcr| 2) (sc::%defconstant csym::|@oxtabs| 4)
 (sc::%defconstant csym::|@onoeot| 8) (sc::%defconstant csym::|@ocrnl| 16)
 (sc::%defconstant csym::|@onocr| 32) (sc::%defconstant csym::|@onlret| 64)
 (sc::%defconstant csym::|@cignore| 1) (sc::%defconstant csym::|@csize| 768)
 (sc::%defconstant csym::|@cs5| 0) (sc::%defconstant csym::|@cs6| 256)
 (sc::%defconstant csym::|@cs7| 512) (sc::%defconstant csym::|@cs8| 768)
 (sc::%defconstant csym::|@cstopb| 1024) (sc::%defconstant csym::|@cread| 2048)
 (sc::%defconstant csym::|@parenb| 4096)
 (sc::%defconstant csym::|@parodd| 8192)
 (sc::%defconstant csym::|@hupcl| 16384)
 (sc::%defconstant csym::|@clocal| 32768)
 (sc::%defconstant csym::|@ccts_oflow| 65536)
 (sc::%defconstant csym::|@crtscts| (sc::bit-or 65536 131072))
 (sc::%defconstant csym::|@crts_iflow| 131072)
 (sc::%defconstant csym::|@cdtr_iflow| 262144)
 (sc::%defconstant csym::|@cdsr_oflow| 524288)
 (sc::%defconstant csym::|@ccar_oflow| 1048576)
 (sc::%defconstant csym::|@mdmbuf| 1048576)
 (sc::%defconstant csym::|@echoke| 1) (sc::%defconstant csym::|@echoe| 2)
 (sc::%defconstant csym::|@echok| 4) (sc::%defconstant csym::|@echo| 8)
 (sc::%defconstant csym::|@echonl| 16) (sc::%defconstant csym::|@echoprt| 32)
 (sc::%defconstant csym::|@echoctl| 64) (sc::%defconstant csym::|@isig| 128)
 (sc::%defconstant csym::|@icanon| 256)
 (sc::%defconstant csym::|@altwerase| 512)
 (sc::%defconstant csym::|@iexten| 1024)
 (sc::%defconstant csym::|@extproc| 2048)
 (sc::%defconstant csym::|@tostop| 4194304)
 (sc::%defconstant csym::|@flusho| 8388608)
 (sc::%defconstant csym::|@nokerninfo| 33554432)
 (sc::%defconstant csym::|@pendin| 536870912)
 (sc::%defconstant csym::|@noflsh| 2147483648)
 (sc::%defconstant csym::|@tcsanow| 0) (sc::%defconstant csym::|@tcsadrain| 1)
 (sc::%defconstant csym::|@tcsaflush| 2)
 (sc::%defconstant csym::|@tcsasoft| 16) (sc::%defconstant csym::|@b0| 0)
 (sc::%defconstant csym::|@b50| 50) (sc::%defconstant csym::|@b75| 75)
 (sc::%defconstant csym::|@b110| 110) (sc::%defconstant csym::|@b134| 134)
 (sc::%defconstant csym::|@b150| 150) (sc::%defconstant csym::|@b200| 200)
 (sc::%defconstant csym::|@b300| 300) (sc::%defconstant csym::|@b600| 600)
 (sc::%defconstant csym::|@b1200| 1200) (sc::%defconstant csym::|@b1800| 1800)
 (sc::%defconstant csym::|@b2400| 2400) (sc::%defconstant csym::|@b4800| 4800)
 (sc::%defconstant csym::|@b9600| 9600)
 (sc::%defconstant csym::|@b19200| 19200)
 (sc::%defconstant csym::|@b38400| 38400)
 (sc::%defconstant csym::|@b7200| 7200)
 (sc::%defconstant csym::|@b14400| 14400)
 (sc::%defconstant csym::|@b28800| 28800)
 (sc::%defconstant csym::|@b57600| 57600)
 (sc::%defconstant csym::|@b76800| 76800)
 (sc::%defconstant csym::|@b115200| 115200)
 (sc::%defconstant csym::|@b230400| 230400)
 (sc::%defconstant csym::|@b460800| 460800)
 (sc::%defconstant csym::|@b921600| 921600)
 (sc::%defconstant csym::|@exta| 19200) (sc::%defconstant csym::|@extb| 38400)
 (sc::%defconstant csym::|@tciflush| 1) (sc::%defconstant csym::|@tcoflush| 2)
 (sc::%defconstant csym::|@tcioflush| 3) (sc::%defconstant csym::|@tcooff| 1)
 (sc::%defconstant csym::|@tcoon| 2) (sc::%defconstant csym::|@tcioff| 3)
 (sc::%defconstant csym::|@tcion| 4)
 (sc::%defconstant csym::|_@sys_ttycom_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_ioccom_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@iocparm_mask| 8191)
 (sc::%defmacro csym::|@iocparm_len| (x)
  (list 'sc::bit-and (list 'sc::>> 'csym::x '16) '8191))
 (sc::%defmacro csym::|@iocbasecmd| (x)
  (list 'sc::bit-and 'csym::x (list 'sc::bit-not (list 'sc::<< '8191 '16))))
 (sc::%defmacro csym::|@iocgroup| (x)
  (list 'sc::bit-and (list 'sc::>> 'csym::x '8) '255))
 (sc::%defconstant csym::|@iocparm_max| csym::|@page_size|)
 (sc::%defconstant csym::|@ioc_void| 536870912)
 (sc::%defconstant csym::|@ioc_out| 1073741824)
 (sc::%defconstant csym::|@ioc_in| 2147483648)
 (sc::%defconstant csym::|@ioc_inout| (sc::bit-or 2147483648 1073741824))
 (sc::%defconstant csym::|@ioc_dirmask| 3758096384)
 (sc::%defmacro csym::|_@ioc| (inout group num len)
  (list 'sc::cast
        'sc::unsigned-long
        (list 'sc::bit-or
              'csym::inout
              (list 'sc::<< (list 'sc::bit-and 'csym::len '8191) '16)
              (list 'sc::<< 'csym::group '8)
              'csym::num)))
 (sc::%defmacro csym::|_@io| (g n)
  (list 'sc::cast
        'sc::unsigned-long
        (list 'sc::bit-or
              '536870912
              (list 'sc::<< (list 'sc::bit-and '0 '8191) '16)
              (list 'sc::<< 'csym::g '8)
              'csym::n)))
 (sc::%defmacro csym::|_@ior| (g n t)
  (list 'sc::cast
        'sc::unsigned-long
        (list 'sc::bit-or
              '1073741824
              (list 'sc::<<
                    (list 'sc::bit-and (list 'sc::sizeof 'csym::t) '8191)
                    '16)
              (list 'sc::<< 'csym::g '8)
              'csym::n)))
 (sc::%defmacro csym::|_@iow| (g n t)
  (list 'sc::cast
        'sc::unsigned-long
        (list 'sc::bit-or
              '2147483648
              (list 'sc::<<
                    (list 'sc::bit-and (list 'sc::sizeof 'csym::t) '8191)
                    '16)
              (list 'sc::<< 'csym::g '8)
              'csym::n)))
 (sc::%defmacro csym::|_@iowr| (g n t)
  (list 'sc::cast
        'sc::unsigned-long
        (list 'sc::bit-or
              (list 'sc::bit-or '2147483648 '1073741824)
              (list 'sc::<<
                    (list 'sc::bit-and (list 'sc::sizeof 'csym::t) '8191)
                    '16)
              (list 'sc::<< 'csym::g '8)
              'csym::n)))
 (sc::%defconstant csym::|@tiocexcl|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 13)))
 (sc::%defconstant csym::|@tiocnxcl|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 14)))
 (sc::%defconstant csym::|@tiocflush|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 16)))
 (sc::%defconstant csym::|@tiocgeta|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824
    (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::termios)) 8191) 16)
    (sc::<< #\t 8) 19)))
 (sc::%defconstant csym::|@tiocseta|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648
    (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::termios)) 8191) 16)
    (sc::<< #\t 8) 20)))
 (sc::%defconstant csym::|@tiocsetaw|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648
    (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::termios)) 8191) 16)
    (sc::<< #\t 8) 21)))
 (sc::%defconstant csym::|@tiocsetaf|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648
    (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::termios)) 8191) 16)
    (sc::<< #\t 8) 22)))
 (sc::%defconstant csym::|@tiocgetd|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 26)))
 (sc::%defconstant csym::|@tiocsetd|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 27)))
 (sc::%defconstant csym::|@tiocsbrk|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 123)))
 (sc::%defconstant csym::|@tioccbrk|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 122)))
 (sc::%defconstant csym::|@tiocsdtr|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 121)))
 (sc::%defconstant csym::|@tioccdtr|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 120)))
 (sc::%defconstant csym::|@tiocgpgrp|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 119)))
 (sc::%defconstant csym::|@tiocspgrp|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 118)))
 (sc::%defconstant csym::|@tiocoutq|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 115)))
 (sc::%defconstant csym::|@tiocsti|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::char) 8191) 16)
    (sc::<< #\t 8) 114)))
 (sc::%defconstant csym::|@tiocnotty|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 113)))
 (sc::%defconstant csym::|@tiocpkt|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 112)))
 (sc::%defconstant csym::|@tiocpkt_data| 0)
 (sc::%defconstant csym::|@tiocpkt_flushread| 1)
 (sc::%defconstant csym::|@tiocpkt_flushwrite| 2)
 (sc::%defconstant csym::|@tiocpkt_stop| 4)
 (sc::%defconstant csym::|@tiocpkt_start| 8)
 (sc::%defconstant csym::|@tiocpkt_nostop| 16)
 (sc::%defconstant csym::|@tiocpkt_dostop| 32)
 (sc::%defconstant csym::|@tiocpkt_ioctl| 64)
 (sc::%defconstant csym::|@tiocstop|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 111)))
 (sc::%defconstant csym::|@tiocstart|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 110)))
 (sc::%defconstant csym::|@tiocmset|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 109)))
 (sc::%defconstant csym::|@tiocmbis|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 108)))
 (sc::%defconstant csym::|@tiocmbic|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 107)))
 (sc::%defconstant csym::|@tiocmget|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 106)))
 (sc::%defconstant csym::|@tiocm_le| 1) (sc::%defconstant csym::|@tiocm_dtr| 2)
 (sc::%defconstant csym::|@tiocm_rts| 4) (sc::%defconstant csym::|@tiocm_st| 8)
 (sc::%defconstant csym::|@tiocm_sr| 16)
 (sc::%defconstant csym::|@tiocm_cts| 32)
 (sc::%defconstant csym::|@tiocm_dcd| 64)
 (sc::%defconstant csym::|@tiocm_ri| 128)
 (sc::%defconstant csym::|@tiocm_dsr| 256)
 (sc::%defconstant csym::|@tiocm_cd| 64)
 (sc::%defconstant csym::|@tiocm_car| 64)
 (sc::%defconstant csym::|@tiocm_rng| 128)
 (sc::%defconstant csym::|@tiocgwinsz|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824
    (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::winsize)) 8191) 16)
    (sc::<< #\t 8) 104)))
 (sc::%defconstant csym::|@tiocswinsz|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648
    (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::winsize)) 8191) 16)
    (sc::<< #\t 8) 103)))
 (sc::%defconstant csym::|@tiocucntl|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 102)))
 (sc::%defconstant csym::|@tiocstat|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 101)))
 (sc::%defmacro csym::|@uioccmd| (n)
  (list 'sc::cast
        'sc::unsigned-long
        (list 'sc::bit-or
              '536870912
              (list 'sc::<< (list 'sc::bit-and '0 '8191) '16)
              (list 'sc::<< '#\u '8)
              'csym::n)))
 (sc::%defconstant csym::|@tioccons|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 98)))
 (sc::%defconstant csym::|@tiocsctty|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 97)))
 (sc::%defconstant csym::|@tiocext|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 96)))
 (sc::%defconstant csym::|@tiocsig|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 95)))
 (sc::%defconstant csym::|@tiocdrain|
  (sc::cast sc::unsigned-long
   (sc::bit-or 536870912 (sc::<< (sc::bit-and 0 8191) 16) (sc::<< #\t 8) 94)))
 (sc::%defconstant csym::|@tiocmsdtrwait|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 91)))
 (sc::%defconstant csym::|@tiocmgdtrwait|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 90)))
 (sc::%defconstant csym::|@tioctimestamp|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824
    (sc::<< (sc::bit-and (sc::sizeof (sc::struct csym::timeval)) 8191) 16)
    (sc::<< #\t 8) 89)))
 (sc::%defconstant csym::|@tiocsdrainwait|
  (sc::cast sc::unsigned-long
   (sc::bit-or 2147483648 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 87)))
 (sc::%defconstant csym::|@tiocgdrainwait|
  (sc::cast sc::unsigned-long
   (sc::bit-or 1073741824 (sc::<< (sc::bit-and (sc::sizeof sc::int) 8191) 16)
    (sc::<< #\t 8) 86)))
 (sc::%defconstant csym::|@ttydisc| 0) (sc::%defconstant csym::|@slipdisc| 4)
 (sc::%defconstant csym::|@pppdisc| 5)
 (sc::%defconstant csym::|@netgraphdisc| 6)
 (sc::%defconstant csym::|@h4disc| 7)
 (sc::%defconstant csym::|_@sys_ttydefaults_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@ttydef_iflag| (sc::bit-or 2 256 8192 512 2048))
 (sc::%defconstant csym::|@ttydef_oflag| (sc::bit-or 1 2))
 (sc::%defconstant csym::|@ttydef_lflag| (sc::bit-or 8 256 128 1024 2 1 64))
 (sc::%defconstant csym::|@ttydef_cflag| (sc::bit-or 2048 768 16384))
 (sc::%defconstant csym::|@ttydef_speed| 9600)
 (sc::%defmacro csym::|@ctrl| (x) (list 'sc::bit-and 'csym::x '31))
 (sc::%defconstant csym::|@ceof| (sc::bit-and #\d 31))
 (sc::%defconstant csym::|@ceol| 255) (sc::%defconstant csym::|@cerase| 127)
 (sc::%defconstant csym::|@cerase2| (sc::bit-and #\h 31))
 (sc::%defconstant csym::|@cintr| (sc::bit-and #\c 31))
 (sc::%defconstant csym::|@cstatus| (sc::bit-and #\t 31))
 (sc::%defconstant csym::|@ckill| (sc::bit-and #\u 31))
 (sc::%defconstant csym::|@cmin| 1) (sc::%defconstant csym::|@cquit| 28)
 (sc::%defconstant csym::|@csusp| (sc::bit-and #\z 31))
 (sc::%defconstant csym::|@ctime| 0)
 (sc::%defconstant csym::|@cdsusp| (sc::bit-and #\y 31))
 (sc::%defconstant csym::|@cstart| (sc::bit-and #\q 31))
 (sc::%defconstant csym::|@cstop| (sc::bit-and #\s 31))
 (sc::%defconstant csym::|@clnext| (sc::bit-and #\v 31))
 (sc::%defconstant csym::|@cdiscard| (sc::bit-and #\o 31))
 (sc::%defconstant csym::|@cwerase| (sc::bit-and #\w 31))
 (sc::%defconstant csym::|@creprint| (sc::bit-and #\r 31))
 (sc::%defconstant csym::|@ceot| (sc::bit-and #\d 31))
 (sc::%defconstant csym::|@cbrk| 255)
 (sc::%defconstant csym::|@crprnt| (sc::bit-and #\r 31))
 (sc::%defconstant csym::|@cflush| (sc::bit-and #\o 31))
 (sc::%defconstant csym::|_@tgmath_h_| (sc::c-exp ""))
 (sc::%defmacro csym::__tg_type (e t)
  (list 'csym::__builtin_types_compatible_p
        (list 'csym::__typeof__ 'csym::e)
        'csym::t))
 (sc::%defmacro csym::__tg_type3 (e1 e2 e3 t)
  (list 'sc::or
        (list 'csym::__builtin_types_compatible_p
              (list 'csym::__typeof__ 'csym::e1)
              'csym::t)
        (list 'csym::__builtin_types_compatible_p
              (list 'csym::__typeof__ 'csym::e2)
              'csym::t)
        (list 'csym::__builtin_types_compatible_p
              (list 'csym::__typeof__ 'csym::e3)
              'csym::t)))
 (sc::%defmacro csym::__tg_type_corr (e1 e2 e3 t)
  (list 'sc::or
        (list 'sc::or
              (list 'csym::__builtin_types_compatible_p
                    (list 'csym::__typeof__ 'csym::e1)
                    'csym::t)
              (list 'csym::__builtin_types_compatible_p
                    (list 'csym::__typeof__ 'csym::e2)
                    'csym::t)
              (list 'csym::__builtin_types_compatible_p
                    (list 'csym::__typeof__ 'csym::e3)
                    'csym::t))
        (list 'sc::or
              (list 'csym::__builtin_types_compatible_p
                    (list 'csym::__typeof__ 'csym::e1)
                    'csym::t)
              (list 'csym::__builtin_types_compatible_p
                    (list 'csym::__typeof__ 'csym::e2)
                    'csym::t)
              (list 'csym::__builtin_types_compatible_p
                    (list 'csym::__typeof__ 'csym::e3)
                    'csym::t))))
 (sc::%defmacro csym::__tg_integer (e1 e2 e3)
  (list 'sc::c-exp
        "( ( ( __typeof__ ( ~0@*~a ) ) 1.5 == 1 ) || ( ( __typeof__ ( ~1@*~a ) ) 1.5 == 1 ) || ( ( __typeof__ ( ~2@*~a ) ) 1.5 == 1 ) )"
        e1
        e2
        e3))
 (sc::%defmacro csym::__tg_impl_simple (x y z fn fnf fnl va_arg)
  (list 'sc::c-exp
        "__builtin_choose_expr ( ( ( __builtin_types_compatible_p ( __typeof__ ( ~0@*~a ) , long double ) || __builtin_types_compatible_p ( __typeof__ ( ~1@*~a ) , long double ) || __builtin_types_compatible_p ( __typeof__ ( ~2@*~a ) , long double ) ) || ( __builtin_types_compatible_p ( __typeof__ ( ~0@*~a ) , long double ) || __builtin_types_compatible_p ( __typeof__ ( ~1@*~a ) , long double ) || __builtin_types_compatible_p ( __typeof__ ( ~2@*~a ) , long double ) ) ) , ~5@*~a ( ~6@*~a ) , __builtin_choose_expr ( ( ( __builtin_types_compatible_p ( __typeof__ ( ~0@*~a ) , double ) || __builtin_types_compatible_p ( __typeof__ ( ~1@*~a ) , double ) || __builtin_types_compatible_p ( __typeof__ ( ~2@*~a ) , double ) ) || ( __builtin_types_compatible_p ( __typeof__ ( ~0@*~a ) , double ) || __builtin_types_compatible_p ( __typeof__ ( ~1@*~a ) , double ) || __builtin_types_compatible_p ( __typeof__ ( ~2@*~a ) , double ) ) ) || ( ( ( __typeof__ ( ~0@*~a ) ) 1.5 == 1 ) || ( ( __typeof__ ( ~1@*~a ) ) 1.5 == 1 ) || ( ( __typeof__ ( ~2@*~a ) ) 1.5 == 1 ) ) , ~3@*~a ( ~6@*~a ) , ~4@*~a ( ~6@*~a ) ) )"
        x
        y
        z
        fn
        fnf
        fnl
        va_arg))
 (sc::%defmacro csym::__tg_simple (x fn) '"<macro with ## operator>")
 (sc::%defmacro csym::__tg_simple2 (x y fn) '"<macro with ## operator>")
 (sc::%defmacro csym::__tg_simplev (x fn va_arg) '"<macro with ## operator>")
 (sc::%defmacro csym::__tg_full (x fn) '"<macro with ## operator>")
 (sc::%defconstant csym::|_@sys_timeb_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_times_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_ucontext_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@machine_ucontext_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@mc_fpfmt_nodev| 65536)
 (sc::%defconstant csym::|_@mc_fpfmt_387| 65537)
 (sc::%defconstant csym::|_@mc_fpfmt_xmm| 65538)
 (sc::%defconstant csym::|_@mc_fpowned_none| 131072)
 (sc::%defconstant csym::|_@mc_fpowned_fpu| 131073)
 (sc::%defconstant csym::|_@mc_fpowned_pcb| 131074)
 (sc::%defconstant csym::|@ucf_swapped| 1)
 (sc::%defconstant csym::|_@sys_uio_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@ulimit_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@ul_getfsize| 1)
 (sc::%defconstant csym::|@ul_setfsize| 2)
 (sc::%defconstant csym::|_@sys_un_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@local_peercred| 1)
 (sc::%defmacro csym::|@sun_len| (su)
  (list 'sc::+
        (list 'sc::-
              (list 'sc::sizeof (list 'sc::mref 'csym::su))
              (list 'sc::sizeof
                    (list 'sc::fref
                          (list 'sc::mref 'csym::su)
                          'csym::sun_path)))
        (list 'csym::strlen
              (list 'sc::fref (list 'sc::mref 'csym::su) 'csym::sun_path))))
 (sc::%defconstant csym::|_@unistd_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_unistd_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@posix_advisory_info| (sc::- 1))
 (sc::%defconstant csym::|_@posix_asynchronous_io| 0)
 (sc::%defconstant csym::|_@posix_chown_restricted| 1)
 (sc::%defconstant csym::|_@posix_clock_selection| (sc::- 1))
 (sc::%defconstant csym::|_@posix_cputime| (sc::- 1))
 (sc::%defconstant csym::|_@posix_fsync| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_ipv6| 0)
 (sc::%defconstant csym::|_@posix_job_control| 1)
 (sc::%defconstant csym::|_@posix_mapped_files| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_memlock| (sc::- 1))
 (sc::%defconstant csym::|_@posix_memlock_range| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_memory_protection|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_message_passing| (sc::- 1))
 (sc::%defconstant csym::|_@posix_monotonic_clock| (sc::- 1))
 (sc::%defconstant csym::|_@posix_no_trunc| 1)
 (sc::%defconstant csym::|_@posix_prioritized_io| (sc::- 1))
 (sc::%defconstant csym::|_@posix_priority_scheduling|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_raw_sockets| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_realtime_signals| (sc::- 1))
 (sc::%defconstant csym::|_@posix_semaphores| (sc::- 1))
 (sc::%defconstant csym::|_@posix_shared_memory_objects|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_sporadic_server| (sc::- 1))
 (sc::%defconstant csym::|_@posix_synchronized_io| (sc::- 1))
 (sc::%defconstant csym::|_@posix_timeouts| (sc::- 1))
 (sc::%defconstant csym::|_@posix_typed_memory_objects| (sc::- 1))
 (sc::%defconstant csym::|_@xopen_shm| 1)
 (sc::%defconstant csym::|_@xopen_streams| (sc::- 1))
 (sc::%defconstant csym::|_@posix_version| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|@f_ok| 0) (sc::%defconstant csym::|@x_ok| 1)
 (sc::%defconstant csym::|@w_ok| 2) (sc::%defconstant csym::|@r_ok| 4)
 (sc::%defconstant csym::|@l_set| 0) (sc::%defconstant csym::|@l_incr| 1)
 (sc::%defconstant csym::|@l_xtnd| 2)
 (sc::%defconstant csym::|_@pc_link_max| 1)
 (sc::%defconstant csym::|_@pc_max_canon| 2)
 (sc::%defconstant csym::|_@pc_max_input| 3)
 (sc::%defconstant csym::|_@pc_name_max| 4)
 (sc::%defconstant csym::|_@pc_path_max| 5)
 (sc::%defconstant csym::|_@pc_pipe_buf| 6)
 (sc::%defconstant csym::|_@pc_chown_restricted| 7)
 (sc::%defconstant csym::|_@pc_no_trunc| 8)
 (sc::%defconstant csym::|_@pc_vdisable| 9)
 (sc::%defconstant csym::|_@pc_async_io| 53)
 (sc::%defconstant csym::|_@pc_prio_io| 54)
 (sc::%defconstant csym::|_@pc_sync_io| 55)
 (sc::%defconstant csym::|_@pc_alloc_size_min| 10)
 (sc::%defconstant csym::|_@pc_filesizebits| 12)
 (sc::%defconstant csym::|_@pc_rec_incr_xfer_size| 14)
 (sc::%defconstant csym::|_@pc_rec_max_xfer_size| 15)
 (sc::%defconstant csym::|_@pc_rec_min_xfer_size| 16)
 (sc::%defconstant csym::|_@pc_rec_xfer_align| 17)
 (sc::%defconstant csym::|_@pc_symlink_max| 18)
 (sc::%defconstant csym::|_@pc_acl_extended| 59)
 (sc::%defconstant csym::|_@pc_acl_path_max| 60)
 (sc::%defconstant csym::|_@pc_cap_present| 61)
 (sc::%defconstant csym::|_@pc_inf_present| 62)
 (sc::%defconstant csym::|_@pc_mac_present| 63)
 (sc::%defconstant csym::|@rfnameg| (sc::<< 1 0))
 (sc::%defconstant csym::|@rfenvg| (sc::<< 1 1))
 (sc::%defconstant csym::|@rffdg| (sc::<< 1 2))
 (sc::%defconstant csym::|@rfnoteg| (sc::<< 1 3))
 (sc::%defconstant csym::|@rfproc| (sc::<< 1 4))
 (sc::%defconstant csym::|@rfmem| (sc::<< 1 5))
 (sc::%defconstant csym::|@rfnowait| (sc::<< 1 6))
 (sc::%defconstant csym::|@rfcnameg| (sc::<< 1 10))
 (sc::%defconstant csym::|@rfcenvg| (sc::<< 1 11))
 (sc::%defconstant csym::|@rfcfdg| (sc::<< 1 12))
 (sc::%defconstant csym::|@rfthread| (sc::<< 1 13))
 (sc::%defconstant csym::|@rfsigshare| (sc::<< 1 14))
 (sc::%defconstant csym::|@rflinuxthpn| (sc::<< 1 16))
 (sc::%defconstant csym::|@rfstopped| (sc::<< 1 17))
 (sc::%defconstant csym::|@rfhighpid| (sc::<< 1 18))
 (sc::%defconstant csym::|@rfppwait| (sc::<< 1 31))
 (sc::%defconstant csym::|@rfkernelonly|
  (sc::bit-or (sc::<< 1 17) (sc::<< 1 18) (sc::<< 1 31)))
 (sc::%defconstant csym::|@stdin_fileno| 0)
 (sc::%defconstant csym::|@stdout_fileno| 1)
 (sc::%defconstant csym::|@stderr_fileno| 2)
 (sc::%defconstant csym::|@f_ulock| 0) (sc::%defconstant csym::|@f_lock| 1)
 (sc::%defconstant csym::|@f_tlock| 2) (sc::%defconstant csym::|@f_test| 3)
 (sc::%defconstant csym::|_@posix_barriers| (sc::- 1))
 (sc::%defconstant csym::|_@posix_reader_writer_locks|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_regexp| 1)
 (sc::%defconstant csym::|_@posix_shell| 1)
 (sc::%defconstant csym::|_@posix_spawn| (sc::- 1))
 (sc::%defconstant csym::|_@posix_spin_locks| (sc::- 1))
 (sc::%defconstant csym::|_@posix_thread_attr_stackaddr|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_thread_attr_stacksize|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_thread_cputime| (sc::- 1))
 (sc::%defconstant csym::|_@posix_thread_prio_inherit|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_thread_prio_protect|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_thread_priority_scheduling|
  (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_thread_process_shared| (sc::- 1))
 (sc::%defconstant csym::|_@posix_thread_safe_functions| (sc::- 1))
 (sc::%defconstant csym::|_@posix_thread_sporadic_server| (sc::- 1))
 (sc::%defconstant csym::|_@posix_threads| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix_trace| (sc::- 1))
 (sc::%defconstant csym::|_@posix_trace_event_filter| (sc::- 1))
 (sc::%defconstant csym::|_@posix_trace_inherit| (sc::- 1))
 (sc::%defconstant csym::|_@posix_trace_log| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_c_bind| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix2_c_dev| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_char_term| 1)
 (sc::%defconstant csym::|_@posix2_fort_dev| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_fort_run| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@posix2_localedef| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_pbs| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_pbs_accounting| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_pbs_checkpoint| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_pbs_locate| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_pbs_message| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_pbs_track| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_sw_dev| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_upe| (sc::cast sc::long 200112))
 (sc::%defconstant csym::|_@v6_ilp32_off32| (sc::- 1))
 (sc::%defconstant csym::|_@v6_ilp32_offbig| 0)
 (sc::%defconstant csym::|_@v6_lp64_off64| 0)
 (sc::%defconstant csym::|_@v6_lpbig_offbig| (sc::- 1))
 (sc::%defconstant csym::|_@xopen_crypt| (sc::- 1))
 (sc::%defconstant csym::|_@xopen_enh_i18n| (sc::- 1))
 (sc::%defconstant csym::|_@xopen_legacy| (sc::- 1))
 (sc::%defconstant csym::|_@xopen_realtime| (sc::- 1))
 (sc::%defconstant csym::|_@xopen_realtime_threads| (sc::- 1))
 (sc::%defconstant csym::|_@xopen_unix| (sc::- 1))
 (sc::%defconstant csym::|_@posix2_version| (sc::cast sc::long 199212))
 (sc::%defconstant csym::|_@sc_arg_max| 1)
 (sc::%defconstant csym::|_@sc_child_max| 2)
 (sc::%defconstant csym::|_@sc_clk_tck| 3)
 (sc::%defconstant csym::|_@sc_ngroups_max| 4)
 (sc::%defconstant csym::|_@sc_open_max| 5)
 (sc::%defconstant csym::|_@sc_job_control| 6)
 (sc::%defconstant csym::|_@sc_saved_ids| 7)
 (sc::%defconstant csym::|_@sc_version| 8)
 (sc::%defconstant csym::|_@sc_bc_base_max| 9)
 (sc::%defconstant csym::|_@sc_bc_dim_max| 10)
 (sc::%defconstant csym::|_@sc_bc_scale_max| 11)
 (sc::%defconstant csym::|_@sc_bc_string_max| 12)
 (sc::%defconstant csym::|_@sc_coll_weights_max| 13)
 (sc::%defconstant csym::|_@sc_expr_nest_max| 14)
 (sc::%defconstant csym::|_@sc_line_max| 15)
 (sc::%defconstant csym::|_@sc_re_dup_max| 16)
 (sc::%defconstant csym::|_@sc_2_version| 17)
 (sc::%defconstant csym::|_@sc_2_c_bind| 18)
 (sc::%defconstant csym::|_@sc_2_c_dev| 19)
 (sc::%defconstant csym::|_@sc_2_char_term| 20)
 (sc::%defconstant csym::|_@sc_2_fort_dev| 21)
 (sc::%defconstant csym::|_@sc_2_fort_run| 22)
 (sc::%defconstant csym::|_@sc_2_localedef| 23)
 (sc::%defconstant csym::|_@sc_2_sw_dev| 24)
 (sc::%defconstant csym::|_@sc_2_upe| 25)
 (sc::%defconstant csym::|_@sc_stream_max| 26)
 (sc::%defconstant csym::|_@sc_tzname_max| 27)
 (sc::%defconstant csym::|_@sc_asynchronous_io| 28)
 (sc::%defconstant csym::|_@sc_mapped_files| 29)
 (sc::%defconstant csym::|_@sc_memlock| 30)
 (sc::%defconstant csym::|_@sc_memlock_range| 31)
 (sc::%defconstant csym::|_@sc_memory_protection| 32)
 (sc::%defconstant csym::|_@sc_message_passing| 33)
 (sc::%defconstant csym::|_@sc_prioritized_io| 34)
 (sc::%defconstant csym::|_@sc_priority_scheduling| 35)
 (sc::%defconstant csym::|_@sc_realtime_signals| 36)
 (sc::%defconstant csym::|_@sc_semaphores| 37)
 (sc::%defconstant csym::|_@sc_fsync| 38)
 (sc::%defconstant csym::|_@sc_shared_memory_objects| 39)
 (sc::%defconstant csym::|_@sc_synchronized_io| 40)
 (sc::%defconstant csym::|_@sc_timers| 41)
 (sc::%defconstant csym::|_@sc_aio_listio_max| 42)
 (sc::%defconstant csym::|_@sc_aio_max| 43)
 (sc::%defconstant csym::|_@sc_aio_prio_delta_max| 44)
 (sc::%defconstant csym::|_@sc_delaytimer_max| 45)
 (sc::%defconstant csym::|_@sc_mq_open_max| 46)
 (sc::%defconstant csym::|_@sc_pagesize| 47)
 (sc::%defconstant csym::|_@sc_rtsig_max| 48)
 (sc::%defconstant csym::|_@sc_sem_nsems_max| 49)
 (sc::%defconstant csym::|_@sc_sem_value_max| 50)
 (sc::%defconstant csym::|_@sc_sigqueue_max| 51)
 (sc::%defconstant csym::|_@sc_timer_max| 52)
 (sc::%defconstant csym::|_@sc_2_pbs| 59)
 (sc::%defconstant csym::|_@sc_2_pbs_accounting| 60)
 (sc::%defconstant csym::|_@sc_2_pbs_checkpoint| 61)
 (sc::%defconstant csym::|_@sc_2_pbs_locate| 62)
 (sc::%defconstant csym::|_@sc_2_pbs_message| 63)
 (sc::%defconstant csym::|_@sc_2_pbs_track| 64)
 (sc::%defconstant csym::|_@sc_advisory_info| 65)
 (sc::%defconstant csym::|_@sc_barriers| 66)
 (sc::%defconstant csym::|_@sc_clock_selection| 67)
 (sc::%defconstant csym::|_@sc_cputime| 68)
 (sc::%defconstant csym::|_@sc_file_locking| 69)
 (sc::%defconstant csym::|_@sc_getgr_r_size_max| 70)
 (sc::%defconstant csym::|_@sc_getpw_r_size_max| 71)
 (sc::%defconstant csym::|_@sc_host_name_max| 72)
 (sc::%defconstant csym::|_@sc_login_name_max| 73)
 (sc::%defconstant csym::|_@sc_monotonic_clock| 74)
 (sc::%defconstant csym::|_@sc_mq_prio_max| 75)
 (sc::%defconstant csym::|_@sc_reader_writer_locks| 76)
 (sc::%defconstant csym::|_@sc_regexp| 77)
 (sc::%defconstant csym::|_@sc_shell| 78)
 (sc::%defconstant csym::|_@sc_spawn| 79)
 (sc::%defconstant csym::|_@sc_spin_locks| 80)
 (sc::%defconstant csym::|_@sc_sporadic_server| 81)
 (sc::%defconstant csym::|_@sc_thread_attr_stackaddr| 82)
 (sc::%defconstant csym::|_@sc_thread_attr_stacksize| 83)
 (sc::%defconstant csym::|_@sc_thread_cputime| 84)
 (sc::%defconstant csym::|_@sc_thread_destructor_iterations| 85)
 (sc::%defconstant csym::|_@sc_thread_keys_max| 86)
 (sc::%defconstant csym::|_@sc_thread_prio_inherit| 87)
 (sc::%defconstant csym::|_@sc_thread_prio_protect| 88)
 (sc::%defconstant csym::|_@sc_thread_priority_scheduling| 89)
 (sc::%defconstant csym::|_@sc_thread_process_shared| 90)
 (sc::%defconstant csym::|_@sc_thread_safe_functions| 91)
 (sc::%defconstant csym::|_@sc_thread_sporadic_server| 92)
 (sc::%defconstant csym::|_@sc_thread_stack_min| 93)
 (sc::%defconstant csym::|_@sc_thread_threads_max| 94)
 (sc::%defconstant csym::|_@sc_timeouts| 95)
 (sc::%defconstant csym::|_@sc_threads| 96)
 (sc::%defconstant csym::|_@sc_trace| 97)
 (sc::%defconstant csym::|_@sc_trace_event_filter| 98)
 (sc::%defconstant csym::|_@sc_trace_inherit| 99)
 (sc::%defconstant csym::|_@sc_trace_log| 100)
 (sc::%defconstant csym::|_@sc_tty_name_max| 101)
 (sc::%defconstant csym::|_@sc_typed_memory_objects| 102)
 (sc::%defconstant csym::|_@sc_v6_ilp32_off32| 103)
 (sc::%defconstant csym::|_@sc_v6_ilp32_offbig| 104)
 (sc::%defconstant csym::|_@sc_v6_lp64_off64| 105)
 (sc::%defconstant csym::|_@sc_v6_lpbig_offbig| 106)
 (sc::%defconstant csym::|_@sc_ipv6| 118)
 (sc::%defconstant csym::|_@sc_raw_sockets| 119)
 (sc::%defconstant csym::|_@sc_symloop_max| 120)
 (sc::%defconstant csym::|_@sc_atexit_max| 107)
 (sc::%defconstant csym::|_@sc_iov_max| 56)
 (sc::%defconstant csym::|_@sc_page_size| 47)
 (sc::%defconstant csym::|_@sc_xopen_crypt| 108)
 (sc::%defconstant csym::|_@sc_xopen_enh_i18n| 109)
 (sc::%defconstant csym::|_@sc_xopen_legacy| 110)
 (sc::%defconstant csym::|_@sc_xopen_realtime| 111)
 (sc::%defconstant csym::|_@sc_xopen_realtime_threads| 112)
 (sc::%defconstant csym::|_@sc_xopen_shm| 113)
 (sc::%defconstant csym::|_@sc_xopen_streams| 114)
 (sc::%defconstant csym::|_@sc_xopen_unix| 115)
 (sc::%defconstant csym::|_@sc_xopen_version| 116)
 (sc::%defconstant csym::|_@sc_xopen_xcu_version| 117)
 (sc::%defconstant csym::|_@sc_nprocessors_conf| 57)
 (sc::%defconstant csym::|_@sc_nprocessors_onln| 58)
 (sc::%defconstant csym::|_@cs_path| 1)
 (sc::%defconstant csym::|_@cs_posix_v6_ilp32_off32_cflags| 2)
 (sc::%defconstant csym::|_@cs_posix_v6_ilp32_off32_ldflags| 3)
 (sc::%defconstant csym::|_@cs_posix_v6_ilp32_off32_libs| 4)
 (sc::%defconstant csym::|_@cs_posix_v6_ilp32_offbig_cflags| 5)
 (sc::%defconstant csym::|_@cs_posix_v6_ilp32_offbig_ldflags| 6)
 (sc::%defconstant csym::|_@cs_posix_v6_ilp32_offbig_libs| 7)
 (sc::%defconstant csym::|_@cs_posix_v6_lp64_off64_cflags| 8)
 (sc::%defconstant csym::|_@cs_posix_v6_lp64_off64_ldflags| 9)
 (sc::%defconstant csym::|_@cs_posix_v6_lp64_off64_libs| 10)
 (sc::%defconstant csym::|_@cs_posix_v6_lpbig_offbig_cflags| 11)
 (sc::%defconstant csym::|_@cs_posix_v6_lpbig_offbig_ldflags| 12)
 (sc::%defconstant csym::|_@cs_posix_v6_lpbig_offbig_libs| 13)
 (sc::%defconstant csym::|_@cs_posix_v6_width_restricted_envs| 14)
 (sc::%defconstant csym::|_@getopt_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@optreset_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@utime_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@sys_utsname_h| (sc::c-exp ""))
 (sc::%defconstant csym::|@sys_nmln| 256)
 (sc::%defconstant csym::|_@sys_wait_h_| (sc::c-exp ""))
 (sc::%defmacro csym::|_@w_int| (w)
  (list 'sc::mref
        (list 'sc::cast (list 'sc::ptr 'sc::int) (list 'sc::ptr 'csym::w))))
 (sc::%defconstant csym::|@wcoreflag| 128)
 (sc::%defmacro csym::|_@wstatus| (x)
  (list 'sc::bit-and
        (list 'sc::mref
              (list 'sc::cast
                    (list 'sc::ptr 'sc::int)
                    (list 'sc::ptr 'csym::x)))
        '127))
 (sc::%defconstant csym::|_@wstopped| 127)
 (sc::%defmacro csym::|@wifstopped| (x)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr 'sc::int)
                          (list 'sc::ptr 'csym::x)))
              '127)
        '127))
 (sc::%defmacro csym::|@wstopsig| (x)
  (list 'sc::>>
        (list 'sc::mref
              (list 'sc::cast
                    (list 'sc::ptr 'sc::int)
                    (list 'sc::ptr 'csym::x)))
        '8))
 (sc::%defmacro csym::|@wifsignaled| (x)
  (list 'sc::and
        (list 'sc::!=
              (list 'sc::bit-and
                    (list 'sc::mref
                          (list 'sc::cast
                                (list 'sc::ptr 'sc::int)
                                (list 'sc::ptr 'csym::x)))
                    '127)
              '127)
        (list 'sc::!=
              (list 'sc::bit-and
                    (list 'sc::mref
                          (list 'sc::cast
                                (list 'sc::ptr 'sc::int)
                                (list 'sc::ptr 'csym::x)))
                    '127)
              '0)))
 (sc::%defmacro csym::|@wtermsig| (x)
  (list 'sc::bit-and
        (list 'sc::mref
              (list 'sc::cast
                    (list 'sc::ptr 'sc::int)
                    (list 'sc::ptr 'csym::x)))
        '127))
 (sc::%defmacro csym::|@wifexited| (x)
  (list 'sc::==
        (list 'sc::bit-and
              (list 'sc::mref
                    (list 'sc::cast
                          (list 'sc::ptr 'sc::int)
                          (list 'sc::ptr 'csym::x)))
              '127)
        '0))
 (sc::%defmacro csym::|@wexitstatus| (x)
  (list 'sc::>>
        (list 'sc::mref
              (list 'sc::cast
                    (list 'sc::ptr 'sc::int)
                    (list 'sc::ptr 'csym::x)))
        '8))
 (sc::%defmacro csym::|@wifcontinued| (x) (list 'sc::== 'csym::x '19))
 (sc::%defmacro csym::|@wcoredump| (x)
  (list 'sc::bit-and
        (list 'sc::mref
              (list 'sc::cast
                    (list 'sc::ptr 'sc::int)
                    (list 'sc::ptr 'csym::x)))
        '128))
 (sc::%defmacro csym::|@w_exitcode| (ret sig)
  (list 'sc::bit-or (list 'sc::<< 'csym::ret '8) 'csym::sig))
 (sc::%defmacro csym::|@w_stopcode| (sig)
  (list 'sc::bit-or (list 'sc::<< 'csym::sig '8) '127))
 (sc::%defconstant csym::|@wnohang| 1) (sc::%defconstant csym::|@wuntraced| 2)
 (sc::%defconstant csym::|@wcontinued| 4)
 (sc::%defconstant csym::|@wlinuxclone| 2147483648)
 (sc::%defconstant csym::|@wait_any| (sc::- 1))
 (sc::%defconstant csym::|@wait_mypgrp| 0)
 (sc::%defconstant csym::|_@wchar_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@mbstate_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|_@wint_t_declared| (sc::c-exp ""))
 (sc::%defconstant csym::|@weof| (sc::cast csym::wint_t (sc::- 1)))
 (sc::%defmacro csym::getwc (fp) (list 'csym::fgetwc 'csym::fp))
 (sc::%defmacro csym::getwchar nil (list 'csym::fgetwc 'csym::__stdinp))
 (sc::%defmacro csym::putwc (wc fp) (list 'csym::fputwc 'csym::wc 'csym::fp))
 (sc::%defmacro csym::putwchar (wc)
  (list 'csym::fputwc 'csym::wc 'csym::__stdoutp))
 (sc::%defmacro csym::wcwidth (_c) (list 'csym::__wcwidth 'csym::_c))
 (sc::%defconstant csym::|_@wctype_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|_@wctrans_t| (sc::c-exp ""))
 (sc::%defconstant csym::|_@wctype_t| (sc::c-exp ""))
 (sc::%defmacro csym::iswalnum (wc)
  (list 'csym::__istype
        'csym::wc
        (list 'sc::bit-or
              (list 'sc::cast 'sc::long '256)
              (list 'sc::cast 'sc::long '1024))))
 (sc::%defmacro csym::iswalpha (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '256)))
 (sc::%defmacro csym::iswblank (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '131072)))
 (sc::%defmacro csym::iswcntrl (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '512)))
 (sc::%defmacro csym::iswctype (wc charclass)
  (list 'csym::__istype 'csym::wc 'csym::charclass))
 (sc::%defmacro csym::iswdigit (wc)
  (list 'csym::__isctype 'csym::wc (list 'sc::cast 'sc::long '1024)))
 (sc::%defmacro csym::iswgraph (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '2048)))
 (sc::%defmacro csym::iswlower (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '4096)))
 (sc::%defmacro csym::iswprint (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '262144)))
 (sc::%defmacro csym::iswpunct (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '8192)))
 (sc::%defmacro csym::iswspace (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '16384)))
 (sc::%defmacro csym::iswupper (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '32768)))
 (sc::%defmacro csym::iswxdigit (wc)
  (list 'csym::__isctype 'csym::wc (list 'sc::cast 'sc::long '65536)))
 (sc::%defmacro csym::towlower (wc) (list 'csym::__tolower 'csym::wc))
 (sc::%defmacro csym::towupper (wc) (list 'csym::__toupper 'csym::wc))
 (sc::%defmacro csym::iswascii (wc)
  (list 'sc::== (list 'sc::bit-and 'csym::wc (list 'sc::bit-not '127)) '0))
 (sc::%defmacro csym::iswhexnumber (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '65536)))
 (sc::%defmacro csym::iswideogram (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '524288)))
 (sc::%defmacro csym::iswnumber (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '1024)))
 (sc::%defmacro csym::iswphonogram (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '2097152)))
 (sc::%defmacro csym::iswrune (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '4294967040)))
 (sc::%defmacro csym::iswspecial (wc)
  (list 'csym::__istype 'csym::wc (list 'sc::cast 'sc::long '1048576)))
 (sc::%defconstant csym::|_@wordexp_h_| (sc::c-exp ""))
 (sc::%defconstant csym::|@wrde_append| 1)
 (sc::%defconstant csym::|@wrde_dooffs| 2)
 (sc::%defconstant csym::|@wrde_nocmd| 4)
 (sc::%defconstant csym::|@wrde_reuse| 8)
 (sc::%defconstant csym::|@wrde_showerr| 16)
 (sc::%defconstant csym::|@wrde_undef| 32)
 (sc::%defconstant csym::|@wrde_badchar| 1)
 (sc::%defconstant csym::|@wrde_badval| 2)
 (sc::%defconstant csym::|@wrde_cmdsub| 3)
 (sc::%defconstant csym::|@wrde_nospace| 4)
 (sc::%defconstant csym::|@wrde_nosys| 5)
 (sc::%defconstant csym::|@wrde_syntax| 6))
"posix-out/ALL.sc"
CL-USER> 
