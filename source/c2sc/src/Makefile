# Makefile.in generated by automake 1.7.8 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/mcpp
pkglibdir = $(libdir)/mcpp
pkgincludedir = $(includedir)/mcpp
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/local/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-cygwin
#am__append_1 = cpp_prestd cpp_old
#am__append_2 = cpp_prestd cpp_old
ACLOCAL = ${SHELL} /home/hiraisi/mcpp/mcpp-2.4.1/config/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/hiraisi/mcpp/mcpp-2.4.1/config/missing --run tar
AUTOCONF = ${SHELL} /home/hiraisi/mcpp/mcpp-2.4.1/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/hiraisi/mcpp/mcpp-2.4.1/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/hiraisi/mcpp/mcpp-2.4.1/config/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = cygpath -w
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = .exe
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/hiraisi/mcpp/mcpp-2.4.1/config/missing --run makeinfo
OBJEXT = o
PACKAGE = mcpp
PACKAGE_BUGREPORT = kmatsui@t3.rim.or.jp
PACKAGE_NAME = mcpp
PACKAGE_STRING = mcpp 2.4.1
PACKAGE_TARNAME = mcpp
PACKAGE_VERSION = 2.4.1
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 2.4.1
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-cygwin
build_alias = 
build_cpu = i686
build_os = cygwin
build_vendor = pc
cpp_call = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
gcc_maj_ver = 3
gcc_path = /usr/local/bin/gcc
gcc_testsuite_dir = 
host = i686-pc-cygwin
host_alias = 
host_cpu = i686
host_os = cygwin
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/hiraisi/mcpp/mcpp-2.4.1/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = 
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-cygwin
target_alias = 
target_cpu = i686
target_os = cygwin
target_vendor = pc

bin_PROGRAMS = cpp_std cpp_poststd $(am__append_1)
libexec_PROGRAMS = cpp_std cpp_poststd $(am__append_2)
cpp_std_SOURCES = system.H configed.H internal.H main.c control.c eval.c expand.c support.c system.c mbchar.c lib.c
cpp_poststd_SOURCES = $(cpp_std_SOURCES)
cpp_poststd_CPPFLAGS = -DMODE=POST_STANDARD
#cpp_prestd_SOURCES = $(cpp_std_SOURCES)
#cpp_old_SOURCES = $(cpp_std_SOURCES)
#cpp_prestd_CPPFLAGS = -DMODE=PRE_STANDARD
#cpp_old_CPPFLAGS = -DMODE=PRE_STANDARD -DOLD_PREPROCESSOR
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
#bin_PROGRAMS = cpp_std$(EXEEXT) \
#	cpp_poststd$(EXEEXT) cpp_prestd$(EXEEXT) \
#	cpp_old$(EXEEXT)
bin_PROGRAMS = cpp_std$(EXEEXT) \
	cpp_poststd$(EXEEXT)
#libexec_PROGRAMS = cpp_std$(EXEEXT) \
#	cpp_poststd$(EXEEXT) cpp_prestd$(EXEEXT) \
#	cpp_old$(EXEEXT)
libexec_PROGRAMS = cpp_std$(EXEEXT) \
	cpp_poststd$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(libexec_PROGRAMS)

am__cpp_old_SOURCES_DIST = system.H configed.H internal.H main.c \
	control.c eval.c expand.c support.c system.c mbchar.c lib.c
am__objects_1 = cpp_old-main.$(OBJEXT) cpp_old-control.$(OBJEXT) \
	cpp_old-eval.$(OBJEXT) cpp_old-expand.$(OBJEXT) \
	cpp_old-support.$(OBJEXT) cpp_old-system.$(OBJEXT) \
	cpp_old-mbchar.$(OBJEXT) cpp_old-lib.$(OBJEXT)
#am_cpp_old_OBJECTS = $(am__objects_1)
cpp_old_OBJECTS = $(am_cpp_old_OBJECTS)
cpp_old_LDADD = $(LDADD)
cpp_old_DEPENDENCIES =
cpp_old_LDFLAGS =
am__objects_2 = cpp_poststd-main.$(OBJEXT) cpp_poststd-control.$(OBJEXT) \
	cpp_poststd-eval.$(OBJEXT) cpp_poststd-expand.$(OBJEXT) \
	cpp_poststd-support.$(OBJEXT) cpp_poststd-system.$(OBJEXT) \
	cpp_poststd-mbchar.$(OBJEXT) cpp_poststd-lib.$(OBJEXT)
am_cpp_poststd_OBJECTS = $(am__objects_2)
cpp_poststd_OBJECTS = $(am_cpp_poststd_OBJECTS)
cpp_poststd_LDADD = $(LDADD)
cpp_poststd_DEPENDENCIES =
cpp_poststd_LDFLAGS =
am__cpp_prestd_SOURCES_DIST = system.H configed.H internal.H main.c \
	control.c eval.c expand.c support.c system.c mbchar.c lib.c
am__objects_3 = cpp_prestd-main.$(OBJEXT) cpp_prestd-control.$(OBJEXT) \
	cpp_prestd-eval.$(OBJEXT) cpp_prestd-expand.$(OBJEXT) \
	cpp_prestd-support.$(OBJEXT) cpp_prestd-system.$(OBJEXT) \
	cpp_prestd-mbchar.$(OBJEXT) cpp_prestd-lib.$(OBJEXT)
#am_cpp_prestd_OBJECTS = $(am__objects_3)
cpp_prestd_OBJECTS = $(am_cpp_prestd_OBJECTS)
cpp_prestd_LDADD = $(LDADD)
cpp_prestd_DEPENDENCIES =
cpp_prestd_LDFLAGS =
am_cpp_std_OBJECTS = main.$(OBJEXT) control.$(OBJEXT) eval.$(OBJEXT) \
	expand.$(OBJEXT) support.$(OBJEXT) system.$(OBJEXT) \
	mbchar.$(OBJEXT) lib.$(OBJEXT)
cpp_std_OBJECTS = $(am_cpp_std_OBJECTS)
cpp_std_LDADD = $(LDADD)
cpp_std_DEPENDENCIES =
cpp_std_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/control.Po \
	./$(DEPDIR)/cpp_old-control.Po \
	./$(DEPDIR)/cpp_old-eval.Po \
	./$(DEPDIR)/cpp_old-expand.Po \
	./$(DEPDIR)/cpp_old-lib.Po \
	./$(DEPDIR)/cpp_old-main.Po \
	./$(DEPDIR)/cpp_old-mbchar.Po \
	./$(DEPDIR)/cpp_old-support.Po \
	./$(DEPDIR)/cpp_old-system.Po \
	./$(DEPDIR)/cpp_poststd-control.Po \
	./$(DEPDIR)/cpp_poststd-eval.Po \
	./$(DEPDIR)/cpp_poststd-expand.Po \
	./$(DEPDIR)/cpp_poststd-lib.Po \
	./$(DEPDIR)/cpp_poststd-main.Po \
	./$(DEPDIR)/cpp_poststd-mbchar.Po \
	./$(DEPDIR)/cpp_poststd-support.Po \
	./$(DEPDIR)/cpp_poststd-system.Po \
	./$(DEPDIR)/cpp_prestd-control.Po \
	./$(DEPDIR)/cpp_prestd-eval.Po \
	./$(DEPDIR)/cpp_prestd-expand.Po \
	./$(DEPDIR)/cpp_prestd-lib.Po \
	./$(DEPDIR)/cpp_prestd-main.Po \
	./$(DEPDIR)/cpp_prestd-mbchar.Po \
	./$(DEPDIR)/cpp_prestd-support.Po \
	./$(DEPDIR)/cpp_prestd-system.Po \
	./$(DEPDIR)/eval.Po ./$(DEPDIR)/expand.Po \
	./$(DEPDIR)/lib.Po ./$(DEPDIR)/main.Po \
	./$(DEPDIR)/mbchar.Po ./$(DEPDIR)/support.Po \
	./$(DEPDIR)/system.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(am__cpp_old_SOURCES_DIST) $(cpp_poststd_SOURCES) \
	$(am__cpp_prestd_SOURCES_DIST) $(cpp_std_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am config.h.in
SOURCES = $(cpp_old_SOURCES) $(cpp_poststd_SOURCES) $(cpp_prestd_SOURCES) $(cpp_std_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h

$(srcdir)/config.h.in: # $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
libexecPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libexecdir)
	@list='$(libexec_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(libexecPROGRAMS_INSTALL) $$p $(DESTDIR)$(libexecdir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(libexecPROGRAMS_INSTALL) $$p $(DESTDIR)$(libexecdir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(libexecdir)/$$f"; \
	  rm -f $(DESTDIR)$(libexecdir)/$$f; \
	done

clean-libexecPROGRAMS:
	-test -z "$(libexec_PROGRAMS)" || rm -f $(libexec_PROGRAMS)
cpp_old$(EXEEXT): $(cpp_old_OBJECTS) $(cpp_old_DEPENDENCIES) 
	@rm -f cpp_old$(EXEEXT)
	$(LINK) $(cpp_old_LDFLAGS) $(cpp_old_OBJECTS) $(cpp_old_LDADD) $(LIBS)
cpp_poststd$(EXEEXT): $(cpp_poststd_OBJECTS) $(cpp_poststd_DEPENDENCIES) 
	@rm -f cpp_poststd$(EXEEXT)
	$(LINK) $(cpp_poststd_LDFLAGS) $(cpp_poststd_OBJECTS) $(cpp_poststd_LDADD) $(LIBS)
cpp_prestd$(EXEEXT): $(cpp_prestd_OBJECTS) $(cpp_prestd_DEPENDENCIES) 
	@rm -f cpp_prestd$(EXEEXT)
	$(LINK) $(cpp_prestd_LDFLAGS) $(cpp_prestd_OBJECTS) $(cpp_prestd_LDADD) $(LIBS)
cpp_std$(EXEEXT): $(cpp_std_OBJECTS) $(cpp_std_DEPENDENCIES) 
	@rm -f cpp_std$(EXEEXT)
	$(LINK) $(cpp_std_LDFLAGS) $(cpp_std_OBJECTS) $(cpp_std_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/control.Po
include ./$(DEPDIR)/cpp_old-control.Po
include ./$(DEPDIR)/cpp_old-eval.Po
include ./$(DEPDIR)/cpp_old-expand.Po
include ./$(DEPDIR)/cpp_old-lib.Po
include ./$(DEPDIR)/cpp_old-main.Po
include ./$(DEPDIR)/cpp_old-mbchar.Po
include ./$(DEPDIR)/cpp_old-support.Po
include ./$(DEPDIR)/cpp_old-system.Po
include ./$(DEPDIR)/cpp_poststd-control.Po
include ./$(DEPDIR)/cpp_poststd-eval.Po
include ./$(DEPDIR)/cpp_poststd-expand.Po
include ./$(DEPDIR)/cpp_poststd-lib.Po
include ./$(DEPDIR)/cpp_poststd-main.Po
include ./$(DEPDIR)/cpp_poststd-mbchar.Po
include ./$(DEPDIR)/cpp_poststd-support.Po
include ./$(DEPDIR)/cpp_poststd-system.Po
include ./$(DEPDIR)/cpp_prestd-control.Po
include ./$(DEPDIR)/cpp_prestd-eval.Po
include ./$(DEPDIR)/cpp_prestd-expand.Po
include ./$(DEPDIR)/cpp_prestd-lib.Po
include ./$(DEPDIR)/cpp_prestd-main.Po
include ./$(DEPDIR)/cpp_prestd-mbchar.Po
include ./$(DEPDIR)/cpp_prestd-support.Po
include ./$(DEPDIR)/cpp_prestd-system.Po
include ./$(DEPDIR)/eval.Po
include ./$(DEPDIR)/expand.Po
include ./$(DEPDIR)/lib.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mbchar.Po
include ./$(DEPDIR)/support.Po
include ./$(DEPDIR)/system.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

cpp_old-main.o: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-main.o -MD -MP -MF "$(DEPDIR)/cpp_old-main.Tpo" \
	  -c -o cpp_old-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/cpp_old-main.Tpo" "$(DEPDIR)/cpp_old-main.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='cpp_old-main.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-main.Po' tmpdepfile='$(DEPDIR)/cpp_old-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

cpp_old-main.obj: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-main.obj -MD -MP -MF "$(DEPDIR)/cpp_old-main.Tpo" \
	  -c -o cpp_old-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_old-main.Tpo" "$(DEPDIR)/cpp_old-main.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='cpp_old-main.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-main.Po' tmpdepfile='$(DEPDIR)/cpp_old-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

cpp_old-control.o: control.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-control.o -MD -MP -MF "$(DEPDIR)/cpp_old-control.Tpo" \
	  -c -o cpp_old-control.o `test -f 'control.c' || echo '$(srcdir)/'`control.c; \
	then mv -f "$(DEPDIR)/cpp_old-control.Tpo" "$(DEPDIR)/cpp_old-control.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-control.Tpo"; exit 1; \
	fi
#	source='control.c' object='cpp_old-control.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-control.Po' tmpdepfile='$(DEPDIR)/cpp_old-control.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-control.o `test -f 'control.c' || echo '$(srcdir)/'`control.c

cpp_old-control.obj: control.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-control.obj -MD -MP -MF "$(DEPDIR)/cpp_old-control.Tpo" \
	  -c -o cpp_old-control.obj `if test -f 'control.c'; then $(CYGPATH_W) 'control.c'; else $(CYGPATH_W) '$(srcdir)/control.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_old-control.Tpo" "$(DEPDIR)/cpp_old-control.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-control.Tpo"; exit 1; \
	fi
#	source='control.c' object='cpp_old-control.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-control.Po' tmpdepfile='$(DEPDIR)/cpp_old-control.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-control.obj `if test -f 'control.c'; then $(CYGPATH_W) 'control.c'; else $(CYGPATH_W) '$(srcdir)/control.c'; fi`

cpp_old-eval.o: eval.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-eval.o -MD -MP -MF "$(DEPDIR)/cpp_old-eval.Tpo" \
	  -c -o cpp_old-eval.o `test -f 'eval.c' || echo '$(srcdir)/'`eval.c; \
	then mv -f "$(DEPDIR)/cpp_old-eval.Tpo" "$(DEPDIR)/cpp_old-eval.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-eval.Tpo"; exit 1; \
	fi
#	source='eval.c' object='cpp_old-eval.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-eval.Po' tmpdepfile='$(DEPDIR)/cpp_old-eval.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-eval.o `test -f 'eval.c' || echo '$(srcdir)/'`eval.c

cpp_old-eval.obj: eval.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-eval.obj -MD -MP -MF "$(DEPDIR)/cpp_old-eval.Tpo" \
	  -c -o cpp_old-eval.obj `if test -f 'eval.c'; then $(CYGPATH_W) 'eval.c'; else $(CYGPATH_W) '$(srcdir)/eval.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_old-eval.Tpo" "$(DEPDIR)/cpp_old-eval.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-eval.Tpo"; exit 1; \
	fi
#	source='eval.c' object='cpp_old-eval.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-eval.Po' tmpdepfile='$(DEPDIR)/cpp_old-eval.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-eval.obj `if test -f 'eval.c'; then $(CYGPATH_W) 'eval.c'; else $(CYGPATH_W) '$(srcdir)/eval.c'; fi`

cpp_old-expand.o: expand.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-expand.o -MD -MP -MF "$(DEPDIR)/cpp_old-expand.Tpo" \
	  -c -o cpp_old-expand.o `test -f 'expand.c' || echo '$(srcdir)/'`expand.c; \
	then mv -f "$(DEPDIR)/cpp_old-expand.Tpo" "$(DEPDIR)/cpp_old-expand.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-expand.Tpo"; exit 1; \
	fi
#	source='expand.c' object='cpp_old-expand.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-expand.Po' tmpdepfile='$(DEPDIR)/cpp_old-expand.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-expand.o `test -f 'expand.c' || echo '$(srcdir)/'`expand.c

cpp_old-expand.obj: expand.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-expand.obj -MD -MP -MF "$(DEPDIR)/cpp_old-expand.Tpo" \
	  -c -o cpp_old-expand.obj `if test -f 'expand.c'; then $(CYGPATH_W) 'expand.c'; else $(CYGPATH_W) '$(srcdir)/expand.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_old-expand.Tpo" "$(DEPDIR)/cpp_old-expand.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-expand.Tpo"; exit 1; \
	fi
#	source='expand.c' object='cpp_old-expand.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-expand.Po' tmpdepfile='$(DEPDIR)/cpp_old-expand.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-expand.obj `if test -f 'expand.c'; then $(CYGPATH_W) 'expand.c'; else $(CYGPATH_W) '$(srcdir)/expand.c'; fi`

cpp_old-support.o: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-support.o -MD -MP -MF "$(DEPDIR)/cpp_old-support.Tpo" \
	  -c -o cpp_old-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c; \
	then mv -f "$(DEPDIR)/cpp_old-support.Tpo" "$(DEPDIR)/cpp_old-support.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-support.Tpo"; exit 1; \
	fi
#	source='support.c' object='cpp_old-support.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-support.Po' tmpdepfile='$(DEPDIR)/cpp_old-support.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c

cpp_old-support.obj: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-support.obj -MD -MP -MF "$(DEPDIR)/cpp_old-support.Tpo" \
	  -c -o cpp_old-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_old-support.Tpo" "$(DEPDIR)/cpp_old-support.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-support.Tpo"; exit 1; \
	fi
#	source='support.c' object='cpp_old-support.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-support.Po' tmpdepfile='$(DEPDIR)/cpp_old-support.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`

cpp_old-system.o: system.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-system.o -MD -MP -MF "$(DEPDIR)/cpp_old-system.Tpo" \
	  -c -o cpp_old-system.o `test -f 'system.c' || echo '$(srcdir)/'`system.c; \
	then mv -f "$(DEPDIR)/cpp_old-system.Tpo" "$(DEPDIR)/cpp_old-system.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-system.Tpo"; exit 1; \
	fi
#	source='system.c' object='cpp_old-system.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-system.Po' tmpdepfile='$(DEPDIR)/cpp_old-system.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-system.o `test -f 'system.c' || echo '$(srcdir)/'`system.c

cpp_old-system.obj: system.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-system.obj -MD -MP -MF "$(DEPDIR)/cpp_old-system.Tpo" \
	  -c -o cpp_old-system.obj `if test -f 'system.c'; then $(CYGPATH_W) 'system.c'; else $(CYGPATH_W) '$(srcdir)/system.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_old-system.Tpo" "$(DEPDIR)/cpp_old-system.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-system.Tpo"; exit 1; \
	fi
#	source='system.c' object='cpp_old-system.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-system.Po' tmpdepfile='$(DEPDIR)/cpp_old-system.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-system.obj `if test -f 'system.c'; then $(CYGPATH_W) 'system.c'; else $(CYGPATH_W) '$(srcdir)/system.c'; fi`

cpp_old-mbchar.o: mbchar.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-mbchar.o -MD -MP -MF "$(DEPDIR)/cpp_old-mbchar.Tpo" \
	  -c -o cpp_old-mbchar.o `test -f 'mbchar.c' || echo '$(srcdir)/'`mbchar.c; \
	then mv -f "$(DEPDIR)/cpp_old-mbchar.Tpo" "$(DEPDIR)/cpp_old-mbchar.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-mbchar.Tpo"; exit 1; \
	fi
#	source='mbchar.c' object='cpp_old-mbchar.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-mbchar.Po' tmpdepfile='$(DEPDIR)/cpp_old-mbchar.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-mbchar.o `test -f 'mbchar.c' || echo '$(srcdir)/'`mbchar.c

cpp_old-mbchar.obj: mbchar.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-mbchar.obj -MD -MP -MF "$(DEPDIR)/cpp_old-mbchar.Tpo" \
	  -c -o cpp_old-mbchar.obj `if test -f 'mbchar.c'; then $(CYGPATH_W) 'mbchar.c'; else $(CYGPATH_W) '$(srcdir)/mbchar.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_old-mbchar.Tpo" "$(DEPDIR)/cpp_old-mbchar.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-mbchar.Tpo"; exit 1; \
	fi
#	source='mbchar.c' object='cpp_old-mbchar.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-mbchar.Po' tmpdepfile='$(DEPDIR)/cpp_old-mbchar.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-mbchar.obj `if test -f 'mbchar.c'; then $(CYGPATH_W) 'mbchar.c'; else $(CYGPATH_W) '$(srcdir)/mbchar.c'; fi`

cpp_old-lib.o: lib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-lib.o -MD -MP -MF "$(DEPDIR)/cpp_old-lib.Tpo" \
	  -c -o cpp_old-lib.o `test -f 'lib.c' || echo '$(srcdir)/'`lib.c; \
	then mv -f "$(DEPDIR)/cpp_old-lib.Tpo" "$(DEPDIR)/cpp_old-lib.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-lib.Tpo"; exit 1; \
	fi
#	source='lib.c' object='cpp_old-lib.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-lib.Po' tmpdepfile='$(DEPDIR)/cpp_old-lib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-lib.o `test -f 'lib.c' || echo '$(srcdir)/'`lib.c

cpp_old-lib.obj: lib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_old-lib.obj -MD -MP -MF "$(DEPDIR)/cpp_old-lib.Tpo" \
	  -c -o cpp_old-lib.obj `if test -f 'lib.c'; then $(CYGPATH_W) 'lib.c'; else $(CYGPATH_W) '$(srcdir)/lib.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_old-lib.Tpo" "$(DEPDIR)/cpp_old-lib.Po"; \
	else rm -f "$(DEPDIR)/cpp_old-lib.Tpo"; exit 1; \
	fi
#	source='lib.c' object='cpp_old-lib.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_old-lib.Po' tmpdepfile='$(DEPDIR)/cpp_old-lib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_old_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_old-lib.obj `if test -f 'lib.c'; then $(CYGPATH_W) 'lib.c'; else $(CYGPATH_W) '$(srcdir)/lib.c'; fi`

cpp_poststd-main.o: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-main.o -MD -MP -MF "$(DEPDIR)/cpp_poststd-main.Tpo" \
	  -c -o cpp_poststd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/cpp_poststd-main.Tpo" "$(DEPDIR)/cpp_poststd-main.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='cpp_poststd-main.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-main.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

cpp_poststd-main.obj: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-main.obj -MD -MP -MF "$(DEPDIR)/cpp_poststd-main.Tpo" \
	  -c -o cpp_poststd-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_poststd-main.Tpo" "$(DEPDIR)/cpp_poststd-main.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='cpp_poststd-main.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-main.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

cpp_poststd-control.o: control.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-control.o -MD -MP -MF "$(DEPDIR)/cpp_poststd-control.Tpo" \
	  -c -o cpp_poststd-control.o `test -f 'control.c' || echo '$(srcdir)/'`control.c; \
	then mv -f "$(DEPDIR)/cpp_poststd-control.Tpo" "$(DEPDIR)/cpp_poststd-control.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-control.Tpo"; exit 1; \
	fi
#	source='control.c' object='cpp_poststd-control.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-control.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-control.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-control.o `test -f 'control.c' || echo '$(srcdir)/'`control.c

cpp_poststd-control.obj: control.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-control.obj -MD -MP -MF "$(DEPDIR)/cpp_poststd-control.Tpo" \
	  -c -o cpp_poststd-control.obj `if test -f 'control.c'; then $(CYGPATH_W) 'control.c'; else $(CYGPATH_W) '$(srcdir)/control.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_poststd-control.Tpo" "$(DEPDIR)/cpp_poststd-control.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-control.Tpo"; exit 1; \
	fi
#	source='control.c' object='cpp_poststd-control.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-control.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-control.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-control.obj `if test -f 'control.c'; then $(CYGPATH_W) 'control.c'; else $(CYGPATH_W) '$(srcdir)/control.c'; fi`

cpp_poststd-eval.o: eval.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-eval.o -MD -MP -MF "$(DEPDIR)/cpp_poststd-eval.Tpo" \
	  -c -o cpp_poststd-eval.o `test -f 'eval.c' || echo '$(srcdir)/'`eval.c; \
	then mv -f "$(DEPDIR)/cpp_poststd-eval.Tpo" "$(DEPDIR)/cpp_poststd-eval.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-eval.Tpo"; exit 1; \
	fi
#	source='eval.c' object='cpp_poststd-eval.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-eval.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-eval.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-eval.o `test -f 'eval.c' || echo '$(srcdir)/'`eval.c

cpp_poststd-eval.obj: eval.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-eval.obj -MD -MP -MF "$(DEPDIR)/cpp_poststd-eval.Tpo" \
	  -c -o cpp_poststd-eval.obj `if test -f 'eval.c'; then $(CYGPATH_W) 'eval.c'; else $(CYGPATH_W) '$(srcdir)/eval.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_poststd-eval.Tpo" "$(DEPDIR)/cpp_poststd-eval.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-eval.Tpo"; exit 1; \
	fi
#	source='eval.c' object='cpp_poststd-eval.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-eval.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-eval.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-eval.obj `if test -f 'eval.c'; then $(CYGPATH_W) 'eval.c'; else $(CYGPATH_W) '$(srcdir)/eval.c'; fi`

cpp_poststd-expand.o: expand.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-expand.o -MD -MP -MF "$(DEPDIR)/cpp_poststd-expand.Tpo" \
	  -c -o cpp_poststd-expand.o `test -f 'expand.c' || echo '$(srcdir)/'`expand.c; \
	then mv -f "$(DEPDIR)/cpp_poststd-expand.Tpo" "$(DEPDIR)/cpp_poststd-expand.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-expand.Tpo"; exit 1; \
	fi
#	source='expand.c' object='cpp_poststd-expand.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-expand.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-expand.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-expand.o `test -f 'expand.c' || echo '$(srcdir)/'`expand.c

cpp_poststd-expand.obj: expand.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-expand.obj -MD -MP -MF "$(DEPDIR)/cpp_poststd-expand.Tpo" \
	  -c -o cpp_poststd-expand.obj `if test -f 'expand.c'; then $(CYGPATH_W) 'expand.c'; else $(CYGPATH_W) '$(srcdir)/expand.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_poststd-expand.Tpo" "$(DEPDIR)/cpp_poststd-expand.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-expand.Tpo"; exit 1; \
	fi
#	source='expand.c' object='cpp_poststd-expand.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-expand.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-expand.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-expand.obj `if test -f 'expand.c'; then $(CYGPATH_W) 'expand.c'; else $(CYGPATH_W) '$(srcdir)/expand.c'; fi`

cpp_poststd-support.o: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-support.o -MD -MP -MF "$(DEPDIR)/cpp_poststd-support.Tpo" \
	  -c -o cpp_poststd-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c; \
	then mv -f "$(DEPDIR)/cpp_poststd-support.Tpo" "$(DEPDIR)/cpp_poststd-support.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-support.Tpo"; exit 1; \
	fi
#	source='support.c' object='cpp_poststd-support.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-support.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-support.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c

cpp_poststd-support.obj: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-support.obj -MD -MP -MF "$(DEPDIR)/cpp_poststd-support.Tpo" \
	  -c -o cpp_poststd-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_poststd-support.Tpo" "$(DEPDIR)/cpp_poststd-support.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-support.Tpo"; exit 1; \
	fi
#	source='support.c' object='cpp_poststd-support.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-support.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-support.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`

cpp_poststd-system.o: system.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-system.o -MD -MP -MF "$(DEPDIR)/cpp_poststd-system.Tpo" \
	  -c -o cpp_poststd-system.o `test -f 'system.c' || echo '$(srcdir)/'`system.c; \
	then mv -f "$(DEPDIR)/cpp_poststd-system.Tpo" "$(DEPDIR)/cpp_poststd-system.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-system.Tpo"; exit 1; \
	fi
#	source='system.c' object='cpp_poststd-system.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-system.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-system.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-system.o `test -f 'system.c' || echo '$(srcdir)/'`system.c

cpp_poststd-system.obj: system.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-system.obj -MD -MP -MF "$(DEPDIR)/cpp_poststd-system.Tpo" \
	  -c -o cpp_poststd-system.obj `if test -f 'system.c'; then $(CYGPATH_W) 'system.c'; else $(CYGPATH_W) '$(srcdir)/system.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_poststd-system.Tpo" "$(DEPDIR)/cpp_poststd-system.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-system.Tpo"; exit 1; \
	fi
#	source='system.c' object='cpp_poststd-system.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-system.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-system.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-system.obj `if test -f 'system.c'; then $(CYGPATH_W) 'system.c'; else $(CYGPATH_W) '$(srcdir)/system.c'; fi`

cpp_poststd-mbchar.o: mbchar.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-mbchar.o -MD -MP -MF "$(DEPDIR)/cpp_poststd-mbchar.Tpo" \
	  -c -o cpp_poststd-mbchar.o `test -f 'mbchar.c' || echo '$(srcdir)/'`mbchar.c; \
	then mv -f "$(DEPDIR)/cpp_poststd-mbchar.Tpo" "$(DEPDIR)/cpp_poststd-mbchar.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-mbchar.Tpo"; exit 1; \
	fi
#	source='mbchar.c' object='cpp_poststd-mbchar.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-mbchar.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-mbchar.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-mbchar.o `test -f 'mbchar.c' || echo '$(srcdir)/'`mbchar.c

cpp_poststd-mbchar.obj: mbchar.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-mbchar.obj -MD -MP -MF "$(DEPDIR)/cpp_poststd-mbchar.Tpo" \
	  -c -o cpp_poststd-mbchar.obj `if test -f 'mbchar.c'; then $(CYGPATH_W) 'mbchar.c'; else $(CYGPATH_W) '$(srcdir)/mbchar.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_poststd-mbchar.Tpo" "$(DEPDIR)/cpp_poststd-mbchar.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-mbchar.Tpo"; exit 1; \
	fi
#	source='mbchar.c' object='cpp_poststd-mbchar.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-mbchar.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-mbchar.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-mbchar.obj `if test -f 'mbchar.c'; then $(CYGPATH_W) 'mbchar.c'; else $(CYGPATH_W) '$(srcdir)/mbchar.c'; fi`

cpp_poststd-lib.o: lib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-lib.o -MD -MP -MF "$(DEPDIR)/cpp_poststd-lib.Tpo" \
	  -c -o cpp_poststd-lib.o `test -f 'lib.c' || echo '$(srcdir)/'`lib.c; \
	then mv -f "$(DEPDIR)/cpp_poststd-lib.Tpo" "$(DEPDIR)/cpp_poststd-lib.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-lib.Tpo"; exit 1; \
	fi
#	source='lib.c' object='cpp_poststd-lib.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-lib.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-lib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-lib.o `test -f 'lib.c' || echo '$(srcdir)/'`lib.c

cpp_poststd-lib.obj: lib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_poststd-lib.obj -MD -MP -MF "$(DEPDIR)/cpp_poststd-lib.Tpo" \
	  -c -o cpp_poststd-lib.obj `if test -f 'lib.c'; then $(CYGPATH_W) 'lib.c'; else $(CYGPATH_W) '$(srcdir)/lib.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_poststd-lib.Tpo" "$(DEPDIR)/cpp_poststd-lib.Po"; \
	else rm -f "$(DEPDIR)/cpp_poststd-lib.Tpo"; exit 1; \
	fi
#	source='lib.c' object='cpp_poststd-lib.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_poststd-lib.Po' tmpdepfile='$(DEPDIR)/cpp_poststd-lib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_poststd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_poststd-lib.obj `if test -f 'lib.c'; then $(CYGPATH_W) 'lib.c'; else $(CYGPATH_W) '$(srcdir)/lib.c'; fi`

cpp_prestd-main.o: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-main.o -MD -MP -MF "$(DEPDIR)/cpp_prestd-main.Tpo" \
	  -c -o cpp_prestd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/cpp_prestd-main.Tpo" "$(DEPDIR)/cpp_prestd-main.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='cpp_prestd-main.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-main.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

cpp_prestd-main.obj: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-main.obj -MD -MP -MF "$(DEPDIR)/cpp_prestd-main.Tpo" \
	  -c -o cpp_prestd-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_prestd-main.Tpo" "$(DEPDIR)/cpp_prestd-main.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-main.Tpo"; exit 1; \
	fi
#	source='main.c' object='cpp_prestd-main.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-main.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-main.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

cpp_prestd-control.o: control.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-control.o -MD -MP -MF "$(DEPDIR)/cpp_prestd-control.Tpo" \
	  -c -o cpp_prestd-control.o `test -f 'control.c' || echo '$(srcdir)/'`control.c; \
	then mv -f "$(DEPDIR)/cpp_prestd-control.Tpo" "$(DEPDIR)/cpp_prestd-control.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-control.Tpo"; exit 1; \
	fi
#	source='control.c' object='cpp_prestd-control.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-control.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-control.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-control.o `test -f 'control.c' || echo '$(srcdir)/'`control.c

cpp_prestd-control.obj: control.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-control.obj -MD -MP -MF "$(DEPDIR)/cpp_prestd-control.Tpo" \
	  -c -o cpp_prestd-control.obj `if test -f 'control.c'; then $(CYGPATH_W) 'control.c'; else $(CYGPATH_W) '$(srcdir)/control.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_prestd-control.Tpo" "$(DEPDIR)/cpp_prestd-control.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-control.Tpo"; exit 1; \
	fi
#	source='control.c' object='cpp_prestd-control.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-control.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-control.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-control.obj `if test -f 'control.c'; then $(CYGPATH_W) 'control.c'; else $(CYGPATH_W) '$(srcdir)/control.c'; fi`

cpp_prestd-eval.o: eval.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-eval.o -MD -MP -MF "$(DEPDIR)/cpp_prestd-eval.Tpo" \
	  -c -o cpp_prestd-eval.o `test -f 'eval.c' || echo '$(srcdir)/'`eval.c; \
	then mv -f "$(DEPDIR)/cpp_prestd-eval.Tpo" "$(DEPDIR)/cpp_prestd-eval.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-eval.Tpo"; exit 1; \
	fi
#	source='eval.c' object='cpp_prestd-eval.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-eval.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-eval.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-eval.o `test -f 'eval.c' || echo '$(srcdir)/'`eval.c

cpp_prestd-eval.obj: eval.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-eval.obj -MD -MP -MF "$(DEPDIR)/cpp_prestd-eval.Tpo" \
	  -c -o cpp_prestd-eval.obj `if test -f 'eval.c'; then $(CYGPATH_W) 'eval.c'; else $(CYGPATH_W) '$(srcdir)/eval.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_prestd-eval.Tpo" "$(DEPDIR)/cpp_prestd-eval.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-eval.Tpo"; exit 1; \
	fi
#	source='eval.c' object='cpp_prestd-eval.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-eval.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-eval.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-eval.obj `if test -f 'eval.c'; then $(CYGPATH_W) 'eval.c'; else $(CYGPATH_W) '$(srcdir)/eval.c'; fi`

cpp_prestd-expand.o: expand.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-expand.o -MD -MP -MF "$(DEPDIR)/cpp_prestd-expand.Tpo" \
	  -c -o cpp_prestd-expand.o `test -f 'expand.c' || echo '$(srcdir)/'`expand.c; \
	then mv -f "$(DEPDIR)/cpp_prestd-expand.Tpo" "$(DEPDIR)/cpp_prestd-expand.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-expand.Tpo"; exit 1; \
	fi
#	source='expand.c' object='cpp_prestd-expand.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-expand.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-expand.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-expand.o `test -f 'expand.c' || echo '$(srcdir)/'`expand.c

cpp_prestd-expand.obj: expand.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-expand.obj -MD -MP -MF "$(DEPDIR)/cpp_prestd-expand.Tpo" \
	  -c -o cpp_prestd-expand.obj `if test -f 'expand.c'; then $(CYGPATH_W) 'expand.c'; else $(CYGPATH_W) '$(srcdir)/expand.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_prestd-expand.Tpo" "$(DEPDIR)/cpp_prestd-expand.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-expand.Tpo"; exit 1; \
	fi
#	source='expand.c' object='cpp_prestd-expand.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-expand.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-expand.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-expand.obj `if test -f 'expand.c'; then $(CYGPATH_W) 'expand.c'; else $(CYGPATH_W) '$(srcdir)/expand.c'; fi`

cpp_prestd-support.o: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-support.o -MD -MP -MF "$(DEPDIR)/cpp_prestd-support.Tpo" \
	  -c -o cpp_prestd-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c; \
	then mv -f "$(DEPDIR)/cpp_prestd-support.Tpo" "$(DEPDIR)/cpp_prestd-support.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-support.Tpo"; exit 1; \
	fi
#	source='support.c' object='cpp_prestd-support.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-support.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-support.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c

cpp_prestd-support.obj: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-support.obj -MD -MP -MF "$(DEPDIR)/cpp_prestd-support.Tpo" \
	  -c -o cpp_prestd-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_prestd-support.Tpo" "$(DEPDIR)/cpp_prestd-support.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-support.Tpo"; exit 1; \
	fi
#	source='support.c' object='cpp_prestd-support.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-support.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-support.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`

cpp_prestd-system.o: system.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-system.o -MD -MP -MF "$(DEPDIR)/cpp_prestd-system.Tpo" \
	  -c -o cpp_prestd-system.o `test -f 'system.c' || echo '$(srcdir)/'`system.c; \
	then mv -f "$(DEPDIR)/cpp_prestd-system.Tpo" "$(DEPDIR)/cpp_prestd-system.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-system.Tpo"; exit 1; \
	fi
#	source='system.c' object='cpp_prestd-system.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-system.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-system.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-system.o `test -f 'system.c' || echo '$(srcdir)/'`system.c

cpp_prestd-system.obj: system.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-system.obj -MD -MP -MF "$(DEPDIR)/cpp_prestd-system.Tpo" \
	  -c -o cpp_prestd-system.obj `if test -f 'system.c'; then $(CYGPATH_W) 'system.c'; else $(CYGPATH_W) '$(srcdir)/system.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_prestd-system.Tpo" "$(DEPDIR)/cpp_prestd-system.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-system.Tpo"; exit 1; \
	fi
#	source='system.c' object='cpp_prestd-system.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-system.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-system.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-system.obj `if test -f 'system.c'; then $(CYGPATH_W) 'system.c'; else $(CYGPATH_W) '$(srcdir)/system.c'; fi`

cpp_prestd-mbchar.o: mbchar.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-mbchar.o -MD -MP -MF "$(DEPDIR)/cpp_prestd-mbchar.Tpo" \
	  -c -o cpp_prestd-mbchar.o `test -f 'mbchar.c' || echo '$(srcdir)/'`mbchar.c; \
	then mv -f "$(DEPDIR)/cpp_prestd-mbchar.Tpo" "$(DEPDIR)/cpp_prestd-mbchar.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-mbchar.Tpo"; exit 1; \
	fi
#	source='mbchar.c' object='cpp_prestd-mbchar.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-mbchar.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-mbchar.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-mbchar.o `test -f 'mbchar.c' || echo '$(srcdir)/'`mbchar.c

cpp_prestd-mbchar.obj: mbchar.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-mbchar.obj -MD -MP -MF "$(DEPDIR)/cpp_prestd-mbchar.Tpo" \
	  -c -o cpp_prestd-mbchar.obj `if test -f 'mbchar.c'; then $(CYGPATH_W) 'mbchar.c'; else $(CYGPATH_W) '$(srcdir)/mbchar.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_prestd-mbchar.Tpo" "$(DEPDIR)/cpp_prestd-mbchar.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-mbchar.Tpo"; exit 1; \
	fi
#	source='mbchar.c' object='cpp_prestd-mbchar.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-mbchar.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-mbchar.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-mbchar.obj `if test -f 'mbchar.c'; then $(CYGPATH_W) 'mbchar.c'; else $(CYGPATH_W) '$(srcdir)/mbchar.c'; fi`

cpp_prestd-lib.o: lib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-lib.o -MD -MP -MF "$(DEPDIR)/cpp_prestd-lib.Tpo" \
	  -c -o cpp_prestd-lib.o `test -f 'lib.c' || echo '$(srcdir)/'`lib.c; \
	then mv -f "$(DEPDIR)/cpp_prestd-lib.Tpo" "$(DEPDIR)/cpp_prestd-lib.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-lib.Tpo"; exit 1; \
	fi
#	source='lib.c' object='cpp_prestd-lib.o' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-lib.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-lib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-lib.o `test -f 'lib.c' || echo '$(srcdir)/'`lib.c

cpp_prestd-lib.obj: lib.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cpp_prestd-lib.obj -MD -MP -MF "$(DEPDIR)/cpp_prestd-lib.Tpo" \
	  -c -o cpp_prestd-lib.obj `if test -f 'lib.c'; then $(CYGPATH_W) 'lib.c'; else $(CYGPATH_W) '$(srcdir)/lib.c'; fi`; \
	then mv -f "$(DEPDIR)/cpp_prestd-lib.Tpo" "$(DEPDIR)/cpp_prestd-lib.Po"; \
	else rm -f "$(DEPDIR)/cpp_prestd-lib.Tpo"; exit 1; \
	fi
#	source='lib.c' object='cpp_prestd-lib.obj' libtool=no \
#	depfile='$(DEPDIR)/cpp_prestd-lib.Po' tmpdepfile='$(DEPDIR)/cpp_prestd-lib.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cpp_prestd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cpp_prestd-lib.obj `if test -f 'lib.c'; then $(CYGPATH_W) 'lib.c'; else $(CYGPATH_W) '$(srcdir)/lib.c'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(libexecdir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libexecPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic distclean-hdr \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-libexecPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libexecPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libexecPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-libexecPROGRAMS install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libexecPROGRAMS

#install-exec-hook:
#	@if test x"$(CC)" = x"gcc"; then \
#        ./set_mcpp.sh '$(gcc_path)' $(gcc_maj_ver) '$(cpp_call)' '$(CXX)' 'x$(EXEEXT)' '$(LN_S)'; \
#    fi
#uninstall-hook:
#	@if test x"$(CC)" = x"gcc"; then \
#        ./unset_mcpp.sh '$(gcc_path)' $(gcc_maj_ver) '$(cpp_call)' '$(CXX)' 'x$(EXEEXT)'; \
#    fi

install-exec-hook:
uninstall-hook:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
