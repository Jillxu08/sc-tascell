(%line 454 "csample/posix-header/stdio.h")
(%line 1 "csample/posix-header/stdlib.h")
(%line 1 "/usr/include/sys/cdefs.h")
(%line 1 "/usr/include/sys/_null.h")
(%line 1 "/usr/include/sys/_types.h")
(%line 1 "/usr/include/sys/cdefs.h")
(%line 1 "/usr/include/machine/_types.h")
(%line 45 "/usr/include/machine/_types.h")
(deftype csym::__int8_t signed-char)
(deftype csym::__uint8_t unsigned-char)
(deftype csym::__int16_t short)
(deftype csym::__uint16_t unsigned-short)
(deftype csym::__int32_t int)
(deftype csym::__uint32_t unsigned-int)
(deftype csym::__int64_t int)
(deftype csym::__uint64_t unsigned-int)
(%line 70 "/usr/include/machine/_types.h")
(deftype csym::__clock_t unsigned-long)
(deftype csym::__cpumask_t unsigned-int)
(deftype csym::__critical_t csym::__int32_t)
(deftype csym::__double_t double)
(deftype csym::__float_t double)
(deftype csym::__intfptr_t csym::__int32_t)
(deftype csym::__intmax_t csym::__int64_t)
(deftype csym::__intptr_t csym::__int32_t)
(deftype csym::__int_fast8_t csym::__int32_t)
(deftype csym::__int_fast16_t csym::__int32_t)
(deftype csym::__int_fast32_t csym::__int32_t)
(deftype csym::__int_fast64_t csym::__int64_t)
(deftype csym::__int_least8_t csym::__int8_t)
(deftype csym::__int_least16_t csym::__int16_t)
(deftype csym::__int_least32_t csym::__int32_t)
(deftype csym::__int_least64_t csym::__int64_t)
(deftype csym::__ptrdiff_t csym::__int32_t)
(deftype csym::__register_t csym::__int32_t)
(deftype csym::__segsz_t csym::__int32_t)
(deftype csym::__size_t csym::__uint32_t)
(deftype csym::__ssize_t csym::__int32_t)
(deftype csym::__time_t csym::__int32_t)
(deftype csym::__uintfptr_t csym::__uint32_t)
(deftype csym::__uintmax_t csym::__uint64_t)
(deftype csym::__uintptr_t csym::__uint32_t)
(deftype csym::__uint_fast8_t csym::__uint32_t)
(deftype csym::__uint_fast16_t csym::__uint32_t)
(deftype csym::__uint_fast32_t csym::__uint32_t)
(deftype csym::__uint_fast64_t csym::__uint64_t)
(deftype csym::__uint_least8_t csym::__uint8_t)
(deftype csym::__uint_least16_t csym::__uint16_t)
(deftype csym::__uint_least32_t csym::__uint32_t)
(deftype csym::__uint_least64_t csym::__uint64_t)
(deftype csym::__u_register_t csym::__uint32_t)
(deftype csym::__vm_offset_t csym::__uint32_t)
(deftype csym::__vm_ooffset_t csym::__int64_t)
(deftype csym::__vm_paddr_t csym::__uint32_t)
(deftype csym::__vm_pindex_t csym::__uint64_t)
(deftype csym::__vm_size_t csym::__uint32_t)
(%line 118 "/usr/include/machine/_types.h")
(deftype csym::__va_list csym::__builtin_va_list)
(%line 124 "/usr/include/machine/_types.h")
(deftype csym::__gnuc_va_list csym::__va_list)
(%line 38 "/usr/include/sys/_types.h")
(deftype csym::__clockid_t csym::__int32_t)
(deftype csym::__fflags_t csym::__uint32_t)
(deftype csym::__fsblkcnt_t csym::__uint64_t)
(deftype csym::__fsfilcnt_t csym::__uint64_t)
(deftype csym::__gid_t csym::__uint32_t)
(deftype csym::__id_t csym::__int64_t)
(deftype csym::__ino_t csym::__uint32_t)
(deftype csym::__key_t long)
(deftype csym::__lwpid_t csym::__int32_t)
(deftype csym::__mode_t csym::__uint16_t)
(deftype csym::__nl_item int)
(deftype csym::__nlink_t csym::__uint16_t)
(deftype csym::__off_t csym::__int64_t)
(deftype csym::__pid_t csym::__int32_t)
(deftype csym::__rlim_t csym::__int64_t)
(deftype csym::__sa_family_t csym::__uint8_t)
(deftype csym::__socklen_t csym::__uint32_t)
(deftype csym::__suseconds_t long)
(deftype csym::__timer_t csym::__int32_t)
(deftype csym::__uid_t csym::__uint32_t)
(deftype csym::__useconds_t unsigned-int)
(%line 78 "/usr/include/sys/_types.h")
(deftype csym::__ct_rune_t int)
(deftype csym::__rune_t csym::__ct_rune_t)
(deftype csym::__wchar_t csym::__ct_rune_t)
(deftype csym::__wint_t csym::__ct_rune_t)
(deftype csym::__dev_t csym::__uint32_t)
(deftype csym::__fixpt_t csym::__uint32_t)
(%line 91 "/usr/include/sys/_types.h")
(def (union csym::unnamed0) (decl csym::__mbstate8 (array char 128))
 (decl csym::_MBSTATE@l csym::__int64_t))
(deftype csym::__mbstate_t (union csym::unnamed0))
(%line 46 "csample/posix-header/stdlib.h")
(deftype csym::rune_t csym::__rune_t)
(deftype csym::size_t csym::__size_t)
(deftype csym::wchar_t csym::__wchar_t)
(def (struct csym::unnamed1) (decl csym::quot int) (decl csym::rem int))
(deftype csym::div_t (struct csym::unnamed1))
(def (struct csym::unnamed2) (decl csym::quot long) (decl csym::rem long))
(deftype csym::ldiv_t (struct csym::unnamed2))
(extern-decl csym::__mb_cur_max int)
(decl (csym::abort) (fn void void))
(decl (csym::abs) (fn int int))
(decl (csym::atexit) (fn int (ptr (fn void void))))
(decl (csym::atof) (fn double (ptr (const char))))
(decl (csym::atoi) (fn int (ptr (const char))))
(decl (csym::atol) (fn long (ptr (const char))))
(decl (csym::bsearch)
 (fn (ptr void) (ptr (const void)) (ptr (const void)) csym::size_t csym::size_t
  (ptr (fn int (ptr (const void)) (ptr (const void))))))
(decl (csym::calloc) (fn (ptr void) csym::size_t csym::size_t))
(decl (csym::div) (fn csym::div_t int int))
(decl (csym::exit) (fn void int))
(decl (csym::free) (fn void (ptr void)))
(decl (csym::getenv) (fn (ptr char) (ptr (const char))))
(decl (csym::labs) (fn long long))
(decl (csym::ldiv) (fn csym::ldiv_t long long))
(decl (csym::malloc) (fn (ptr void) csym::size_t))
(decl (csym::mblen) (fn int (ptr (const char)) csym::size_t))
(decl (csym::mbstowcs)
 (fn csym::size_t (ptr csym::wchar_t) (ptr (const char)) csym::size_t))
(decl (csym::mbtowc)
 (fn int (ptr csym::wchar_t) (ptr (const char)) csym::size_t))
(decl (csym::qsort)
 (fn void (ptr void) csym::size_t csym::size_t
  (ptr (fn int (ptr (const void)) (ptr (const void))))))
(decl (csym::rand) (fn int void))
(decl (csym::realloc) (fn (ptr void) (ptr void) csym::size_t))
(decl (csym::srand) (fn void unsigned-int))
(decl (csym::strtod) (fn double (ptr (const char)) (ptr (ptr char))))
(decl (csym::strtof) (fn float (ptr (const char)) (ptr (ptr char))))
(decl (csym::strtol) (fn long (ptr (const char)) (ptr (ptr char)) int))
(decl (csym::strtold) (fn long-double (ptr (const char)) (ptr (ptr char))))
(decl (csym::strtoul)
 (fn unsigned-long (ptr (const char)) (ptr (ptr char)) int))
(decl (csym::system) (fn int (ptr (const char))))
(decl (csym::wctomb) (fn int (ptr char) csym::wchar_t))
(decl (csym::wcstombs)
 (fn csym::size_t (ptr char) (ptr (const csym::wchar_t)) csym::size_t))
(%line 130 "csample/posix-header/stdlib.h")
(def (struct csym::unnamed3) (decl csym::quot long-long)
 (decl csym::rem long-long))
(deftype csym::lldiv_t (struct csym::unnamed3))
(decl (csym::atoll) (fn long-long (ptr (const char))))
(decl (csym::llabs) (fn long-long long-long))
(decl (csym::lldiv) (fn csym::lldiv_t long-long long-long))
(decl (csym::strtoll) (fn long-long (ptr (const char)) (ptr (ptr char)) int))
(decl (csym::strtoull)
 (fn unsigned-long-long (ptr (const char)) (ptr (ptr char)) int))
(decl (csym::_@e@XIT) (fn void int))
(%line 161 "csample/posix-header/stdlib.h")
(decl (csym::rand_r) (fn int (ptr unsigned-int)))
(decl (csym::setenv) (fn int (ptr (const char)) (ptr (const char)) int))
(decl (csym::unsetenv) (fn void (ptr (const char))))
(%line 175 "csample/posix-header/stdlib.h")
(decl (csym::drand48) (fn double void))
(decl (csym::erand48) (fn double (array unsigned-short 3)))
(decl (csym::getsubopt)
 (fn int (ptr (ptr char)) (ptr (const (ptr char))) (ptr (ptr char))))
(decl (csym::grantpt) (fn int int))
(decl (csym::initstate) (fn (ptr char) unsigned-long (ptr char) long))
(decl (csym::jrand48) (fn long (array unsigned-short 3)))
(decl (csym::lcong48) (fn void (array unsigned-short 7)))
(decl (csym::lrand48) (fn long void))
(decl (csym::mkstemp) (fn int (ptr char)))
(decl (csym::mktemp) (fn (ptr char) (ptr char)))
(decl (csym::mrand48) (fn long void))
(decl (csym::nrand48) (fn long (array unsigned-short 3)))
(decl (csym::posix_openpt) (fn int int))
(decl (csym::ptsname) (fn (ptr char) int))
(decl (csym::putenv) (fn int (ptr (const char))))
(decl (csym::random) (fn long void))
(decl (csym::realpath) (fn (ptr char) (ptr (const char)) (array char)))
(decl (csym::seed48) (fn (ptr unsigned-short) (array unsigned-short 3)))
(decl (csym::setkey) (fn int (ptr (const char))))
(decl (csym::setstate) (fn (ptr char) (ptr char)))
(decl (csym::srand48) (fn void long))
(decl (csym::srandom) (fn void unsigned-long))
(decl (csym::unlockpt) (fn int int))
(extern-decl csym::_malloc_options (ptr (const char)))
(extern-decl csym::_malloc_message
 (ptr
  (fn void (ptr (const char)) (ptr (const char)) (ptr (const char))
   (ptr (const char)))))
(%line 235 "csample/posix-header/stdlib.h")
(decl (csym::arc4random) (fn csym::__uint32_t void))
(decl (csym::arc4random_addrandom csym::dat csym::datlen)
 (fn void (ptr unsigned-char) int))
(decl (csym::arc4random_stir) (fn void void))
(decl (csym::getbsize) (fn (ptr char) (ptr int) (ptr long)))
(decl (csym::cgetcap) (fn (ptr char) (ptr char) (ptr (const char)) int))
(decl (csym::cgetclose) (fn int void))
(decl (csym::cgetent)
 (fn int (ptr (ptr char)) (ptr (ptr char)) (ptr (const char))))
(decl (csym::cgetfirst) (fn int (ptr (ptr char)) (ptr (ptr char))))
(decl (csym::cgetmatch) (fn int (ptr (const char)) (ptr (const char))))
(decl (csym::cgetnext) (fn int (ptr (ptr char)) (ptr (ptr char))))
(decl (csym::cgetnum) (fn int (ptr char) (ptr (const char)) (ptr long)))
(decl (csym::cgetset) (fn int (ptr (const char))))
(decl (csym::cgetstr) (fn int (ptr char) (ptr (const char)) (ptr (ptr char))))
(decl (csym::cgetustr) (fn int (ptr char) (ptr (const char)) (ptr (ptr char))))
(decl (csym::daemon) (fn int int int))
(decl (csym::devname) (fn (ptr char) int int))
(decl (csym::devname_r) (fn (ptr char) int int (ptr char) int))
(decl (csym::getloadavg) (fn int (array double) int))
(decl (csym::getprogname) (fn (ptr (const char)) void))
(decl (csym::heapsort)
 (fn int (ptr void) csym::size_t csym::size_t
  (ptr (fn int (ptr (const void)) (ptr (const void))))))
(decl (csym::mergesort)
 (fn int (ptr void) csym::size_t csym::size_t
  (ptr (fn int (ptr (const void)) (ptr (const void))))))
(decl (csym::qsort_r)
 (fn void (ptr void) csym::size_t csym::size_t (ptr void)
  (ptr (fn int (ptr void) (ptr (const void)) (ptr (const void))))))
(decl (csym::radixsort)
 (fn int (ptr (ptr (const unsigned-char))) int (ptr (const unsigned-char))
  unsigned-int))
(decl (csym::reallocf) (fn (ptr void) (ptr void) csym::size_t))
(decl (csym::setprogname) (fn void (ptr (const char))))
(decl (csym::sradixsort)
 (fn int (ptr (ptr (const unsigned-char))) int (ptr (const unsigned-char))
  unsigned-int))
(decl (csym::sranddev) (fn void void))
(decl (csym::srandomdev) (fn void void))
(decl (csym::strtoq)
 (fn csym::__int64_t (ptr (const char)) (ptr (ptr char)) int))
(decl (csym::strtouq)
 (fn csym::__uint64_t (ptr (const char)) (ptr (ptr char)) int))
(extern-decl csym::suboptarg (ptr char))
(%defconstant csym::i386 1)
(%defconstant csym::unix 1)
(%defconstant csym::|__I386| 1)
(%defconstant csym::|__I386__| 1)
(%defconstant csym::__unix 1)
(%defconstant csym::__unix__ 1)
(%defconstant csym::__@F@ree@BSD__ 1)
(%defconstant csym::__@GNUC__ 3)
(%defconstant csym::__@GNUC_MINOR__ 4)
(%defconstant csym::__@SIZE_TYPE__ unsigned-int)
(%defconstant csym::__@PTRDIFF_TYPE__ int)
(%defconstant csym::__@WCHAR_TYPE__ int)
(%defconstant csym::__@GNUG__ 3)
(%defconstant csym::__@LINE__ (- 1234567890))
(%defconstant csym::__@FILE__ (c-exp ""))
(%defconstant csym::__@DATE__ "Feb 13 2005")
(%defconstant csym::__@TIME__ "14:28:16")
(%defconstant csym::__@STDC__ 1)
(%defconstant csym::__@STDC_HOSTED__ 1)
(%defconstant csym::__@MCPP 2)
(%defconstant csym::time_t double)
(%defconstant csym::pid_t long)
(%defconstant csym::__complex__ (c-exp ""))
(%defmacro csym::__extension__ (csym::_arg0) csym::_arg0)
(%defmacro csym::__attribute__ (csym::_arg0)
 (common-lisp:list 'c-exp "" csym::_arg0))
(%defconstant csym::__inline (c-exp ""))
(%defmacro csym::__asm (csym::_arg0) (common-lisp:list 'c-exp "" csym::_arg0))
(%undef csym::i386)
(%undef csym::unix)
(%undef csym::__@GNUG__)
(%defconstant csym::_@STDLIB_H_ (c-exp ""))
(%defconstant csym::_@SYS_CDEFS_H_ (c-exp ""))
(%defconstant csym::__@BEGIN_DECLS (c-exp ""))
(%defconstant csym::__@END_DECLS (c-exp ""))
(%defmacro csym::__@GNUC_PREREQ__ (csym::_arg0 csym::_arg1)
 (common-lisp:list 'or
                   (common-lisp:list '> 'csym::__@GNUC__ csym::_arg0)
                   (common-lisp:list 'and
                                     (common-lisp:list '==
                                                       'csym::__@GNUC__
                                                       csym::_arg0)
                                     (common-lisp:list '>=
                                                       'csym::__@GNUC_MINOR__
                                                       csym::_arg1))))
(%defmacro csym::__@P (csym::_arg0) csym::_arg0)
(%defmacro csym::__@CONCAT1 (csym::_arg0 csym::_arg1)
 '"<macro with ## operator>")
(%defmacro csym::__@CONCAT (csym::_arg0 csym::_arg1)
 (common-lisp:list 'csym::__@CONCAT1 csym::_arg0 csym::_arg1))
(%defmacro csym::__@STRING (csym::_arg0)
 (common-lisp:list 'csym::_@C2SC_STRINGIFY csym::_arg0))
(%defmacro csym::__@XSTRING (csym::_arg0)
 (common-lisp:list 'csym::__@STRING csym::_arg0))
(%defconstant csym::__const (const int))
(%defconstant csym::__signed signed-int)
(%defconstant csym::__volatile (volatile int))
(%defconstant csym::__dead2 (csym::__attribute__ csym::__noreturn__))
(%defconstant csym::__pure2 (csym::__attribute__ csym::__const__))
(%defconstant csym::__unused (csym::__attribute__ csym::__unused__))
(%defconstant csym::__used (csym::__attribute__ csym::__used__))
(%defconstant csym::__packed (csym::__attribute__ csym::__packed__))
(%defmacro csym::__aligned (csym::_arg0)
 (common-lisp:list 'csym::__attribute__
                   (common-lisp:list 'csym::__aligned__ csym::_arg0)))
(%defmacro csym::__section (csym::_arg0)
 (common-lisp:list 'csym::__attribute__
                   (common-lisp:list 'csym::__section__ csym::_arg0)))
(%defconstant csym::__pure (csym::__attribute__ csym::__pure__))
(%defconstant csym::__always_inline
 (csym::__attribute__ csym::__always_inline__))
(%defmacro csym::__nonnull (csym::_arg0)
 (common-lisp:list 'csym::__attribute__
                   (common-lisp:list 'csym::__nonnull__ csym::_arg0)))
(%defconstant csym::__@LONG_LONG_SUPPORTED (c-exp ""))
(%defconstant csym::__restrict (c-exp ""))
(%defmacro csym::__predict_true (csym::_arg0)
 (common-lisp:list 'csym::__builtin_expect csym::_arg0 '1))
(%defmacro csym::__predict_false (csym::_arg0)
 (common-lisp:list 'csym::__builtin_expect csym::_arg0 '0))
(%defmacro csym::__offsetof (csym::_arg0 csym::_arg1)
 (common-lisp:list 'cast
                   'csym::size_t
                   (common-lisp:list 'ptr
                                     (common-lisp:list 'fref
                                                       (common-lisp:list 'mref
                                                                         (common-lisp:list
                                                                          'cast
                                                                          (common-lisp:list
                                                                           'ptr
                                                                           csym::_arg0)
                                                                          '0))
                                                       csym::_arg1))))
(%defmacro csym::__rangeof (csym::_arg0 csym::_arg1 csym::_arg2)
 (common-lisp:list '-
                   (common-lisp:list 'csym::__offsetof csym::_arg0 csym::_arg2)
                   (common-lisp:list 'csym::__offsetof
                                     csym::_arg0
                                     csym::_arg1)))
(%defmacro csym::__printflike (csym::_arg0 csym::_arg1)
 (common-lisp:list 'csym::__attribute__
                   (common-lisp:list 'csym::__format__
                                     'csym::__printf__
                                     csym::_arg0
                                     csym::_arg1)))
(%defmacro csym::__scanflike (csym::_arg0 csym::_arg1)
 (common-lisp:list 'csym::__attribute__
                   (common-lisp:list 'csym::__format__
                                     'csym::__scanf__
                                     csym::_arg0
                                     csym::_arg1)))
(%defmacro csym::__printf0like (csym::_arg0 csym::_arg1)
 (common-lisp:list 'c-exp "" csym::_arg0 csym::_arg1))
(%defmacro csym::__strong_reference (csym::_arg0 csym::_arg1)
 (common-lisp:list 'c-exp
                   "extern __typeof ( ~0@*~a ) ~1@*~a __attribute__ ( ( __alias__ ( _C2SC_STRINGIFY ( ~0@*~a ) ) ) ) ;"
                   csym::_arg0
                   csym::_arg1))
(%defmacro csym::__weak_reference (csym::_arg0 csym::_arg1)
 (common-lisp:list 'c-exp
                   "__asm__ ( \".weak \" _C2SC_STRINGIFY ( ~1@*~a ) ) ; __asm__ ( \".equ \" _C2SC_STRINGIFY ( ~1@*~a ) \", \" _C2SC_STRINGIFY ( ~0@*~a ) )"
                   csym::_arg0
                   csym::_arg1))
(%defmacro csym::__warn_references (csym::_arg0 csym::_arg1)
 (common-lisp:list 'c-exp
                   "__asm__ ( \".section .gnu.warning.\" _C2SC_STRINGIFY ( ~0@*~a ) ) ; __asm__ ( \".asciz \\\"\" ~1@*~a \"\\\"\" ) ; __asm__ ( \".previous\" )"
                   csym::_arg0
                   csym::_arg1))
(%defmacro csym::__@IDSTRING (csym::_arg0 csym::_arg1)
 (common-lisp:list 'c-exp
                   "__asm__ ( \".ident\\t\\\"\" ~1@*~a \"\\\"\" )"
                   csym::_arg0
                   csym::_arg1))
(%defmacro csym::__@FBSDID (csym::_arg0)
 (common-lisp:list 'csym::__@IDSTRING
                   (common-lisp:list 'csym::__@CONCAT
                                     'csym::__rcsid_
                                     'csym::__@LINE__)
                   csym::_arg0))
(%defmacro csym::__@RCSID (csym::_arg0)
 (common-lisp:list 'csym::__@IDSTRING
                   (common-lisp:list 'csym::__@CONCAT
                                     'csym::__rcsid_
                                     'csym::__@LINE__)
                   csym::_arg0))
(%defmacro csym::__@RCSID_SOURCE (csym::_arg0)
 (common-lisp:list 'csym::__@IDSTRING
                   (common-lisp:list 'csym::__@CONCAT
                                     'csym::__rcsid_source_
                                     'csym::__@LINE__)
                   csym::_arg0))
(%defmacro csym::__@SCCSID (csym::_arg0)
 (common-lisp:list 'csym::__@IDSTRING
                   (common-lisp:list 'csym::__@CONCAT
                                     'csym::__sccsid_
                                     'csym::__@LINE__)
                   csym::_arg0))
(%defmacro csym::__@COPYRIGHT (csym::_arg0)
 (common-lisp:list 'csym::__@IDSTRING
                   (common-lisp:list 'csym::__@CONCAT
                                     'csym::__copyright_
                                     'csym::__@LINE__)
                   csym::_arg0))
(%defmacro csym::__@DECONST (csym::_arg0 csym::_arg1)
 (common-lisp:list 'cast
                   csym::_arg0
                   (common-lisp:list 'cast
                                     'csym::uintptr_t
                                     (common-lisp:list 'cast
                                                       (common-lisp:list 'ptr
                                                                         (common-lisp:list
                                                                          'const
                                                                          'void))
                                                       csym::_arg1))))
(%defmacro csym::__@DEVOLATILE (csym::_arg0 csym::_arg1)
 (common-lisp:list 'cast
                   csym::_arg0
                   (common-lisp:list 'cast
                                     'csym::uintptr_t
                                     (common-lisp:list 'cast
                                                       (common-lisp:list 'ptr
                                                                         (common-lisp:list
                                                                          'volatile
                                                                          'void))
                                                       csym::_arg1))))
(%defmacro csym::__@DEQUALIFY (csym::_arg0 csym::_arg1)
 (common-lisp:list 'cast
                   csym::_arg0
                   (common-lisp:list 'cast
                                     'csym::uintptr_t
                                     (common-lisp:list 'cast
                                                       (common-lisp:list 'ptr
                                                                         (common-lisp:list
                                                                          'const
                                                                          'volatile
                                                                          'void))
                                                       csym::_arg1))))
(%defconstant csym::__@POSIX_VISIBLE 200112)
(%defconstant csym::__@XSI_VISIBLE 600)
(%defconstant csym::__@BSD_VISIBLE 1)
(%defconstant csym::__@ISO_C_VISIBLE 1999)
(%defconstant csym::@NULL (cast (ptr void) 0))
(%defconstant csym::_@SYS__TYPES_H_ (c-exp ""))
(%defconstant csym::_@MACHINE__TYPES_H_ (c-exp ""))
(%defconstant csym::__@GNUC_VA_LIST (c-exp ""))
(%defconstant csym::_@RUNE_T_DECLARED (c-exp ""))
(%defconstant csym::_@SIZE_T_DECLARED (c-exp ""))
(%defconstant csym::_@WCHAR_T_DECLARED (c-exp ""))
(%defconstant csym::@EXIT_FAILURE 1)
(%defconstant csym::@EXIT_SUCCESS 0)
(%defconstant csym::@RAND_MAX 2147483647)
(%defconstant csym::@MB_CUR_MAX csym::__mb_cur_max)
(%defconstant csym::_@MKSTEMP_DECLARED (c-exp ""))
(%defconstant csym::_@MKTEMP_DECLARED (c-exp ""))
(%defconstant csym::_@SETKEY_DECLARED (c-exp ""))
(%defmacro csym::alloca (csym::_arg0)
 (common-lisp:list 'csym::__builtin_alloca csym::_arg0))
