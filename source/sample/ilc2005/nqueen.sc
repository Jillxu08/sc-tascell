(%include "systhr.sh")
(%include "copygc.sh")
(%include "xccmem.sh")

(c-exp "#include \"xccmem.h\"")

(%defconstant MAXNPROC 64)

;;(static-def dummy (array char 15001))
(deftype csym::proc_env (ptr (struct _proc_locals)))

(decl (csym::sqrt x) (fn double double))

(def (struct nq-unnamed1)
  (decl result_buf_p (ptr int))
  (decl result_port_p (ptr int))
  (decl n int)
  (decl k int)
  (decl a (array int 20))
  (decl lb (array int 40))
  (decl rb (array int 40)))

(def (union nq-unnamed0)
  (decl t1 (struct nq-unnamed1)))

(def (struct _task_buf)
 (decl f (ptr (fn void))); proc_env (ptr (struct _task_buf)))))
 (decl sender int) (decl why int)
 (decl a (union nq-unnamed0)))

(deftype task_buf_t (struct _task_buf))

(def (struct _req_buf) 
  (decl task_buf_p (ptr task_buf_t))
  (decl task_port_p (ptr int))
  (decl req_port_p (ptr (ptr void))))

(deftype req_buf_t (struct _req_buf))

(def (struct _proc_locals) 
  (decl n_proc int) 
  (decl myid int)
  (decl task_buf task_buf_t)
  (decl task_port int)
  (decl req_buf req_buf_t)
  (decl dumy1 (array (ptr void) MAXNPROC))
  (decl req_port (ptr void))
  (decl dumy2 (array (ptr void) MAXNPROC))
  (decl a (array int 20))
  (decl lb (array int 40))
  (decl rb (array int 40))
  (decl dumy3 (array (ptr void) MAXNPROC)))

(decl pe (array (struct _proc_locals) MAXNPROC))

(def (csym::init_proc_locals pr id num_proc) 
     (fn void proc_env int int)
  (decl i int)
  (for ((= i 0) (< i 20) (inc i))
    (= (aref (fref (mref pr) a) i) i))
  (for ((= i 0) (< i 40) (inc i))
    (= (aref (fref (mref pr) lb) i)
       (= (aref (fref (mref pr) rb) i) 0)))
  (= (fref (mref pr) n_proc) num_proc)
  (= (fref (mref pr) myid) id)
  (= (fref (mref pr) req_port) 0))

(def (tf_do_nothing pr task_buf_p) 
    (fn void proc_env (ptr task_buf_t)))

(def (csym::refuse_req pr) (fn void proc_env)
  (def req_buf_p (ptr void)
    (csym::atomic_read_ptr (fref (mref pr) req_port)))
  (if req_buf_p
      (begin
       (def rbp (ptr req_buf_t)
         (cast (ptr req_buf_t) req_buf_p))
       (csym::start_read_after_read)
       (csym::atomic_write_ptr (fref (mref pr) req_port) 0)
       (= (fref (mref (fref (mref rbp) task_buf_p)) f)
          tf_do_nothing)
       (csym::finish_write_before_write)
       (csym::atomic_write_int
        (mref (fref (mref rbp) task_port_p))
        1))))

(def (steal_run_task pr req_port_p why)
     (fn void proc_env (ptr (ptr void)) int)
  (= (fref (mref pr) task_port) 0)
  (= (fref (fref (mref pr) task_buf) why) why)
  (= (fref (fref (mref pr) req_buf) task_buf_p)
     (ptr (fref (mref pr) task_buf)))
  (= (fref (fref (mref pr) req_buf) task_port_p)
     (ptr (fref (mref pr) task_port)))
  (= (fref (fref (mref pr) req_buf) req_port_p)
     (ptr (fref (mref pr) req_port)))
  (csym::finish_write_before_write)
  (while (csym::cas_ptr (mref req_port_p) 0
                  (cast (ptr void) (ptr (fref (mref pr) req_buf))))
    (csym::refuse_req pr))
  (while (== (csym::atomic_read_int 
              (fref (mref pr) task_port))
             0)
    (csym::refuse_req pr))
  (csym::start_read_after_read)
  ((fref (fref (mref pr) task_buf) f)
   pr
   (ptr (fref (mref pr) task_buf))))

(decl bv int)

(def (helper p) (fn (ptr void) (ptr void))
  (def pr proc_env (cast proc_env p))
  (decl r double) (decl q double) (decl n int)
  (csym::systhr_bind_to_proc (fref (mref pr) myid))
  (csym::systhr_bind_to_proc (fref (mref pr) myid))
  (do-while (csym::cas_int bv n (+ n 1))
    (= n bv))
  (for ((exps
         (= r (csym::sqrt (+ 0.5 (fref (mref pr) myid))))
         (= q (csym::sqrt (+ r (fref (mref pr) myid))))
         (-= r (cast int r)))
        0
        (exps (= r (+ (* r 3.0) q))
              (-= r (cast int r))))
    (def tg int (cast int (* (fref (mref pr) n_proc) r)))
    (if (!= tg (fref (mref pr) myid))
        (begin
         (steal_run_task pr
                         (ptr (fref (aref pe tg) req_port)) 0)))))

(def (init_parallel num_proc) (fn void int)
  (decl i int)
  (for ((= i 0) (< i num_proc) (inc i))
    (csym::init_proc_locals (+ pe i) i num_proc))
  (csym::systhr_init num_proc)
  (csym::systhr_bind_to_proc 0)
  (= bv 1)
  (for ((= i 1) (< i num_proc) (inc i))
    (csym::systhr_create helper (+ pe i)))
  (while (< (csym::atomic_read_int bv) num_proc)
    (csym::start_read_after_read)))

(decl tv0 (struct timeval))

(decl (nqueens pr bkf n k)
  (fn int proc_env (ptr (lightweight int (ptr req-buf-t))) int int))

(def (tf_backup_and_nqueens pr task_buf_p)
    (fn void proc_env (ptr task_buf_t)) 
  (def (bk req-buf-p) (lightweight int (ptr req-buf-t))
    (return 0) )
  (decl a_bak (array int 20)) (decl lb_bak (array int 40))
  (decl rb_bak (array int 40)) (decl jj int)
  (decl saved_result_port_p (ptr int))
  (decl saved_result_buf_p (ptr int))
  (def tbp (ptr task_buf_t) task_buf_p)

  (for ((= jj 0) (< jj 20) (inc jj))
    (= (aref a_bak jj)
       (aref (fref (mref pr) a) jj)))
  (for ((= jj 0) (< jj 40) (inc jj))
    (= (aref lb_bak jj)
       (aref (fref (mref pr) lb) jj)))
  (for ((= jj 0) (< jj 40) (inc jj))
    (= (aref rb_bak jj)
       (aref (fref (mref pr) rb) jj)))
  (= saved_result_port_p
     (fref (fref (fref (mref tbp) a) t1) result_port_p))
  (= saved_result_buf_p
     (fref (fref (fref (mref tbp) a) t1) result_buf_p))
  (for ((= jj 0) (< jj 20) (inc jj))
    (= (aref (fref (mref pr) a) jj)
       (aref (fref (fref (fref (mref tbp) a) t1) a)
             jj)))
  (for ((= jj 0) (< jj 40) (inc jj))
    (= (aref (fref (mref pr) lb) jj)
       (aref (fref (fref (fref (mref tbp) a) t1) lb)
             jj)))
  (for ((= jj 0) (< jj 40) (inc jj))
    (= (aref (fref (mref pr) rb) jj)
       (aref (fref (fref (fref (mref tbp) a) t1) rb)
             jj)))
  (begin
   (def n int
     (fref (fref (fref (mref tbp) a) t1) n))
   (def k int
     (fref (fref (fref (mref tbp) a) t1) k))
   (def s int 0)
   (= s (nqueens pr bk n k))
   (= (mref saved_result_buf_p) s))
  (csym::finish_write_before_write)
  (csym::atomic_write_int (mref saved_result_port_p) 1)
  (for ((= jj 0) (< jj 20) (inc jj))
    (= (aref (fref (mref pr) a) jj)
       (aref a_bak jj)))
  (for ((= jj 0) (< jj 40) (inc jj))
    (= (aref (fref (mref pr) lb) jj)
       (aref lb_bak jj)))
  (for ((= jj 0) (< jj 40) (inc jj))
    (= (aref (fref (mref pr) rb) jj)
       (aref rb_bak jj))))

(def (nqueens pr bkf n k)
    (fn int proc_env (ptr (lightweight int (ptr req-buf-t))) int int)
  ;;  (decl dummy (array char 12))
  (if (== n k) (return 1)
  (begin 
   (def s int 0) 
   (def si int k)
   (def ei int n)
   (def ret int 1)
   (decl saved_req_port_p (array (ptr (ptr void)) 30))
   (decl result_buf (array int 30))
   (decl result_port (array int 30))
   
   (def (bk req-buf-p) (lightweight int (ptr req-buf-t))
     (begin
      (if ret (= ret (bkf req_buf_p)))
      (if ret (return 1))
      (while (< si ei)
        (def i int (-- ei))
        (def ai int (aref (fref (mref pr) a) i))
        (if (not (or (aref (fref (mref pr) lb)
                           (+ (- (- n 1) ai) k))
                     (aref (fref (mref pr) rb) (+ ai k))))
            (begin
             (def ak int (aref (fref (mref pr) a) k))
             (= (aref (fref (mref pr) a) i) ak)
             (= (aref (fref (mref pr) a) k) ai)
             (= (aref (fref (mref pr) lb)
                      (+ (- (- n 1) ai) k))
                1)
             (= (aref (fref (mref pr) rb) (+ ai k)) 1)
             (begin 
              (decl jj int)
              (def tbp (ptr task_buf_t)
                (fref (mref req_buf_p) task_buf_p))
              (def tpp (ptr int)
                (fref (mref req_buf_p) task_port_p))
              (= (aref saved_req_port_p i)
                 (fref (mref req_buf_p) req_port_p))
              (= (aref result_port i) 0)
              (= (fref (mref tbp) f) tf_backup_and_nqueens)
              (= (fref (mref tbp) sender)
                 (fref (mref pr) myid))
              (= (fref (fref (fref (mref tbp) a) t1)
                       result_buf_p)
                 (+ result_buf i))
              (= (fref (fref (fref (mref tbp) a) t1)
                       result_port_p)
                 (+ result_port i))
              (= (fref (fref (fref (mref tbp) a) t1) n)
                 n)
              (= (fref (fref (fref (mref tbp) a) t1) k)
                 (+ k 1))
              (for ((= jj 0) (< jj 20) (inc jj))
                (= (aref (fref (fref (fref (mref tbp) a) t1) a) jj)
                   (aref (fref (mref pr) a) jj)))
              (for ((= jj 0) (< jj 40) (inc jj))
                (= (aref (fref (fref (fref (mref tbp) a) t1) lb) jj)
                   (aref (fref (mref pr) lb) jj)))
             (for ((= jj 0) (< jj 40) (inc jj))
                (= (aref (fref (fref (fref (mref tbp) a) t1) rb) jj)
                   (aref (fref (mref pr) rb) jj)))
              (csym::finish_write_before_write)
              (csym::atomic_write_int (mref tpp) 1))
             (= ai (aref (fref (mref pr) a) k))
             (= ak (aref (fref (mref pr) a) i))
             (= (aref (fref (mref pr) a) i) ai)
             (= (aref (fref (mref pr) a) k) ak)
             (= (aref (fref (mref pr) lb)
                      (+ (- (- n 1) ai) k))
                0)
             (= (aref (fref (mref pr) rb) (+ ai k)) 0)
             (return 1))
            (begin
             (= (aref result_port i) 1)
             (= (aref result_buf i) 0))))
      (return 0)))

   (while (< si ei)
     (def i2 int (inc si))
     ;; (POLL (fref pr -> req-port) bk)
     (do-while 0
       (def req_buf_p (ptr void)
         (csym::atomic_read_ptr (fref (mref pr) req_port)))
       (if req_buf_p
           (begin
            (def rbp (ptr req_buf_t)
              (cast (ptr req_buf_t) req_buf_p))
            (csym::start_read_after_read)
            (csym::atomic_write_ptr (fref (mref pr) req_port) 0)
            (if (== (bk rbp) 0)
                (begin
                 (= (fref (mref (fref (mref rbp) task_buf_p)) f)
                    tf_do_nothing)
                 (csym::finish_write_before_write)
                 (csym::atomic_write_int
                  (mref (fref (mref rbp) task_port_p))
                  1))))))
     ;; POLL                                            -->
     (begin 
      (def ai int (aref (fref (mref pr) a) i2))
      (if (not (or (aref (fref (mref pr) lb)
                         (+ (- (- n 1) ai) k))
                   (aref (fref (mref pr) rb) (+ ai k))))
          (begin
           (def ak int (aref (fref (mref pr) a) k))
           (= (aref (fref (mref pr) a) i2) ak)
           (= (aref (fref (mref pr) a) k) ai)
           (= (aref (fref (mref pr) lb)
                    (+ (- (- n 1) ai) k))
              1)
           (= (aref (fref (mref pr) rb) (+ ai k)) 1)
           (begin
            (def (bk2 req-buf-p) (lightweight int (ptr req-buf-t))
              (decl r int)
              (= ai (aref (fref (mref pr) a) k))
              (= ak (aref (fref (mref pr) a) i2))
              (= (aref (fref (mref pr) a) i2) ai)
              (= (aref (fref (mref pr) a) k) ak)
              (= (aref (fref (mref pr) lb)
                       (+ (- (- n 1) ai) k))
                 0)
              (= (aref (fref (mref pr) rb) (+ ai k)) 0)
              (= r (bk req_buf_p))
              (= ai (aref (fref (mref pr) a) i2))
              (= ak (aref (fref (mref pr) a) k))
              (= (aref (fref (mref pr) a) i2) ak)
              (= (aref (fref (mref pr) a) k) ai)
              (= (aref (fref (mref pr) lb)
                       (+ (- (- n 1) ai) k))
                 1)
              (= (aref (fref (mref pr) rb) (+ ai k)) 1)
              (return r))
            (if (> n (+ k 1))
                (+= s (nqueens pr bk2 n (+ k 1)))
                (inc s))
            )
           (= ai (aref (fref (mref pr) a) k))
           (= ak (aref (fref (mref pr) a) i2))
           (= (aref (fref (mref pr) a) i2) ai)
           (= (aref (fref (mref pr) a) k) ak)
           (= (aref (fref (mref pr) lb)
                    (+ (- (- n 1) ai) k))
              0)
           (= (aref (fref (mref pr) rb) (+ ai k)) 0)))))
   (while (< si n) 
     (def i3 int (inc si))
     (while (== (csym::atomic_read_int (aref result_port i3))
                0)
       (steal_run_task pr (aref saved_req_port_p i3) 1))
     (csym::start_read_after_read)
     (+= s (aref result_buf i3)))
   (return s))))

(def (main argc argv) (fn int int (ptr (ptr char)))
  (decl tv (array (struct timeval) 2)) (decl i int)
  (decl n int) (decl s int) (def num_proc int 2)
  (def (bk req-buf-p) (lightweight int (ptr req-buf-t))
    (return 0))
  (if (> argc 1) (= num_proc (csym::atoi (aref argv 1))))
  (if (> argc 2) (= n (csym::atoi (aref argv 2))))
  (init_parallel num_proc)
  (csym::gettimeofday (+ tv 0) 0)
  (= tv0 (aref tv 0))
  (= s (nqueens (+ pe 0) bk n 0))
  (csym::gettimeofday (+ tv 1) 0)
  (csym::printf "answers: %d~|12|" s)
  (csym::printf "%lf~|12|"
          (+ (- (fref (aref tv 1) tv_sec)
                (fref (aref tv 0) tv_sec))
             (* (- (fref (aref tv 1) tv_usec)
                   (fref (aref tv 0) tv_usec))
                0.000001))))
